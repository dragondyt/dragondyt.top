import{_ as t,o as d,c as r,e}from"./app-5de3c553.js";const a={},p=e('<figure class="highlight java"><figcaption data-lang="java"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {</pre></td></tr><tr><td data-num="3"></td><td><pre>      // 虚拟头结点</pre></td></tr><tr><td data-num="4"></td><td><pre>      ListNode dummy = new ListNode(-1), p = dummy;</pre></td></tr><tr><td data-num="5"></td><td><pre>      ListNode p1 = l1, p2 = l2;</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>      while (p1 != null &amp;&amp; p2 != null) {</pre></td></tr><tr><td data-num="8"></td><td><pre>        // 比较 p1 和 p2 两个指针</pre></td></tr><tr><td data-num="9"></td><td><pre>        // 将值较小的的节点接到 p 指针</pre></td></tr><tr><td data-num="10"></td><td><pre>        if (p1.val &gt; p2.val) {</pre></td></tr><tr><td data-num="11"></td><td><pre>          p.next = p2;</pre></td></tr><tr><td data-num="12"></td><td><pre>          p2 = p2.next;</pre></td></tr><tr><td data-num="13"></td><td><pre>        } else {</pre></td></tr><tr><td data-num="14"></td><td><pre>          p.next = p1;</pre></td></tr><tr><td data-num="15"></td><td><pre>          p1 = p1.next;</pre></td></tr><tr><td data-num="16"></td><td><pre>        }</pre></td></tr><tr><td data-num="17"></td><td><pre>        // p 指针不断前进</pre></td></tr><tr><td data-num="18"></td><td><pre>        p = p.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>      }</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>      if (p1 != null) {</pre></td></tr><tr><td data-num="22"></td><td><pre>        p.next = p1;</pre></td></tr><tr><td data-num="23"></td><td><pre>      }</pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>      if (p2 != null) {</pre></td></tr><tr><td data-num="26"></td><td><pre>        p.next = p2;</pre></td></tr><tr><td data-num="27"></td><td><pre>      }</pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>      return dummy.next;</pre></td></tr><tr><td data-num="30"></td><td><pre>    }</pre></td></tr><tr><td data-num="31"></td><td><pre>}</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure>',1),n=[p];function i(s,u){return d(),r("div",null,n)}const m=t(a,[["render",i],["__file","2a1f0504.html.vue"]]);export{m as default};
