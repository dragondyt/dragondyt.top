const e=JSON.parse('{"key":"v-3a1f88a4","path":"/page/2/","title":"首页","lang":"en-US","frontmatter":{"gen":true,"title":"首页","layout":"IndexLayout","head":[["link",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.dragondyt.top/rss.xml","title":"RSS"}],["link",{"rel":"alternate","type":"application/json","href":"https://blog.dragondyt.top/feed.json","title":"RSS"}],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://blog.dragondyt.top/atom.xml","title":"RSS"}],["link",{"rel":"amphtml","href":"./page/2/"}]],"current":2,"prev":1,"next":3,"total":4,"mid_size":1,"end_size":1,"space":"...","base":"/","pagePostList":[{"path":"/8612fa7f/79666db/7b216a3b/7cab1e06.html","title":"二叉搜索树","date":"2022-07-20","description":"别名\\n二叉搜索树,二叉查找树，BST，Binary Search Tree\\n特点\\n\\n若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值；\\n任意节点的右子树不空，则右子树上所有结点的值均大于它的根结点的值；\\n任意节点的左、右子树也分别为二叉查找树；\\n没有键值相等的节点。","symbolsCount":"283 ","symbolsTime":"1","category":{}},{"path":"/8612fa7f/b7e144d1/e85d694a/c7081503.html","title":"[105]从前序与中序遍历序列构造二叉树","date":"2022-07-20","description":"/** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode() {} * TreeNode(int val) { this.val = val; } * TreeNode(int val, TreeNode left, TreeNode right) { * this.val = val; * this.left = left; * this.right = right; * } * } */class...","symbolsCount":"2.5k","symbolsTime":"2","category":{"path":"/categories/11159622/b7e144d1/e85d694a/","name":"二叉树"}},{"path":"/8612fa7f/b7e144d1/e85d694a/9b7cc1d2.html","title":"[124]二叉树中的最大路径和","date":"2022-07-20","description":"路径 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 至多出现一次。该路径 至少包含一个 节点，且不一定经过根节点。\\n路径和 是路径中各节点值的总和。\\n给你一个二叉树的根节点 root ，返回其 最大路径和。\\n示例 1：\\n\\n输入：root = [1,2,3]\\n输出：6\\n解释：最优路径是 2 -&amp;gt; 1 -&amp;gt; 3 ，路径和为 2 + 1 + 3 = 6\\n示例 2：\\n\\n输入：root = [-10,9,20,null,null,15,7]\\n输出：42\\n解释：最优路径是 15 -&amp;gt; 20 -&amp;gt;...","symbolsCount":"1.7k","symbolsTime":"2","category":{"path":"/categories/11159622/b7e144d1/e85d694a/","name":"二叉树"}},{"path":"/8612fa7f/b7e144d1/e85d694a/77c5fdb1.html","title":"[230]二叉搜索树中第K小的元素","date":"2022-07-20","description":"class Solution { int rank,res = 0; public int kthSmallest(TreeNode root, int k) { traverse(root,k); return res; } private void traverse(TreeNode root, int k) { if (root == null) { return; } traverse(root.left,k); //二叉搜索树的特点，若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值，因此先序遍历的就是第k小 rank++; if (k == rank) { res...","symbolsCount":"622 ","symbolsTime":"1","category":{"path":"/categories/11159622/b7e144d1/e85d694a/","name":"二叉树"}},{"path":"/8612fa7f/47867b98/Java/fd72446f.html","title":"gateway配合nacos SERVICE_UNAVAILABLE “Unable to find instance for xxx","date":"2021-05-14","cover":"https://proprikol.ru/wp-content/uploads/2020/07/kartinki-zimnij-vecher-27.jpg","description":"# gateway配合nacos 找不到服务的问题\\n\\ngateway版本: 3.0.2\\n\\nnacos版本: 1.4.1\\n\\ngateway出错了,没有任何异常信息,增加自定义异常处理后,通过日志发现一个关键词NoLoadBalancer,突然就想到Spring Cloud2020移除了Ribbon,加入依赖后成功解决问题.\\n\\n&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;...","symbolsCount":"1.1k","symbolsTime":"1","category":{"path":"/categories/java/","name":"java"}},{"path":"/8612fa7f/ec060e02/Hadoop/15d9e331.html","title":"win10下hadoop学习","date":"2021-04-23","cover":"https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/hadoop-consulting-and-support.svg","description":"# 下载\\n下载hadoop\\n\\n# 配置环境变量\\n\\npath路径\\n\\n# 配置文件\\nhadoop-3.2.2&#92;etc&#92;hadoop&#92;core-site.xml\\n\\n&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;?xml-stylesheet type=&amp;quot;text/xsl&amp;quot;...","symbolsCount":"9.9k","symbolsTime":"9","category":{"path":"/categories/ec060e02/","name":"大数据"}},{"path":"/8612fa7f/47867b98/Java/9c47706b.html","title":"win10下编译以及调试openjdk","date":"2020-12-05","cover":"https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/s1200","description":"# 编译OpenJDK\\n# 安装编译环境\\n# 下载openjdk\\n使用git clone（如果觉得慢可以使用coding导入的jdk）\\n# 安装编译工具\\n# 1.win下Cygwin64环境编译\\n\\n安装Cygwin\\n\\n官方下载\\n设置下载源\\n\\n需要安装的包\\n\\n补充：需要安装autoconf\\n\\n编译选项&amp;amp;检查\\n\\nbash ./configure -with-freetype=buddle -enable-debug -with-target-bits=64 -disable-ccache\\n\\n构建\\n\\nmake all\\n\\n# 2.win下linux环境编译（ubuntu...","symbolsCount":"5k","symbolsTime":"5","category":{"path":"/categories/1868f51e/","name":"教程"}},{"path":"/computer-science/note/theme-shoka-doc/85a3718.html","title":"Step.2 基本配置","date":"2020-08-13","description":"🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能\\n\\n# 站点别称\\n\\nalternate: Yume Shoka\\n\\n这里设置的名称代替Logo，显示在页面顶部，以及页尾©️处\\n# 静态文件目录\\n\\nstatics: / #//cdn.jsdelivr.net/gh/amehime/shoka@latest/\\n\\n默认值是/，指使用本地静态文件\\n可以修改成//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/这种形式，以使用jsDelivr进行加速。\\nPS：jsDelivr并不是实时更新，重新生成文件后需要耐心等待\\n\\ncss:...","symbolsCount":"9.5k","symbolsTime":"9","category":{"path":"/categories/11159622/97a3d3dd/Theme-Shoka-Documentation/","name":"Theme Shoka Documentation"}},{"path":"/computer-science/note/theme-shoka-doc/d30922d5.html","title":"Step.1 依赖插件","date":"2020-08-13","description":"🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能\\n\\n请务必将hexo-renderer-multi-markdown-it升级到最新版，目前为 0.1.5\\n\\nTheme...","symbolsCount":"4.6k","symbolsTime":"4","category":{"path":"/categories/11159622/97a3d3dd/Theme-Shoka-Documentation/","name":"Theme Shoka Documentation"}},{"path":"/computer-science/note/theme-shoka-doc/b7629dd4.html","title":"Step.3 界面显示","date":"2020-08-13","description":"🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能\\n\\n# 首页置顶文章\\n在文章的Front Matter设置sticky: true，则该文章将显示在首页最上方的置顶文章列。\\n多篇文章按照发布时间倒序排列，不分页。\\n\\n---title: 置顶文章sticky: true---\\n\\n# 首页精选分类\\n想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。\\n\\n首先，修改站点配置：\\n找到category_map:，配置每个分类对应的英文映射，比如：\\n\\ncategory_map: 计算机科学: computer-science Java:...","symbolsCount":"6.6k","symbolsTime":"6","category":{"path":"/categories/11159622/97a3d3dd/Theme-Shoka-Documentation/","name":"Theme Shoka Documentation"}}],"stickyPostList":[],"catlist":[],"symbolsCount":"0 ","symbolsTime":"1","categories":[],"tags":[]},"headers":[]}');export{e as data};
