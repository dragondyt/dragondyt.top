import{_ as t,o as d,c as r,e as a}from"./app-5de3c553.js";const e={},n=a('<figure class="highlight java"><figcaption data-lang="java"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for singly-linked list.</pre></td></tr><tr><td data-num="3"></td><td><pre> * class ListNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     ListNode next;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     ListNode(int x) {</pre></td></tr><tr><td data-num="7"></td><td><pre> *         val = x;</pre></td></tr><tr><td data-num="8"></td><td><pre> *         next = null;</pre></td></tr><tr><td data-num="9"></td><td><pre> *     }</pre></td></tr><tr><td data-num="10"></td><td><pre> * }</pre></td></tr><tr><td data-num="11"></td><td><pre> */</pre></td></tr><tr><td data-num="12"></td><td><pre>public class Solution {</pre></td></tr><tr><td data-num="13"></td><td><pre>  public ListNode detectCycle(ListNode head) {</pre></td></tr><tr><td data-num="14"></td><td><pre>    //如果用两个指针</pre></td></tr><tr><td data-num="15"></td><td><pre>    ListNode fast = head, slow = head;</pre></td></tr><tr><td data-num="16"></td><td><pre>    while (fast != null &amp;&amp; fast.next != null) {</pre></td></tr><tr><td data-num="17"></td><td><pre>      fast = fast.next.next;</pre></td></tr><tr><td data-num="18"></td><td><pre>      slow = slow.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>      if (fast == slow) {</pre></td></tr><tr><td data-num="20"></td><td><pre>        break;</pre></td></tr><tr><td data-num="21"></td><td><pre>      }</pre></td></tr><tr><td data-num="22"></td><td><pre>    }</pre></td></tr><tr><td data-num="23"></td><td><pre>    if (fast == null || fast.next == null) {</pre></td></tr><tr><td data-num="24"></td><td><pre>      return null;</pre></td></tr><tr><td data-num="25"></td><td><pre>    }</pre></td></tr><tr><td data-num="26"></td><td><pre>    slow = head;</pre></td></tr><tr><td data-num="27"></td><td><pre>    while (slow!=fast){</pre></td></tr><tr><td data-num="28"></td><td><pre>        slow = slow.next;</pre></td></tr><tr><td data-num="29"></td><td><pre>        fast = fast.next;</pre></td></tr><tr><td data-num="30"></td><td><pre>    }</pre></td></tr><tr><td data-num="31"></td><td><pre>    return slow;</pre></td></tr><tr><td data-num="32"></td><td><pre>  }</pre></td></tr><tr><td data-num="33"></td><td><pre>}</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure>',1),p=[n];function s(l,i){return d(),r("div",null,p)}const o=t(e,[["render",s],["__file","9862a150.html.vue"]]);export{o as default};
