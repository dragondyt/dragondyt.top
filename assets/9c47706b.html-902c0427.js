import{_ as t,o as a,c as i,e}from"./app-5de3c553.js";const s={},d=e('<h1 id="编译openjdk" tabindex="-1"><a class="header-anchor" href="#编译openjdk" aria-hidden="true">#</a> 编译OpenJDK</h1><h2 id="安装编译环境" tabindex="-1"><a class="header-anchor" href="#安装编译环境" aria-hidden="true">#</a> 安装编译环境</h2><h3 id="下载openjdk" tabindex="-1"><a class="header-anchor" href="#下载openjdk" aria-hidden="true">#</a> 下载openjdk</h3><p><a href="https://github.com/openjdk/jdk.git" target="_blank" rel="noopener noreferrer">使用git clone</a>（如果觉得慢可以使用<a href="https://e.coding.net/dyt2015/dyt2015.coding.me/jdk.git" target="_blank" rel="noopener noreferrer">coding导入的jdk</a>）</p><h3 id="安装编译工具" tabindex="-1"><a class="header-anchor" href="#安装编译工具" aria-hidden="true">#</a> 安装编译工具</h3><h4 id="_1-win下cygwin64环境编译" tabindex="-1"><a class="header-anchor" href="#_1-win下cygwin64环境编译" aria-hidden="true">#</a> 1.win下Cygwin64环境编译</h4><ol><li><p>安装Cygwin</p><ol><li><a href="https://cygwin.com/setup-x86_64.exe" target="_blank" rel="noopener noreferrer">官方下载</a></li><li>设置下载源<br><img src="https://img-blog.csdnimg.cn/20201203150840602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="清华下载源"></li></ol></li><li><p>需要安装的包<br><img src="https://img-blog.csdnimg.cn/20201205165420711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="cywin64需要的包"></p></li></ol><figure class="highlight text"><figcaption data-lang="text"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>补充：需要安装autoconf</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><ol start="3"><li>编译选项&amp;检查</li></ol><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre></pre></td></tr><tr><td data-num="2"></td><td><pre>bash ./configure -with-freetype=buddle -enable-debug -with-target-bits=64 -disable-ccache</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><ol start="4"><li>构建</li></ol><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>make all</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><h4 id="_2-win下linux环境编译-ubuntu" tabindex="-1"><a class="header-anchor" href="#_2-win下linux环境编译-ubuntu" aria-hidden="true">#</a> 2.win下linux环境编译（ubuntu ）</h4><ol><li><p>需要安装的包</p><table><thead><tr><th>包名</th><th style="text-align:left;">命令</th></tr></thead><tbody><tr><td>gcc</td><td style="text-align:left;">sudo apt-get install build-essential</td></tr><tr><td>FreeType</td><td style="text-align:left;">sudo apt-get install libfreetype6-dev</td></tr><tr><td>CUPS</td><td style="text-align:left;">sudo apt-get install libcups2-dev</td></tr><tr><td>X11</td><td style="text-align:left;">sudo apt-get install libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev</td></tr><tr><td>ALSA</td><td style="text-align:left;">sudo apt-get install libasound2-dev</td></tr><tr><td>libffi</td><td style="text-align:left;">sudo apt-get install libffi-dev</td></tr><tr><td>Autoconf</td><td style="text-align:left;">sudo apt-get install autoconf</td></tr><tr><td>zip</td><td style="text-align:left;">sudo apt-get install zip</td></tr></tbody></table></li><li><p>执行命令</p></li></ol><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre> bash configure --enable-debug --with-jvm-variants=server --with-boot-jdk=/mnt/e/jdk/jdk-16 --with-tools-dir=/mnt/d/vs/2019/Community/VC/Auxiliary/Build</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><p>命令解释：</p><blockquote><p>–with-boot-jdk 如果找不到正确jdk，通过该命令可以手动指定<br> jdk版本必须是编译版本的前一个版本<br> jdk需与目标平台（win/linux）一致</p></blockquote><blockquote><p>–with-tools-dir 指定编译工具目录，具体指向跟编译目标有关</p></blockquote><blockquote><p>注意：win下wsl默认编译win平台jdk，如果需要编译linux版本需要进行配置</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201205165257927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="build.doc"></p><h3 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题" aria-hidden="true">#</a> 遇到的问题</h3><p>win10sdk路径包含括号<br><img src="https://img-blog.csdnimg.cn/2020120516024683.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201205160143993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 解决：更换目录<br> 移动到正常目录（<code>括号都不行，中文就更不行了</code>）<br> 创建软连接</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>   mklink /J &quot;C:\\Program Files (x86)\\Windows Kits&quot; &quot;D:\\WindowsKits&quot;</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><p>当路径包含空格，路径会被截断。（参数是路径也会，最好是不要有空格）<br><img src="https://img-blog.csdnimg.cn/20201205160709798.png" alt="在这里插入图片描述"><br> 警告<br><img src="https://img-blog.csdnimg.cn/20201205161925170.png" alt="在这里插入图片描述"><br> 解决：执行</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>make clean</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><p>错误<br><img src="https://img-blog.csdnimg.cn/20201205162125789.png" alt="在这里插入图片描述"><br> 解决：手动删除jdk下build文件夹</p><h3 id="编译成功" tabindex="-1"><a class="header-anchor" href="#编译成功" aria-hidden="true">#</a> 编译成功</h3><p><img src="https://img-blog.csdnimg.cn/20201205164033789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="编译成功"><br> 验证jdk<br><img src="https://img-blog.csdnimg.cn/20201205164441839.png" alt="验证jdk"></p><p>ps：如果可以的话直接在linux系统下编译，就不会有这么多的路径问题</p><h1 id="调试openjdk" tabindex="-1"><a class="header-anchor" href="#调试openjdk" aria-hidden="true">#</a> 调试OpenJDK</h1><h2 id="安装clion" tabindex="-1"><a class="header-anchor" href="#安装clion" aria-hidden="true">#</a> 安装clion</h2><h3 id="因为我是java使用idea-clion和它属于一家公司产品-使用方式相似-上手容易。安装过程-略" tabindex="-1"><a class="header-anchor" href="#因为我是java使用idea-clion和它属于一家公司产品-使用方式相似-上手容易。安装过程-略" aria-hidden="true">#</a> 因为我是java使用idea，clion和它属于一家公司产品，使用方式相似，上手容易。安装过程（略）</h3><h2 id="配置clion" tabindex="-1"><a class="header-anchor" href="#配置clion" aria-hidden="true">#</a> 配置clion</h2><p>根据编译jdk时使用的工具链，调试时应该选择对应的工具链，否则会出现debug无效的情况</p><p>上一篇文章我虽然使用wsl环境编译jdk，但编译工具使用的是vs工具链，所以调试选择vs工具链。<br><img src="https://img-blog.csdnimg.cn/20201206143258927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="vs工具链"><br> WSL配置<br> 当成普通linux服务器进行连接即可，缺什么安装什么，一般是缺失cmake，gdb。<br><img src="https://img-blog.csdnimg.cn/20201206143449329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="wsl配置"></p><h3 id="导入项目" tabindex="-1"><a class="header-anchor" href="#导入项目" aria-hidden="true">#</a> 导入项目</h3><ol><li>导入jdk目录</li><li>创建CMakeLists.txt<br> 简易版（能调试，大量飘红，少部分代码能跳转）</li></ol><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>#自己版本能用就行</pre></td></tr><tr><td data-num="2"></td><td><pre>cmake_minimum_required(VERSION 3.16)</pre></td></tr><tr><td data-num="3"></td><td><pre>project(jdk)</pre></td></tr><tr><td data-num="4"></td><td><pre># 添加源文件</pre></td></tr><tr><td data-num="5"></td><td><pre>file(GLOB_RECURSE SOURCE_FILES &quot;*.cpp&quot; &quot;*.hpp&quot; &quot;*.c&quot; &quot;*.h&quot;)</pre></td></tr><tr><td data-num="6"></td><td><pre># 添加执行配置</pre></td></tr><tr><td data-num="7"></td><td><pre>add_executable(hotspot ${SOURCE_FILES})</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><p>复杂版（<code>emmmm，我不会cmake，百度到的都是少了，有大佬教我吗</code>）</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>#自己版本能用就行</pre></td></tr><tr><td data-num="2"></td><td><pre>cmake_minimum_required(VERSION 3.16)</pre></td></tr><tr><td data-num="3"></td><td><pre>project(jdk)</pre></td></tr><tr><td data-num="4"></td><td><pre># 添加源文件</pre></td></tr><tr><td data-num="5"></td><td><pre>file(GLOB_RECURSE SOURCE_FILES &quot;*.cpp&quot; &quot;*.hpp&quot; &quot;*.c&quot; &quot;*.h&quot;)</pre></td></tr><tr><td data-num="6"></td><td><pre># 添加执行配置</pre></td></tr><tr><td data-num="7"></td><td><pre>add_executable(hotspot ${SOURCE_FILES})</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure><ol start="3"><li><p>修改run configuration</p><ol><li>修改executable为<code>build/windows-x86_64-server-fastdebug/jdk/bin/java.exe</code></li><li>设置参数，测试用-version，可以换成类</li><li>删除build下before launch下的build<br><img src="https://img-blog.csdnimg.cn/20201206143943220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="配置结果"></li></ol></li></ol><h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h2><p>断点打在<code>src/java.base/share/native/libjli/java.c</code>中的JavaMain函数，对c/c++不是很了解，看调用帧，这个应该是入口，下面三个点进去是汇编代码。<br><img src="https://img-blog.csdnimg.cn/20201206145118669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="调试openjdk"></p>',43),n=[d];function r(l,c){return a(),i("div",null,n)}const p=t(s,[["render",r],["__file","9c47706b.html.vue"]]);export{p as default};
