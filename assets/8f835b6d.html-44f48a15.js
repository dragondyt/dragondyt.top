import{_ as t,o as d,c as r,e}from"./app-5de3c553.js";const a={},p=e('<figure class="highlight java"><figcaption data-lang="java"></figcaption><div class="code-container"><table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>    public ListNode getKthFromEnd(ListNode head, int k) {</pre></td></tr><tr><td data-num="3"></td><td><pre>        ListNode p1 = head;</pre></td></tr><tr><td data-num="4"></td><td><pre>        // p1 先走 k 步</pre></td></tr><tr><td data-num="5"></td><td><pre>        for (int i = 0; i &lt; k; i++) {</pre></td></tr><tr><td data-num="6"></td><td><pre>            p1 = p1.next;</pre></td></tr><tr><td data-num="7"></td><td><pre>        }</pre></td></tr><tr><td data-num="8"></td><td><pre>        ListNode p2 = head;</pre></td></tr><tr><td data-num="9"></td><td><pre>        // p1 和 p2 同时走 n - k 步</pre></td></tr><tr><td data-num="10"></td><td><pre>        while (p1 != null) {</pre></td></tr><tr><td data-num="11"></td><td><pre>            p2 = p2.next;</pre></td></tr><tr><td data-num="12"></td><td><pre>            p1 = p1.next;</pre></td></tr><tr><td data-num="13"></td><td><pre>        }</pre></td></tr><tr><td data-num="14"></td><td><pre>        // p2 现在指向第 n - k + 1 个节点，即倒数第 k 个节点</pre></td></tr><tr><td data-num="15"></td><td><pre>        return p2;</pre></td></tr><tr><td data-num="16"></td><td><pre>    }</pre></td></tr><tr><td data-num="17"></td><td><pre>}</pre></td></tr></table><div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div></div></figure>',1),n=[p];function i(s,c){return d(),r("div",null,n)}const o=t(a,[["render",i],["__file","8f835b6d.html.vue"]]);export{o as default};
