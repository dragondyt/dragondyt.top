<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>这是一个无聊的人搭建的博客</title>
        <link>https://blog.dragondyt.top</link>
        <description>这是一个无聊的人搭建的博客</description>
        <lastBuildDate>Thu, 09 Nov 2023 18:35:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <image>
            <title>这是一个无聊的人搭建的博客</title>
            <url>https://cdn.jsdelivr.net/gh/amehime/shoka@30732f13/images/avatar.jpg</url>
            <link>https://blog.dragondyt.top</link>
        </image>
        <copyright>All rights reserved 2021, Dragon Dyt</copyright>
        <category>计算机</category>
        <atom:link href="https://blog.dragondyt.top/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[OpenGL环境测试]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/OpenGL/ecdcd4fc.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/OpenGL/ecdcd4fc.html</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>日志</p>
<figure class="highlight text">
<figcaption data-lang="text"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>2022-09-27 13:55:55.593 6546-6601/com.example.opengl E/EGL_emulation: eglCreateContext: EGL_BAD_CONFIG: no ES 3 support</pre></td></tr><tr><td data-num="2"></td><td><pre>2022-09-27 13:55:55.593 6546-6601/com.example.opengl E/EGL_emulation: tid 6601: eglCreateContext(1682): error 0x3005 (EGL_BAD_CONFIG)</pre></td></tr><tr><td data-num="3"></td><td><pre>2022-09-27 13:55:55.593 6546-6601/com.example.opengl E/AndroidRuntime: FATAL EXCEPTION: GLThread 501</pre></td></tr><tr><td data-num="4"></td><td><pre>    Process: com.example.opengl, PID: 6546</pre></td></tr><tr><td data-num="5"></td><td><pre>    java.lang.RuntimeException: createContext failed: EGL_BAD_CONFIG</pre></td></tr><tr><td data-num="6"></td><td><pre>        at android.opengl.GLSurfaceView$EglHelper.throwEglException(GLSurfaceView.java:1223)</pre></td></tr><tr><td data-num="7"></td><td><pre>        at android.opengl.GLSurfaceView$EglHelper.throwEglException(GLSurfaceView.java:1214)</pre></td></tr><tr><td data-num="8"></td><td><pre>        at android.opengl.GLSurfaceView$EglHelper.start(GLSurfaceView.java:1064)</pre></td></tr><tr><td data-num="9"></td><td><pre>        at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1431)</pre></td></tr><tr><td data-num="10"></td><td><pre>        at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272)</pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>估计是电脑没显卡导致的</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[安卓Studio打不开]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/3632a017/af753a41.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/3632a017/af753a41.html</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/images/androidStudioWonTOpen.png" alt="安卓Studio打不开" /></p>
<p>莫名奇妙的问题，idea能打开。难道有单独的变量设置？最后没找到。<br />
官网上的针对IDE能打开的情况，这不是废话吗，能打开什么都好说。。。</p>
<p>通过bat打开后发现Android Studio 使用的是java11，而我坏境JavaHome是1.8。但是之前就很正常，而且它是自带环境的，卸载重装也没用</p>
<p>最后给我的java环境升级到了java19，成功解决问题。</p>
<p>问题不到，开发时可以指定java版本，外部就用最高的长期支持版吧！</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[首页]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[首页]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[首页]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[全部分类]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 计算机科学]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 计算机科学]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 二进制杂谈]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 大数据]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: bug]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 安卓开发学习]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 踩坑]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: Theme Shoka Documentation]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 安卓]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 教程]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 信息检索]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 算法]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 算法]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 安卓]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: flutter]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: java]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: Springboot]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 计算机网络]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 二叉树]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[分类: 链表]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[全部标签]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: Hexo]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: NDK]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: OpenGL]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: docker]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: flutter]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: hadoop]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: java]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 二叉树]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 信息检索]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 双指针]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 吐槽]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 安卓]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 微服务]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 快慢指针]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 教程]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 数组]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 计算机网络]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 踩坑]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 逆向工程]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 链表]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[标签: 队列]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2023 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2023 / 11 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2022 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2022 / 08 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2022 / 07 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2021 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2021 / 05 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2021 / 04 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 12 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 08 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 07 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 06 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 05 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 04 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[2020 / 03 - 归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[归档]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 30 Nov 1899 00:00:00 GMT</pubDate>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[安卓开发学习--安装开发环境]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/ff03d5f4.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/ff03d5f4.html</guid>
            <pubDate>Thu, 05 Mar 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="android-stdio下载" tabindex="-1"><a class="header-anchor" href="#android-stdio下载" aria-hidden="true">#</a> Android Stdio下载</h2>
<p><a href="https://pan.baidu.com/s/1nuABMDb#list/path=%2FAndroid%20Studio" target="_blank" rel="noopener noreferrer">网盘下载</a><br />
<a href="https://dl.google.com/dl/android/studio/install/3.6.1.0/android-studio-ide-192.6241897-windows.exe" target="_blank" rel="noopener noreferrer">官网下载</a></p>
<h2 id="安装过程" tabindex="-1"><a class="header-anchor" href="#安装过程" aria-hidden="true">#</a> 安装过程</h2>
<p>一直点next就行了，注意一下几点：</p>
<ol>
<li>AS安装路径不能与sdk路径一样</li>
</ol>
<p><img src="https://i.loli.net/2020/03/05/KrUl5o7ZMpNJeLG.png" alt="安装路径配置" /></p>
<p><img src="https://i.loli.net/2020/03/05/Mwmzd2jNqDOsv64.png" alt="错误图片" /></p>
<ol start="2">
<li>安装目录不能是中文，如果安装目录是中文，AS会提示错误  ++Your SDK location contains non-ASCII characters++</li>
</ol>
<p><img src="https://i.loli.net/2020/03/05/8U1dHvgKpjZ9r6h.png" alt="Your SDK location contains non-ASCII characters" /></p>
<h2 id="app运行方式" tabindex="-1"><a class="header-anchor" href="#app运行方式" aria-hidden="true">#</a> App运行方式</h2>
<h3 id="模拟器运行" tabindex="-1"><a class="header-anchor" href="#模拟器运行" aria-hidden="true">#</a> 模拟器运行</h3>
<p><img src="https://i.loli.net/2020/03/05/AD7m85zydhqMNer.png" alt="模拟器运行图片" /><br />
手机型号可以自己选，然后点next<br />
<img src="https://i.loli.net/2020/03/05/bzhaDACsHWMU1Jd.png" alt="手机选择" /><br />
选择镜像（安卓版本），然后点next，后面配置可以不动，点Finish<br />
<img src="https://i.loli.net/2020/03/05/jNGi68J31nLPtb9.png" alt="安卓版本" /><br />
完成图片<br />
<img src="https://i.loli.net/2020/03/05/lxFSI9T6NJRvyk2.png" alt="配置完成图片" /><br />
<img src="https://i.loli.net/2020/03/05/cHanqCWzTL2u6Q5.png" alt="启动图片" /><br />
tip：模拟器默认安装在C盘，可以通过教程修改<a href="https://blog.csdn.net/Aaron_King/article/details/89765108?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener noreferrer">传送门</a></p>
<h3 id="真机运行" tabindex="-1"><a class="header-anchor" href="#真机运行" aria-hidden="true">#</a> 真机运行</h3>
<p>插上安卓手机，打开usb调试<a href="https://zhuanlan.zhihu.com/p/20896295" target="_blank" rel="noopener noreferrer">打开方式</a>，手机出现提示时点同意<br />
<img src="https://img3.appinn.net/images/201710/2017-10-09-11-02-02.jpg!o" alt="usb调试授权" /></p>
<p>第一次写blog，不足之处多多见谅</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwODE5MDkwMzA5NDE0" length="0" type="image//aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwODE5MDkwMzA5NDE0"/>
        </item>
        <item>
            <title><![CDATA[一个bug]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/49af668f.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/49af668f.html</guid>
            <pubDate>Sat, 14 Mar 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="一个让人烦躁的bug" tabindex="-1"><a class="header-anchor" href="#一个让人烦躁的bug" aria-hidden="true">#</a> 一个让人烦躁的bug</h2>
<p>  今天写代码，一个简单的查询，总是出现++java.math.BigDecimal cannot be cast to java.lang.Integer++，项目是热部署的，以为是缓存，清除一遍又一遍还是无效。我试着用toString方法转字符串然后转int，结果出现了异常，但是注释掉的代码可以运行</p>
<p><img src="https://i.loli.net/2020/03/14/2zCrRnfDEuaKFlt.png" alt="转换异常" />，看不出哪里有异常转换，我也有点好奇Map&lt;String, Integer&gt;是怎么变成Map&lt;String, BigDecimal&gt;的。<br />
<img src="https://i.loli.net/2020/03/14/GvNLp9oMh2qQsmy.png" alt="类型变化" /><br />
我手动写了一个Map&lt;String, Integer&gt;尝试放入一个BigDecimal，结果编译失败了！</p>
<p><img src="https://i.loli.net/2020/03/14/ETqiF5OfxA4edSN.png" alt="编译失败" /></p>
<p>查询使用了mybatis3.2.6框架（不是plus）， resultType=“java.util.Map”<br />
下面是sql</p>
<figure class="highlight sql">
<figcaption data-lang="sql"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>select MONTH(日期) as month,SUM(amount) AS total FROM `销售` where YEAR(日期) = #{year} GROUP BY MONTH(日期);</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/800" length="0" type="image//gh/dyt2015/hexo-image/800"/>
        </item>
        <item>
            <title><![CDATA[计算机网络第二章物理层课堂练习答案]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e255a10a/a87da565/5eef9793.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e255a10a/a87da565/5eef9793.html</guid>
            <pubDate>Sun, 15 Mar 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[用来偷懒的答案]]></description>
            <content:encoded><![CDATA[<h2 id="第二章-物理层" tabindex="-1"><a class="header-anchor" href="#第二章-物理层" aria-hidden="true">#</a> 第二章  物理层</h2>
<p>一、 选择题</p>
<ol>
<li>信号是数据在传输过程中的(A)的表现形式。<br />
A. 电信号    B. 代码    C. 信息    D. 程序</li>
<li>数据通信的任务是传输( D  )代码的比特序列。<br />
A. 十进制    B. 帧结构    C. 分组结构    D. 二进制</li>
<li>( B )信号的电平是连续变化的。<br />
A. 数字    B. 模拟    C. 脉冲    D. 二进制</li>
<li>( C)是指将数字信号转变成可以在电话线上传输的模拟信号的过程。<br />
A. 解调    B. 采样    C. 调制    D. 压缩</li>
<li>数据传输速率是指每秒钟传输构成数据二进制代码的(D  )数。<br />
A. 码元    B. 信元    C. 波特    D. 位</li>
<li>利用模拟通信信道传输数据信号的方法称为( A )。<br />
A. 频带传输      B. 基带传输      C. 异步传输      D. 同步传输</li>
<li>基带传输是指在数字通信信道上( C )传输数字数据信号的方法。<br />
A. 调制      B. 脉冲编码      C. 直接      D. 间接</li>
<li>数据在通信信道传输的过程中，对数据传输的误码率影响最主要的因素是( D  )。<br />
A. 传输速率    B. 调制解调器    C. 传输介质    D. 噪声强度<br />
9.Internet上的数据交换采用的是( A  )。<br />
A. 分组交换    B. 电路交换    C. 报文交换    D. 光交换</li>
<li>FDM是指( A  )。<br />
A. 频分多路复用    B. 时分多路复用    C. 波分多路复用    D. 码分多路利用</li>
<li>利用( A )，数字数据可以用模拟信号来表示。<br />
A. 调制解调器    B. 编码解码器    C. 串联放大器    D. 电话网络</li>
<li>在数据通信系统中，传输介质的功能是( D )。<br />
A. 在信源与信宿之间传输信息        B．纠正传输过程中的错误<br />
C. 根据环境状况自动调整信号形式    D. 将信号从一端传至另一端</li>
<li>在光纤中采用的多路复用技术是( C )。<br />
A. 时分多路复用    B. 频分多路复用    C. 波分多路复用    D. 码分多路复用</li>
<li>为了实现长距离传输，模拟传输系统都使用放大器来使信号中的能量得到增加，其噪声分量( A )。<br />
A. 增大    B. 减小    C. 不变    D. 不一定</li>
<li>“复用”是一种将若干个彼此独立的信号合并为一个可在同一信道上传输的( C )。<br />
A. 调制信号    B. 已调信号    C. 复用信号    D. 单边带信号</li>
<li>物理层4个重要特性：机械特性、功能特性、电气特性和（A）。<br />
A. 规程特性    B. 接口特性    C.协议特性    D. 物理特性<br />
17． 基带系统使用（C）进行传输的。<br />
A. 模拟信号    B. 调制信号    C. 数字信号    D. 载波信号<br />
18． 下列关于异步传输说法正确的是（D）。<br />
A. 一次传输一个数据块       B. 对时序的要求较高<br />
C. 收/发端不需要进行同步    D. 数据传输速率低<br />
19． 低通通道带宽为5KHz,编码采用512级分级信号，最大数据传输率（D）。<br />
A. 32 kbps    B. 48 kbps    C. 64 kbps    D. 90 kbps</li>
<li>在宽带为8KHz的信道上，按奈奎斯特定理，每秒能发送的比特数不超过48kbps,则一个码元离散取值是（B）。<br />
A. 4            B. 8         C. 16           D. 24<br />
21． 在宽带为8KHz的信道上，如果8种不同的物理状态来表示数据，若信噪比S/N为30Db,按香农定理，最大限制的数据速率为（D）。<br />
A. 24 kbps    B. 48 kbps    C. 40 kbps    D. 80kbps<br />
22． 在脉冲起始时刻，有无跳变来表示“0”和“1”，在脉冲中间时刻始终发生跳变的编码是（C）。<br />
A. 曼彻斯特编码   B. 非归零码    C. 差分曼彻斯特编码    D. 8B/10B<br />
23． 当数字信号在模拟传输系统中传送时，在发送端和接受端分别需要（A）。<br />
A. 调制器和解调器    B. 解调器和调制器<br />
C. 编码器和解码器    D. 解码器和编码器<br />
24．两台计算机利用电话线路传输数据信号时必备的设备是(A).<br />
A. 调制解调器    B. 网卡    C. 中继器    D. 集线器<br />
25． 当通信子网采用（B）方式时，我们首先要在通信双方之间建立起逻辑连接。<br />
A. 报文交换    B. 虚电路    C. 数据报    D. 电路交换<br />
26．不受电磁干扰或噪声影响的介质是（B）。<br />
A. 双绞线    B. 光纤    C. 同轴电缆    D. 微波<br />
27． 报文的内容不按顺序到达目的节点的是（D）方式。<br />
A. 电路交换    B. 报文交换    C.虚电路交换    D. 数据报交换<br />
28． 在中继系统中，中继器处于（A）。<br />
A. 物理层    B.数据链路层    C. 网络层    D. 高层<br />
29． 关于时延说法正确的是（C）。<br />
A. 发送时延=信道长度/电磁波在信道上的传播速度<br />
B. 传播时延=数据块长度/信道带宽<br />
C. 总时延=传播时延+发送时延+排队时延<br />
D. 提高链路带宽减小了数据的传播时延<br />
30． 下列说法错误的是（C）。<br />
A. 在虚电路方式中，信息从源节点传送到目的节点采用“存储转发”方式<br />
B. 在数据报方式中，信息从源节点传送到目的节点采用“存储转发”方式<br />
C. 电路交换比分组交换实时性好<br />
D. 报文交换方式适合交互式通信<br />
31.物理层传输的是（A）。<br />
A．原始比特     B.分组          C.信元     D.帧<br />
32.在电缆中采用屏蔽可以带来什么好处？（B）<br />
A．减少信号衰减                B.减少电磁干扰辐射<br />
C．减少物理损坏                D.减少电缆的阻抗<br />
33.调制解调技术主要用于（A）的通信方式中。<br />
A．模拟信道传输数字数据        B.模拟信道传输模拟数据<br />
C．数字信道传输数字数据        D.数字信道传输模拟数据<br />
34.下列说法中，哪一项是正确的？（C）<br />
A．虚电路与线路交换没有实质不同<br />
B．在通信的两个站点间只能建立一条虚电路<br />
C．虚电路有连接建立，数据传输，连接拆除3个阶段<br />
D．虚电路的各个结点需要为每个分组作路由选择判定<br />
35.当数字信号在模拟传输系统中传送时，在发送端和接收端分别需要（A）。<br />
A．调制器和解调器              B解调器和调制器<br />
C. 编码器和解码器              D解码器和编码器<br />
36.物理层的4个特性中，（B）规定了每种信号的电平，信号的脉冲宽度，允许的数据传输速率和最大传输距离。<br />
A．机械特性    B电气特性    C功能特性     D规程特性<br />
37.为了将数字信号传输得更远，可以采用的设备是（A）。<br />
A．中继器      B放大器      C网桥         D路由器<br />
38.在无噪声情况下，若某通信链路的带宽为3kHz，采用4个相位，每个相位具有4种振幅的QAM调制技术，则该通信链路的最大数据传输率是（C）<br />
A.12kbps	B.24kbps	C.48kbps	D.96kbps<br />
39.传递需进行调制编码。（B）<br />
　　A.数字数据在数字信道上 B.数字数据在模拟信道上<br />
　　C.模拟数据在数字信道上 D.模拟数据在模拟信道上<br />
40.数据传输速率公式：S= Tlog2N中，T的含义是。（B）<br />
　　A.单位脉冲幅度 B.单位脉冲宽度 C.调制速率 D.脉冲的有效值<br />
41.两个实体间数据传输和交换是（A）<br />
　　A.数据通信 B.数据控制 C.数据传输 D.信息交换<br />
42.在多数情况下，网络接口卡实现的功能处于。	（A）<br />
　　A.物理层协议和数据链路层协议 B.物理层协议和网络层协议<br />
　　C.数据链路层协议 D.网络层协议<br />
43.下列说法哪一个是正确的 (A)<br />
　　A、当码元的离散值个数N=2，则波特率等于比特率;<br />
　　B、600波特和600bps是一个意思;<br />
　　C、每秒传送l00个码元也就是每秒传送100个比特;<br />
D、每秒50波特的传输速率是很低的<br />
44.模拟通信系统中产生的调制信号一定是。(B)<br />
　　A.数字信号 B.连续信号 C.语音信号 D.离散信号<br />
45.用bps作单位的有(多选)(AC)<br />
　　A.位速率 B.波特率 C.数据传输率 D.误码率<br />
46.下列对基带传输和宽带传输的说法正确的是(多选) (AB)<br />
　　A.基带传输是将数据直接转换为脉冲信号加到电缆上传输出去<br />
　　B.宽带传输是将数据加到载波信号上传送出去<br />
　　C.基带传输采用“控制载波信号状态”的传输技术<br />
　　D.在通信中，依据数据流的方向可以分为基带传输和宽带传输<br />
47.下述哪个说法是正确的？（D）<br />
　　(A)细同轴电缆传输速率最高。<br />
　　(B) 光纤电缆支持电缆运行几十公里。<br />
　　© 屏蔽双绞线电缆对电磁干扰不敏感。<br />
　　(D) 以上说法都不对。<br />
48.下述哪一个电缆类型支持最大的电缆长度？©<br />
　　(A)无屏蔽双绞线(B)屏蔽双绞线©粗同轴电缆(D)细同轴电缆<br />
49.下述哪个说法是正确的？（D）<br />
　　(A)细同轴电缆传输速率最高。<br />
　　(B) 光纤电缆支持电缆运行几十公里。<br />
　　© 屏蔽双绞线电缆对电磁干扰不敏感。<br />
　　(D) 以上说法都不对。<br />
50.下述哪一个电缆类型支持最大的电缆长度？©<br />
　　(A)无屏蔽双绞线(B)屏蔽双绞线©粗同轴电缆(D)细同轴电缆<br />
ps：不保证完全正确，仅用来偷懒</li>
</ol>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[计算机网络第三章数据链路层答案]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e255a10a/a87da565/589e13eb.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e255a10a/a87da565/589e13eb.html</guid>
            <pubDate>Mon, 16 Mar 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[用来偷懒的答案]]></description>
            <content:encoded><![CDATA[<h2 id="第三章-数据链路层" tabindex="-1"><a class="header-anchor" href="#第三章-数据链路层" aria-hidden="true">#</a> 第三章  数据链路层</h2>
<p>一、选择题</p>
<ol>
<li>流量控制是为( C )所需要的。</li>
</ol>
<p>A. 位错误                　　B. 发送方缓冲区溢出<br />
　　C. 接收方缓冲区溢出      　　D. 接收方与发送方之间冲突</p>
<ol start="2">
<li>在下列协议中，使用带位填充的首尾标志法组帧是（ B ）。</li>
</ol>
<p>A. DDCMP    　　B. HDLC    　　C. BSC    　　D. SLIP</p>
<ol start="3">
<li>PPP不同于HDLC协议，使用面向（ B ）的填充方式。</li>
</ol>
<p>A. 比特    　　B. 字符    　　C. 透明传输    　　D. 帧</p>
<ol start="4">
<li>对于窗口大小为n的滑动窗口，最多可以有( C )帧已发送但没有确认。</li>
</ol>
<p>A. 0    　　B. n-1    　　C. n    　　D. n+1</p>
<ol start="5">
<li>在滑动窗口流量控制(窗口大小为8)中，ACK3意味着接收方期待的下一帧是( B )号帧。</li>
</ol>
<p>A. 2    　　B. 3    　　C. 4    　　D. 8</p>
<ol start="6">
<li>PPP是Internet中使用的（ C ），其功能对应于OSI参考模型的数据链路层。</li>
</ol>
<p>A. 传输协议    　　B. 分组控制协议    　　C. 点到点协议    　　D. 报文控制协议</p>
<p>7． 下面不是数据链路层功能的是（D）。</p>
<p>A. 帧同步    　　B. 差错控制    　　C. 流量控制    　　D. 拥塞控制</p>
<p>8． 面向比特同步的帧数据段中出现位串01111101，则比特填充后输出是（A）。</p>
<p>A. 011111001    　　B. 001111101   　　C. 011111101    　　D. 011111010</p>
<p>9． PPP为实现透明传输在异步传输时采用（A），而同步传输采用（A）。</p>
<p>A. 字符填充法，比特填充法    　　B. 比特填充法，字符填充法<br />
　　C. 字符填充法，字节记数法    　　D. 比特填充法，比特填充法</p>
<p>10． 在数据通信中，当发送数据出现差错时，发送端无需进行数据重发的差错控制方法为（B）。</p>
<p>A. ARQ   　　B. FEC    　　C. 奇偶校验码    　　D. CRC</p>
<p>11． 已知循环冗余码生成多项式G(X)=x5+x4+x+1，若信息位10101100，则冗余码是（B）。</p>
<p>A. 01101   　　B.01100   　　C. 1101    　　D. 1100</p>
<p>12． 在数字通信中广泛采用CRC循环冗余码的原因是CRC可以（C）。</p>
<p>A. 检测出一位差错   　　　 　　B. 检测并纠正一位差错<br />
　　C. 检测出多位突发性差错     　　D. 检测并纠正多位突发性差错</p>
<ol start="13">
<li>若数据链路的发送窗口尺寸WT=4，在发送3号帧、并接到2号帧的确认帧后，发送方还可连续发送（B）。</li>
</ol>
<p>A. 2帧   　　B. 3帧    　　C. 4帧    　　D. 1帧</p>
<p>14． 在回退N协议中，当帧序号为3比特，发送窗口的最大尺寸为（C）。</p>
<p>A. 5    　　B. 6   　　C. 7    　　D. 8</p>
<p>15． 在选择重传协议中，当帧的序号字段为3比特，且接受窗口与发送窗口尺寸相同时，发送窗口的最大尺寸为（B）。</p>
<p>A. 2    　　B. 4    　　C. 6    　　D. 8<br />
16． 假定我们运行发送窗口大小为5和接收窗口大小为3的滑动窗口算法，并且在传输过程中不会发生分组失序的问题，帧序号的编码至少有（B）位。</p>
<p>A. 2    　　B. 3    　　C. 4    　　D. 5</p>
<p>17.无论是SLIP还是PPP协议都是（D）协议。</p>
<p>A.物理层      B  传输层     C网络层     D数据链路层</p>
<p>18．下列哪一项最好地描述了CRC的特征？(AB)<br />
　　A.逐个检查每一个字符</p>
<p>B.能检查出99%以上的差错</p>
<p>C.检查不出有偶数个位出错的差错</p>
<p>D.不如奇偶校验方法可靠</p>
<p>19.HDLC协议采用的帧同步方法是（A）。</p>
<p>A.使用比特填充的首尾标志法</p>
<p>B.使用字符填充的首尾定界符法</p>
<p>C.字节计数法</p>
<p>D.违法编码法</p>
<p>20.流量控制是数据链路层的基本功能之一，有关流量控制，下列说法中正确的是（C）。</p>
<p>A.只有数据链路层存在流量控制</p>
<p>B.不只是数据链路层存在流量控制，不过各层的流量控制对象都一样</p>
<p>C.不只是数据链路层存在流量控制，但是各层的流量控制对象都不一样</p>
<p>D.以上都不对</p>
<p>21.为了避免传输中帧的消失，数据链路层采用了（D）方法。</p>
<p>A.发送帧编上序号             　　B.循环冗余码<br />
　　C.海明码                     　　D.计时器超时重发</p>
<p>22.下列不属于数据链路层功能的是（B）。</p>
<p>A.帧同步功能                 　　B.电路管理功能<br />
　　C.差错控制功能               　　D.流量控制功能</p>
<p>23.流量控制实际上是对（A）的控制。</p>
<p>A.发送方数据流量             　　B.接收方数据流量<br />
　　C.发送，接受双方数据流量     　　D.链路上任意两结点间的数据流量</p>
<p>24.在数据帧中，当所传送的数据中出现控制字符时，就必须采取适当的措施，使接收方不至于将数据误认为是控制信息。这样才能保证数据链路层的传输是（A）的。</p>
<p>A.透明       　　B.面向连接     　　C.冗余      　　D.无连接<br />
25.数据链路层采用后退N帧协议，发送方已经发送了编号为0~7的帧。</p>
<p>当及时器超时，若发送方只收到0，2,3号帧的确认，则要发送方重发的帧数是（C）<br />
　　A.2		　　B.3		　　C.4		　　D.5</p>
<p>26.计算机网络中各节点间采用©方式。</p>
<p>A.连续传输 　　B.总线传输 　　C.串行传输 　　D.并行传输</p>
<p>27.差错控制的基本方式有（多选）(AB)</p>
<p>A.检错反馈重发 　　B.前向纠错方式 　　C.奇偶校验码 　　D.方阵检验码</p>
<p>28.数据传输中的差错主要有（多选）(AD)</p>
<p>A.随机错 　　B.计算错 　　C.校验错 　　D.突发错</p>
<p>29.无论是SLIP还是PPP协议都是( B )协议。</p>
<p>(A)物理层　　(B)数据链路层　　©网络层　　(D)运输层</p>
<p>ps：不保证完全正确，仅用来偷懒</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[git push时出现error: src refspec master does not match any解决办法.]]></title>
            <link>https://blog.dragondyt.topnull</link>
            <guid>https://blog.dragondyt.topnull</guid>
            <pubDate>Thu, 23 Apr 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<!-- less -->
<!--more-->
<h1 id="git-push时出现error-src-refspec-master-does-not-match-any解决办法" tabindex="-1"><a class="header-anchor" href="#git-push时出现error-src-refspec-master-does-not-match-any解决办法" aria-hidden="true">#</a> git push时出现error: src refspec master does not match any解决办法.</h1>
<p>网传原因：<br />
　　++这是由于存储库仍然为空引起的。存储库中没有提交，因此没有 master分支可推送到服务器。++<br />
网传解决方法：</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>touch README</pre></td></tr><tr><td data-num="2"></td><td><pre>git add README </pre></td></tr><tr><td data-num="3"></td><td><pre>git commit -m 'first commit'</pre></td></tr><tr><td data-num="4"></td><td><pre>git push origin master</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>可能是我垃圾吧，git命令写错了，反正没能解决，如图：</p>
<p><img src="https://i.loli.net/2020/04/23/osObPwKIW1Nx6J2.png" alt="image.png" /></p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>git show-ref</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>d601ecc070daac5320959ee8c47bca013a113256 refs/remotes/origin/master</p>
<p>终于换一种错误了，留下了无知的眼泪</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>git push origin HEAD:master</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/23/PpUtIhJ1OxQz3yM.png" alt="image.png" /></p>
<p>一番调整，我终于成功了，失败30次，o(╥﹏╥)o</p>
<p><img src="https://i.loli.net/2020/04/23/3sLjPmV9KCNXDq5.png" alt="image.png" /></p>
<p>去目标仓库查看，发现有一个目录文件全没了(╥╯^╰╥)<br />
我有修改一番，好刺激啊，这就是删库跑路的快感吗!</p>
<p><img src="https://i.loli.net/2020/04/23/GL8siwSMr4dZJAW.png" alt="image.png" /></p>
<p>这就是之前消失的文件，现在回来了，其他的又消失了。。。<br />
经过检查，该文件夹下面含有 .git 文件夹，无法被追踪，删除即可，到此结束了，节后逃生的感觉。<br />
总结：出现这个错误不一定是因为空目录，也可能是因为远程分支不在！！！</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/800.jfif" length="0" type="image/jfif"/>
        </item>
        <item>
            <title><![CDATA[在docker安装elasticsearch]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/8f8103b7/Docker/29596f0c.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/8f8103b7/Docker/29596f0c.html</guid>
            <pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="安装elasticsearch-简称es" tabindex="-1"><a class="header-anchor" href="#安装elasticsearch-简称es" aria-hidden="true">#</a> 安装elasticsearch（简称es）</h2>
<p>拉取镜像，该命令拉取最新版（不推荐，最新版意味着踩坑）</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker pull elasticsearch</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>可以指定版本，查看<a href="https://hub.docker.com/_/elasticsearch" target="_blank" rel="noopener noreferrer">elasticsearch</a>版本</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker pull elasticsearch:x.x.x</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/28/xIZKV5LsY16oDyO.png" alt="执行docker pull elasticsearch" /><br />
尝试运行</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker run --name elasticsearch -d -e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m&quot; -p 9200:9200 -p 9300:9300 elasticsearch:latest</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/29/fPN3OEz4Qno12b9.png" alt="response from daemon: Conflict. The container name &quot;/elasticsearch&quot; is already in use by container &quot;06a80d721428c762abcb750f5a5f48a947c4714e3f9e6637e10792b4f4fa5a02&quot;. You have to remove (or rename) that container to be able to reuse that name" /><br />
查看所有容器</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker ps -a</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>解决方法</p>
<ol>
<li>删除容器，重新创建</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker rm containerId|names</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/29/lfQk1gjGZtdcmR6.png" alt="image.png" /><br />
发送GET请求，校验是否安装成功</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>curl localhost:9200</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/29/fgC7MHy3569aQh2.png" alt="curl localhost:9200" /><br />
2. 重新启动之前的容器</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker start containerId|names</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h2 id="安装可视化控件-kibana-elasticsearch-head" tabindex="-1"><a class="header-anchor" href="#安装可视化控件-kibana-elasticsearch-head" aria-hidden="true">#</a> 安装可视化控件（kibana，elasticsearch-head…）</h2>
<p>这里选择kibana，颜值就是正义，在docker中安装kibana<a href="https://www.elastic.co/guide/cn/kibana/current/docker.html" target="_blank" rel="noopener noreferrer">官方文档</a></p>
<p>需要指定版本，该版本与es一致</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker pull docker.elastic.co/kibana/kibana:7.6.2</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/29/ouJnFqjbIe2OYpX.png" alt=" response from daemon: manifest for docker.elastic.co/kibana/kibana:latest not found: manifest unknown: manifest unknown
" /><br />
运行kibana</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker run --link elasticsearch:elasticsearch -p 5601:5601 --name kibana -d docker.elastic.co/kibana/kibana:7.6.2</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>测试</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre> curl localhost:5601/status</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>出现kibana server is not ready yet<br />
查看日志</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>docker logs -f containerId</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/04/29/jTbGMCAv8UVYpqP.png" alt="image.png" /><br />
完了掉坑里了，下次再写了顺便补上docker-compose部署</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/232714-1587742034b2eb.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[信息检索-绪论]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/7c36b624/d3ee0f4f/2157fe1d.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/7c36b624/d3ee0f4f/2157fe1d.html</guid>
            <pubDate>Wed, 06 May 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="信息与文献基本知识" tabindex="-1"><a class="header-anchor" href="#信息与文献基本知识" aria-hidden="true">#</a> 信息与文献基本知识</h2>
<p>  未来学家托天勒把人类社会的发展过程划分为3个阶段:以农业经济为基础的农业社会;以工业经济为基础的工业社会;以信息经济为基础的信息社会。在信息社会中，信息资源已被人们公认为是物质、能量资源之后的人类可利用的第三类资源，是人类社会领域的基础性资源。</p>
<h3 id="从信息到文献" tabindex="-1"><a class="header-anchor" href="#从信息到文献" aria-hidden="true">#</a> 从信息到文献</h3>
<h4 id="信息-information" tabindex="-1"><a class="header-anchor" href="#信息-information" aria-hidden="true">#</a> 信息(Information)</h4>
<p>  美国数学家、控制论的主要奠基人维纳在1950年出版的《控制论与社会》中是这样来理解信息的:“人通过感觉器官感知周围世界”，“我们支配环境的命令就是给环境的一种信息”，因此，“信息就是我们在适应外部世界，并把这种适应反作用于外部世界的过程中，同外部世界进行交换的内容的名称”。</p>
<h5 id="信息的定义" tabindex="-1"><a class="header-anchor" href="#信息的定义" aria-hidden="true">#</a> 信息的定义:</h5>
<p>  中国国家标准《情报与文献工作词汇一一基本术语》 (GB/T4894-1985)中信息的定义为:信息是物质存在的一种方式、形态或运动状态，也是事物的一种普遍属性，一般指数据、消息中所包含的意义，可以使消息中所描述事件的不确定性减少。</p>
<h5 id="信息的基本属性" tabindex="-1"><a class="header-anchor" href="#信息的基本属性" aria-hidden="true">#</a> 信息的基本属性:</h5>
<p>(1)客观性。<br />
(2)传递性。<br />
(3)多态性。<br />
(4)共享性。<br />
(5)时效性。<br />
(6)价值相对性。<br />
(7)依附性。<br />
(8)增长性。</p>
<h4 id="知识-knowledge" tabindex="-1"><a class="header-anchor" href="#知识-knowledge" aria-hidden="true">#</a> 知识(Knowledge)</h4>
<p>  知识是人们在改造世界的实践中所获得的认识和经验的总和，是对客观世界物质形态和运动规律的认识。根据韦伯斯特(Webster)词典1997年的定义，知识是通过实践、研究、联系或调查获得的关于事物的事实和状态的认识，是对科学、艺术或技术的理解，是人类获得的关于真理和原理的认识的总和。</p>
<h5 id="知识的定义" tabindex="-1"><a class="header-anchor" href="#知识的定义" aria-hidden="true">#</a> 知识的定义</h5>
<ul>
<li>从信息的观念看，知识来源于信息，是信息的一部分。简而言之，知识是理性化、优化、系统化了的信息。</li>
<li>从反映的内容而言，知识是客观事物的属性与联系的反映，是客观世界在人脑中的相对正确的反映。</li>
<li>从反映的活动形式而言，知识有时表现为主体对事物的感性知觉或表象，属于感性知识，有时表现为关于事物的概念或规律，属于理性知识。</li>
</ul>
<h4 id="情报-intelligence" tabindex="-1"><a class="header-anchor" href="#情报-intelligence" aria-hidden="true">#</a> 情报(Intelligence)</h4>
<p>  情报是作为交流对象的有用的知识。“情报 是判断、意志、决心、行动需要的能指引方向的知识和智慧”;“情报是解决问题所需要的知识”;“情报是激活 了的知识”情报的基本属性是知识性、传递性和效用性。</p>
<h5 id="情报的基本属性" tabindex="-1"><a class="header-anchor" href="#情报的基本属性" aria-hidden="true">#</a> 情报的基本属性</h5>
<p>(1) 知识性。一般而言，情报是一种新的知识。然而称为情报的知识<br />
并不排斥时间上的“不新”。这就是说，凡原先不知道的(不论时间多久)，而现在又迫切需要的知识，都属于“新”的知识。<br />
(2) 传递性。情报传递的过程包括从情报源进行收集到向用户提供情报的全过程。无论多高深、渊博、新奇的知识，如果不记录、不传递、不交流，都不能称为情报。<br />
(3) 效用性(判断的标准)。情报是一种有价值、有效用的知识。情报均须“有用”，当用户不需要时，百分之百的知识也不能把它称之为情报</p>
<h4 id="文献-literature-document" tabindex="-1"><a class="header-anchor" href="#文献-literature-document" aria-hidden="true">#</a> 文献(Literature/Document)</h4>
<p>  国家标准《文献著录总则》(GB/T3792. 1-1983)给出的定义为:“文献是记录有知识的一切载体。”国家标准化组织IS0在《文献情报术语国际标准》(IS0/DIS5217)给出的定义是:“为了把人类知识传播开来和继承下去，人们用文字、图形、符号、音频、视频等手段将其记录下来，或写在纸上，或晒在蓝图上，或制在感光片上，或录到唱片上，或存储在磁盘上。这种附着在各种载体上的记录统称为文献。”</p>
<h5 id="文献包括4个要素。" tabindex="-1"><a class="header-anchor" href="#文献包括4个要素。" aria-hidden="true">#</a> 文献包括4个要素。</h5>
<p>(1) 知识和信息，即文献的内容。<br />
(2) 物质载体，如竹简、纸张、胶片、磁盘等，它是文献的外在形式。<br />
(3) 记录知识和信息的符号，如文字、图表、声音、图像等。<br />
(4) 记录的方式或手段，如书写、印刷、复制、录音、录像等，即将知识和信息固化到载体上的手段。</p>
<h4 id="信息、知识、情报与文献" tabindex="-1"><a class="header-anchor" href="#信息、知识、情报与文献" aria-hidden="true">#</a> 信息、知识、情报与文献</h4>
<p>  我国图书情报学界对信息、知识、文献和情报的看法是:知识是对信息加工、吸收、提取、评价的结果，即系统化的信息成为知识,知识记录下来成为文献，文献经传递并加以应用成为情报，情报体现了人运用知识的能力。文献是记录有知识和信息的一切载体，或称为固化在某种物质载体上的知识和信息，当文献中记录的知识传递给用户，并为用户所利用时，文献中的知识就转化为情报。</p>
<h3 id="信息的分类" tabindex="-1"><a class="header-anchor" href="#信息的分类" aria-hidden="true">#</a> 信息的分类</h3>
<ol>
<li>按信息的内容划分<br />
科学技术信息<br />
社会科学信息</li>
<li>按产生信息的客体的性质来划分<br />
自然信息<br />
生物信息<br />
机器信息<br />
社会信息</li>
<li>按信息所依附的载体来划分<br />
文献信息<br />
口头信息</li>
</ol>
<h3 id="文献的分类" tabindex="-1"><a class="header-anchor" href="#文献的分类" aria-hidden="true">#</a> 文献的分类</h3>
<ol>
<li>按照文献的加工层次分类<br />
零次文献(Zeroth Literature)<br />
一次文献(Primary Literature)<br />
二次文献(Secondary Literature)<br />
三次文献(Tertiary Literature)</li>
<li>按照文献的载体分类<br />
印刷型文献(Paper Literature)<br />
缩微型文献(Microform)<br />
电子型文献(Electronic iterature)<br />
音像型文献(Audio-Visual iterature)</li>
<li>按照文献的出版形式分类<br />
图书<br />
期刊<br />
报纸<br />
特种文献(学位论文、会议论文、专利文献、标准文献、科技报告、政府出版物、产品样本资料等)</li>
</ol>
<h2 id="信息检索基础" tabindex="-1"><a class="header-anchor" href="#信息检索基础" aria-hidden="true">#</a> 信息检索基础</h2>
<h3 id="信息检索的原理" tabindex="-1"><a class="header-anchor" href="#信息检索的原理" aria-hidden="true">#</a> 信息检索的原理</h3>
<h4 id="信息检索的概念" tabindex="-1"><a class="header-anchor" href="#信息检索的概念" aria-hidden="true">#</a> 信息检索的概念</h4>
<p>  广义的信息检索“Information Retrieval”是指将信息按照一定的方式组织和存储起来，并根据信息用户的需要揭示、查找、传递相关信息的过程，包括了信息的存储过程和查找过程。狭义的信息检索仅指信息的查找，是指从信息集合中找出用户所需要的有关信息的过程。狭义的信息检索包括3个方面的含义:了解用户的信息需求、信息检索的技术或方法、满足信息用户的需求。</p>
<h4 id="信息检索的原理-1" tabindex="-1"><a class="header-anchor" href="#信息检索的原理-1" aria-hidden="true">#</a> 信息检索的原理</h4>
<p>  信息检索的基本原理就是在对信息进行整理排序形成检索工具的基础上，按照用户的要求利用检索工具或检索系统，将用户检索提问标识(检索词)与已形成的或存储在系统中的信息的存储标识(文献特征标识、标引词)进行匹配比较，若取得一致，则为匹配，即达到了用户的检索需求，如图1.1所示。</p>
<center>
<img src="http://www.zhixing123.cn/uploads/allimg/130825/1_130825003450_1.png" alt="信息检索原理图"/>
</center>
<h3 id="信息检索的类型" tabindex="-1"><a class="header-anchor" href="#信息检索的类型" aria-hidden="true">#</a> 信息检索的类型</h3>
<ol>
<li>按信息存储和检索的内容分类<br />
文献检索<br />
数据检索<br />
事实检索</li>
<li>按照检索系统中信息的组织方式分类<br />
全文检索<br />
多媒体检索</li>
<li>按照信息存储的载体和实现查找的技术手段分类<br />
手工检索<br />
机械检索<br />
计算机检索</li>
</ol>
<h3 id="信息检索的工具" tabindex="-1"><a class="header-anchor" href="#信息检索的工具" aria-hidden="true">#</a> 信息检索的工具</h3>
<p>  信息检索工具是指为检索需要而组织的文献检索系统，它是收集、加工标引、组织文献的结果，是检索工作赖以生存的手段和条件，包含目录、索引、文摘等。</p>
<h4 id="典型的检索工具组成" tabindex="-1"><a class="header-anchor" href="#典型的检索工具组成" aria-hidden="true">#</a> 典型的检索工具组成</h4>
<ol>
<li>主体:即检索工具的主要部分，由所收录文献的著录部分组成，是文献储存与检索的实体。其包含文献的内部特征与文献的外部特征。</li>
<li>辅助索引:是在文献检索工作中，从主体部分的文献款目编排系统以外的角度增加检索途径、扩大检索效果的辅助手段，它不能离开检索工具的主体单独存在。</li>
<li>使用说明:向用户介绍本检索工具的性质、内容范围、收录年限、读者对象、著录方法、分类体系、检索方法等，帮助用户利用检索工具。</li>
</ol>
<h5 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h5>
<h6 id="目录的定义" tabindex="-1"><a class="header-anchor" href="#目录的定义" aria-hidden="true">#</a> 目录的定义</h6>
<p>  目录是图书以及其他单独出版物的外部特征的解释和系统化记载，是将一批文献款目按照一定的次序或规则编排而成的一种揭示与报道的文献工具。</p>
<h6 id="目录的著录款目" tabindex="-1"><a class="header-anchor" href="#目录的著录款目" aria-hidden="true">#</a> 目录的著录款目</h6>
<p>目录的著录包括如下款目。<br />
(1) 书名(刊名)项。<br />
(2) 著者(编者)项。<br />
(3) 出版项:包括出版地点、出版者、出版期、版次等。<br />
(4) 稽核项:包括页数、图表、开本、装订形式、定价等。<br />
(5) 附注项:对上述各项的补充或说明。<br />
(6) 提要项:内容简介。<br />
(7) 业务注记:指图书馆或保存单位在目录上做的业务记载，包括索取号、登录号、分类号、主题词、存储地点等。</p>
<h5 id="索引" tabindex="-1"><a class="header-anchor" href="#索引" aria-hidden="true">#</a> 索引</h5>
<h6 id="索引的定义" tabindex="-1"><a class="header-anchor" href="#索引的定义" aria-hidden="true">#</a> 索引的定义</h6>
<p>  索引是将报刊书籍中某些重要的或有意义的信息，如书名、刊名篇名、主题、人名、地名等分别摘录出来，按一定方式编排，并注明出处，以供检索的工具。</p>
<h6 id="索引的作用" tabindex="-1"><a class="header-anchor" href="#索引的作用" aria-hidden="true">#</a> 索引的作用</h6>
<p>  索引可以将文献所包含的若干信息分析摘录出来，作为排检标识, 这种标识可以根据需要，在一定的范围内进行任意深度的选择和标引，从而满足更深层次或更多途径的查找要求。索引可以方便用户更快地达到检索目标，是依附在目录或文摘等检索工具之上的辅助性工具，不能独立存在。</p>
<h6 id="常用索引" tabindex="-1"><a class="header-anchor" href="#常用索引" aria-hidden="true">#</a> 常用索引</h6>
<p>(1) 主题索引<br />
(2) 分类索引<br />
(3) 著者索引<br />
(4) 其他:单位索引(或团体著者索引)、化学分子式索引、引用刊物索引、出版单位索引等。</p>
<h5 id="文摘" tabindex="-1"><a class="header-anchor" href="#文摘" aria-hidden="true">#</a> 文摘</h5>
<h6 id="文摘定义" tabindex="-1"><a class="header-anchor" href="#文摘定义" aria-hidden="true">#</a> 文摘定义</h6>
<p>  我国国家标准GB3468——83定义文摘为“除题录部分外还对文献内容作实质性描述的文献条目称文摘”。</p>
<h6 id="文摘作用" tabindex="-1"><a class="header-anchor" href="#文摘作用" aria-hidden="true">#</a> 文摘作用</h6>
<p>(1) 帮助读者快速判断文献内容<br />
(2) 节省阅读时间<br />
(3) 减少语言障碍<br />
(4) 替代原文</p>
<h5 id="检索工具类型" tabindex="-1"><a class="header-anchor" href="#检索工具类型" aria-hidden="true">#</a> 检索工具类型</h5>
<ol>
<li>按信息加工的手段或设备划分<br />
手工检索工具<br />
机械检索工具<br />
计算机检索工具</li>
<li>按编制方法划分<br />
目录型检索工具<br />
题录型检索工具<br />
文摘型检索工具<br />
索引型检索工具</li>
<li>按信息载体形态划分<br />
书本式检索工具<br />
卡片式检索工具<br />
缩微式检索工具<br />
磁性材料式检索工具</li>
<li>按收录范围划分<br />
综合性检索<br />
综合性检系<br />
专科性检索工具<br />
专题性检索工具<br />
全面性检索工具<br />
单一性检索工具</li>
<li>按时间范围划分<br />
预告性检索工具<br />
现期通报性检索工具<br />
回溯性检索工具</li>
</ol>
<h3 id="信息检索的意义" tabindex="-1"><a class="header-anchor" href="#信息检索的意义" aria-hidden="true">#</a> 信息检索的意义</h3>
<ol>
<li>掌握获取知识的捷径，提高信息利用的效率</li>
<li>提高信息素质，培养终身学习的能力</li>
<li>科学研究的向导，科技查新的基础</li>
</ol>
<h2 id="信息检索的途径" tabindex="-1"><a class="header-anchor" href="#信息检索的途径" aria-hidden="true">#</a> 信息检索的途径</h2>
<p>  根据信息的基本特征，可以把信息检索途径分为外部特征检索途径(题名途径、著者途径、引文途径等)和内容特征检索途径(分类途径、主题途径等)两大类。</p>
<h3 id="外部特征途径" tabindex="-1"><a class="header-anchor" href="#外部特征途径" aria-hidden="true">#</a> 外部特征途径</h3>
<ol>
<li>题名途径:刊名、书名、篇名等</li>
<li>著者途径:作者、编者、译者、专利权人、出版机构等</li>
<li>引文途径: 其他途径:专利号、报告号、合同号、标准号、国际标准书号和刊号等</li>
</ol>
<h3 id="内容特征途径" tabindex="-1"><a class="header-anchor" href="#内容特征途径" aria-hidden="true">#</a> 内容特征途径</h3>
<ol>
<li>分类途径:是指按照文献所属学科(专业)属性(类别)进行检索的途径。</li>
<li>主题途径:是按照文献信息的主题内容进行检索的途径，利用主题词、关键词、叙词，并按字顺排列实现检索。</li>
</ol>
<h2 id="信息检索的步骤和方法" tabindex="-1"><a class="header-anchor" href="#信息检索的步骤和方法" aria-hidden="true">#</a> 信息检索的步骤和方法</h2>
<h3 id="信息检索的步骤" tabindex="-1"><a class="header-anchor" href="#信息检索的步骤" aria-hidden="true">#</a> 信息检索的步骤</h3>
<h3 id="信息检索的方法" tabindex="-1"><a class="header-anchor" href="#信息检索的方法" aria-hidden="true">#</a> 信息检索的方法</h3>
<ol>
<li>顺查法:指按照时间的顺序，由远及近地利用检索系统进行文献信息检索的方法。</li>
<li>逆查法:是由近及远地查找，逆着时间的顺序利用检索工具进行文献信息检索的方法。</li>
<li>抽查法:是针对检索课题的特点，选择有关该课题的文献信息最可能出现或最多出现的时间段，利用检索工具进行重点检索的方法。</li>
<li>追溯法(引文法) :是指利用已经掌握的文献末尾所列的参考文献，进行逐一追溯查找“引文”的一种最简便的扩大情报来源的方法。</li>
<li>综合法:又称循环法，这是把上述方法加以综合运用的方法。</li>
</ol>
<h2 id="计算机信息检索基础" tabindex="-1"><a class="header-anchor" href="#计算机信息检索基础" aria-hidden="true">#</a> 计算机信息检索基础</h2>
<h3 id="计算机信息检索概述" tabindex="-1"><a class="header-anchor" href="#计算机信息检索概述" aria-hidden="true">#</a> 计算机信息检索概述</h3>
<h4 id="计算机信息检索的特点" tabindex="-1"><a class="header-anchor" href="#计算机信息检索的特点" aria-hidden="true">#</a> 计算机信息检索的特点</h4>
<p>(1) 速度快。<br />
(2) 检索范围广。<br />
(3) 检索不受时空的限制。<br />
(4) 及时。<br />
(5) 界面友好。<br />
(6) 超文本检索。</p>
<h4 id="计算机信息检索分类" tabindex="-1"><a class="header-anchor" href="#计算机信息检索分类" aria-hidden="true">#</a> 计算机信息检索分类</h4>
<p>(1) 脱机检索<br />
(2) 联机检索<br />
(3) 网络检索</p>
<h3 id="计算机信息检索技术" tabindex="-1"><a class="header-anchor" href="#计算机信息检索技术" aria-hidden="true">#</a> 计算机信息检索技术</h3>
<p>  计算机检索系统常采用一些运算方法，从概念相关性、位置相关性等方面对检索提问进行技术处理。</p>
<ol>
<li>检索词的选择<br />
检索式由检索词和检索算符组成。<br />
检索词分为两类:受控词和非受控词。</li>
<li>布尔逻辑检索<br />
将多个检索词用布尔运算符(简称检索算符)组合在一起来进行检索，称之为布尔逻辑检索。<br />
系统使用的检索算符一般有以下几种:<br />
(1) 逻辑与<br />
(2) 逻辑或<br />
(3) 逻辑非</li>
</ol>
<h3 id="光盘检索" tabindex="-1"><a class="header-anchor" href="#光盘检索" aria-hidden="true">#</a> 光盘检索</h3>
<p>光盘检索的特点主要有以下几个。</p>
<ol>
<li>检索途径多。其可提供内容、著者、关键词、标题、著者单位、年代、出处等多种检索途径。</li>
<li>检索系统配置简单。利用微机系统建立光盘检索系统只要一台光盘驱动器和所需要的盘片，不需经过通信线路。</li>
<li>检索费用低廉。由于光盘的费用是一次性投入，可够次任意使用，利用率越高，分摊的成本越低。</li>
<li>系统操作简单。光盘数据库一般都具备类似联机检索那样齐全的检索和输出功能，同时提供人机对话，系统界面友好。</li>
</ol>
<h3 id="网络检索" tabindex="-1"><a class="header-anchor" href="#网络检索" aria-hidden="true">#</a> 网络检索</h3>
<p>网络检索具有如下特点:</p>
<ol>
<li>检索速度快。手工检索需数周的课题计算机检索只需数小时或数分钟。</li>
<li>检索途径多。除手工检索工具的分类、主题、著者等检索途径之外，网络检索往往还提供更多更灵活的检索途径，如文本词途径。</li>
<li>更新快。网上信息很多为为更新。</li>
<li>范围广。网上数据库的种类更为广泛和丰富，有些可免费进行</li>
<li>检索用词的选择及其组配更为灵活。检索策略的制定更为灵活和复杂，可利用各种讦算机检索技术随意扩天或缩小检索范围以满足用户各种不同的信息检索需求。</li>
<li>检索结果可直接打印或下载，可操作性强。</li>
</ol>
<h2 id="思考题" tabindex="-1"><a class="header-anchor" href="#思考题" aria-hidden="true">#</a> 思考题:</h2>
<h3 id="简述信息、知识、文献的概念-及三者之间的关系。" tabindex="-1"><a class="header-anchor" href="#简述信息、知识、文献的概念-及三者之间的关系。" aria-hidden="true">#</a> 简述信息、知识、文献的概念，及三者之间的关系。</h3>
<p>  知识是对信息加工、吸收、提取、评价的结果，即系统化的信息成为知识,知识记录下来成为文献，文献经传递并加以应用成为情报，情报体现了人运用知识的能力。文献是记录有知识和信息的一切载体，或称为固化在某种物质载体上的知识和信息，</p>
<h3 id="信息检索的目的和意义" tabindex="-1"><a class="header-anchor" href="#信息检索的目的和意义" aria-hidden="true">#</a> 信息检索的目的和意义</h3>
<ol>
<li>掌握获取知识的捷径，提高信息利用的效率</li>
<li>提高信息素质，培养终身学习的能力</li>
<li>科学研究的向导，科技查新的基础</li>
</ol>
<h3 id="检索工具的结构构成是什么" tabindex="-1"><a class="header-anchor" href="#检索工具的结构构成是什么" aria-hidden="true">#</a> 检索工具的结构构成是什么?</h3>
<ol>
<li>目录</li>
<li>索引</li>
<li>文摘</li>
</ol>
<h3 id="目录在检索中起什么作用" tabindex="-1"><a class="header-anchor" href="#目录在检索中起什么作用" aria-hidden="true">#</a> 目录在检索中起什么作用?</h3>
<p>  目录是图书以及其他单独出版物的外部特征的解释和系统化记载，是将一批文献款目按照一定的次序或规则编排而成的一种揭示与报道的文献工具。</p>
<h3 id="索引在检索中起什么作用" tabindex="-1"><a class="header-anchor" href="#索引在检索中起什么作用" aria-hidden="true">#</a> 索引在检索中起什么作用?</h3>
<p>  索引可以将文献所包含的若干信息分析摘录出来，作为排检标识, 这种标识可以根据需要，在一定的范围内进行任意深度的选择和标引，从而满足更深层次或更多途径的查找要求。索引可以方便用户更快地达到检索目标，是依附在目录或文摘等检索工具之上的辅助性工具，不能独立存在。</p>
<h3 id="文摘在检索中起什么作用" tabindex="-1"><a class="header-anchor" href="#文摘在检索中起什么作用" aria-hidden="true">#</a> 文摘在检索中起什么作用?</h3>
<p>(1) 帮助读者快速判断文献内容<br />
(2) 节省阅读时间<br />
(3) 减少语言障碍<br />
(4) 替代原文</p>
<h3 id="简述国内外主要分类法。" tabindex="-1"><a class="header-anchor" href="#简述国内外主要分类法。" aria-hidden="true">#</a> 简述国内外主要分类法。</h3>
<h4 id="中国图书分类法" tabindex="-1"><a class="header-anchor" href="#中国图书分类法" aria-hidden="true">#</a> 中国图书分类法</h4>
<ol>
<li>中国人民大学图书馆图书分类法。简称人大法新中国成立后的第一部分类法，1954年出第一版，1996年出第六版。4大部类、17个基本大类。总结科学，社会科学，自然科学，综合性科学、综合性图书。</li>
<li>中国科学院图书馆图书分类法</li>
<li>中国图书资料分类法</li>
<li>中国档案分类法</li>
</ol>
<h4 id="外国图书分类法" tabindex="-1"><a class="header-anchor" href="#外国图书分类法" aria-hidden="true">#</a> 外国图书分类法</h4>
<ol>
<li>杜威十进分类法(Dewey Decimal Classification &amp;Relative Index,DDC)是世界上流传最广、影响最大的一部文献分类法，它开创了文献分类法的新纪元，是外国文献分类法发展史上一个重要里程碑。</li>
<li>国际十进分类法</li>
<li>美国国会图书馆分类法</li>
<li>冒号分类法</li>
<li>布利斯书目分类法</li>
</ol>
<h2 id="操作题" tabindex="-1"><a class="header-anchor" href="#操作题" aria-hidden="true">#</a> 操作题:</h2>
<h3 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目：</h3>
<p>利用《中国图书馆图书分类法》找出分类号。</p>
<h3 id="检索目的" tabindex="-1"><a class="header-anchor" href="#检索目的" aria-hidden="true">#</a> 检索目的:</h3>
<p>掌握《中国图书馆图书分类法》的基本构成特点。</p>
<h3 id="检索要求" tabindex="-1"><a class="header-anchor" href="#检索要求" aria-hidden="true">#</a> 检索要求:</h3>
<p>按照基本大类，在《中国图书馆图书分类法》中查找以下相关类目编号。</p>
<ol>
<li>计算机技术:国际互联网</li>
</ol>
<blockquote>
<p>TP393.4</p>
</blockquote>
<ol start="2">
<li>交通运输:运输线路优选</li>
</ol>
<blockquote>
<p>U116.2</p>
</blockquote>
<ol start="3">
<li>环境科学:环境污染的控制及其排除</li>
</ol>
<blockquote>
<p>X506</p>
</blockquote>
<ol start="4">
<li>食品工业:淀粉加工工艺</li>
</ol>
<blockquote>
<p>TS234</p>
</blockquote>
<ol start="5">
<li>文化、科学:图书馆工作者</li>
</ol>
<blockquote>
<p>G251.6</p>
</blockquote>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/220935-14964989754669.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Failed to resolve: androidx.appcompat:appcompat:1.1.0]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/c4877271.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/c4877271.html</guid>
            <pubDate>Sat, 09 May 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="安卓实验–内容提供器" tabindex="-1"><a class="header-anchor" href="#安卓实验–内容提供器" aria-hidden="true">#</a> 安卓实验–内容提供器</h2>
<h3 id="日常踩雷" tabindex="-1"><a class="header-anchor" href="#日常踩雷" aria-hidden="true">#</a> 日常踩雷</h3>
<pre><code>新建了一个空activity项目
</code></pre>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>ERROR: Failed to resolve: androidx.appcompat:appcompat:1.1.0</pre></td></tr><tr><td data-num="2"></td><td><pre>ERROR: Failed to resolve: androidx.test.ext:junit:1.1.1</pre></td></tr><tr><td data-num="3"></td><td><pre>ERROR: Failed to resolve: androidx.test.espresso:espresso-core:3.2.0</pre></td></tr><tr><td data-num="4"></td><td><pre>ERROR: Failed to resolve: androidx.constraintlayout:constraintlayout:1.1.3</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/05/10/BSgdvitcaTNJA3C.png" alt="init.gradle" /></p>
<p>感觉有毒，成功了，依赖还是未解决，清除缓存重启无效！<br />
<img src="https://i.loli.net/2020/05/10/tSw1UImsTEH6aqR.png" alt="有毒" /></p>
<p>删除init.gradle后,成功解决，好吧，估计问题在镜像仓库，也可能是这个配置问题，以后还是老老实实用官方源吧，虽然费时间。但出错率低。<br />
　　这是我的init.gradle，路径为C:\Users\{username}\.gradle，建立这个文件的目的是加速依赖下载，现在看来反而是累赘，以前用着正常，现在不能用了也不知道是什么原因。</p>
<figure class="highlight groovy">
<figcaption data-lang="groovy"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>allprojects{</pre></td></tr><tr><td data-num="2"></td><td><pre>    repositories {</pre></td></tr><tr><td data-num="3"></td><td><pre>        def ALIYUN_REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public'</pre></td></tr><tr><td data-num="4"></td><td><pre>        def ALIYUN_JCENTER_URL = 'http://maven.aliyun.com/nexus/content/repositories/jcenter'</pre></td></tr><tr><td data-num="5"></td><td><pre>        def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'</pre></td></tr><tr><td data-num="6"></td><td><pre>        def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'</pre></td></tr><tr><td data-num="7"></td><td><pre>        all { ArtifactRepository repo -&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>            if(repo instanceof MavenArtifactRepository){</pre></td></tr><tr><td data-num="9"></td><td><pre>                def url = repo.url.toString()</pre></td></tr><tr><td data-num="10"></td><td><pre>                if (url.startsWith('https://repo1.maven.org/maven2')) {</pre></td></tr><tr><td data-num="11"></td><td><pre>                    project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL.&quot;</pre></td></tr><tr><td data-num="12"></td><td><pre>                    remove repo</pre></td></tr><tr><td data-num="13"></td><td><pre>                }</pre></td></tr><tr><td data-num="14"></td><td><pre>                if (url.startsWith('https://jcenter.bintray.com/')) {</pre></td></tr><tr><td data-num="15"></td><td><pre>                    project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL.&quot;</pre></td></tr><tr><td data-num="16"></td><td><pre>                    remove repo</pre></td></tr><tr><td data-num="17"></td><td><pre>                }</pre></td></tr><tr><td data-num="18"></td><td><pre>if (url.startsWith('https://dl.google.com/dl/android/maven2/')) {</pre></td></tr><tr><td data-num="19"></td><td><pre>                    project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_GOOGLE_URL.&quot;</pre></td></tr><tr><td data-num="20"></td><td><pre>                    remove repo</pre></td></tr><tr><td data-num="21"></td><td><pre>                }</pre></td></tr><tr><td data-num="22"></td><td><pre>                if (url.startsWith('https://plugins.gradle.org/m2/')) {</pre></td></tr><tr><td data-num="23"></td><td><pre>                    project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_GRADLE_PLUGIN_URL.&quot;</pre></td></tr><tr><td data-num="24"></td><td><pre>                    remove repo</pre></td></tr><tr><td data-num="25"></td><td><pre>                }</pre></td></tr><tr><td data-num="26"></td><td><pre>            }</pre></td></tr><tr><td data-num="27"></td><td><pre>        }</pre></td></tr><tr><td data-num="28"></td><td><pre>        maven {</pre></td></tr><tr><td data-num="29"></td><td><pre>                url ALIYUN_REPOSITORY_URL</pre></td></tr><tr><td data-num="30"></td><td><pre>                url ALIYUN_JCENTER_URL</pre></td></tr><tr><td data-num="31"></td><td><pre>	url ALIYUN_GOOGLE_URL </pre></td></tr><tr><td data-num="32"></td><td><pre> 	url ALIYUN_GRADLE_PLUGIN_URL </pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>        }</pre></td></tr><tr><td data-num="35"></td><td><pre>    }</pre></td></tr><tr><td data-num="36"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/05/10/6Az2DZ4cuX35WGR.png" alt="image.png" /></p>
<h3 id="问题解决了-开工干活" tabindex="-1"><a class="header-anchor" href="#问题解决了-开工干活" aria-hidden="true">#</a> 问题解决了，开工干活</h3>
<h4 id="实验目的" tabindex="-1"><a class="header-anchor" href="#实验目的" aria-hidden="true">#</a> 实验目的</h4>
<p>1、掌握运行时权限使用<br />
2、掌握访问其他应用程序的数据</p>
<h4 id="实验内容" tabindex="-1"><a class="header-anchor" href="#实验内容" aria-hidden="true">#</a> 实验内容</h4>
<p>1．实现拨打电话功能<br />
2．访问通讯录</p>
<h4 id="实验仪器" tabindex="-1"><a class="header-anchor" href="#实验仪器" aria-hidden="true">#</a> 实验仪器</h4>
<p>1)PC机最低配置：2G Hz以上双核CPU,2G以上内存<br />
2)Windows 32位或64位操作系统<br />
3)Android Studio 2.2及以上版本</p>
<h4 id="实验主要步骤" tabindex="-1"><a class="header-anchor" href="#实验主要步骤" aria-hidden="true">#</a> 实验主要步骤</h4>
<p>1）创建实验项目：选择Empty Activity<br />
2）编写布局文件；</p>
<p>activity_main.xml</p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;androidx.constraintlayout.widget.ConstraintLayout</pre></td></tr><tr><td data-num="3"></td><td><pre>        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</pre></td></tr><tr><td data-num="4"></td><td><pre>        xmlns:tools=&quot;http://schemas.android.com/tools&quot;</pre></td></tr><tr><td data-num="5"></td><td><pre>        xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>        android:layout_width=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>        android:layout_height=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="8"></td><td><pre>        tools:context=&quot;.MainActivity&quot;&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    &lt;ListView</pre></td></tr><tr><td data-num="11"></td><td><pre>            android:id=&quot;@+id/list&quot;</pre></td></tr><tr><td data-num="12"></td><td><pre>            android:layout_width=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="13"></td><td><pre>            android:layout_height=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="14"></td><td><pre>            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</pre></td></tr><tr><td data-num="15"></td><td><pre>            app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</pre></td></tr><tr><td data-num="16"></td><td><pre>            app:layout_constraintRight_toRightOf=&quot;parent&quot;</pre></td></tr><tr><td data-num="17"></td><td><pre>            app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>list_item.xml</p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</pre></td></tr><tr><td data-num="2"></td><td><pre>              xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:orientation=&quot;horizontal&quot;</pre></td></tr><tr><td data-num="3"></td><td><pre>              android:layout_width=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="4"></td><td><pre>              android:layout_height=&quot;wrap_content&quot;</pre></td></tr><tr><td data-num="5"></td><td><pre>              android:layout_margin=&quot;20dp&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>              android:padding=&quot;5dp&quot;&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>    &lt;ImageView</pre></td></tr><tr><td data-num="9"></td><td><pre>            android:contentDescription=&quot;@string/icon&quot;</pre></td></tr><tr><td data-num="10"></td><td><pre>            android:src=&quot;@mipmap/kyzja1gl2m4&quot;</pre></td></tr><tr><td data-num="11"></td><td><pre>            android:id=&quot;@+id/image_photo&quot;</pre></td></tr><tr><td data-num="12"></td><td><pre>            android:layout_width=&quot;70dp&quot;</pre></td></tr><tr><td data-num="13"></td><td><pre>            android:layout_height=&quot;70dp&quot; /&gt;</pre></td></tr><tr><td data-num="14"></td><td><pre>    &lt;LinearLayout</pre></td></tr><tr><td data-num="15"></td><td><pre>            android:layout_weight=&quot;1&quot;</pre></td></tr><tr><td data-num="16"></td><td><pre>            android:layout_width=&quot;0dp&quot;</pre></td></tr><tr><td data-num="17"></td><td><pre>            android:layout_height=&quot;70dp&quot;</pre></td></tr><tr><td data-num="18"></td><td><pre>            android:orientation=&quot;vertical&quot;</pre></td></tr><tr><td data-num="19"></td><td><pre>            android:layout_marginRight=&quot;15dp&quot;</pre></td></tr><tr><td data-num="20"></td><td><pre>            android:layout_marginLeft=&quot;15dp&quot;&gt;</pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        &lt;TextView</pre></td></tr><tr><td data-num="23"></td><td><pre>                android:id=&quot;@+id/name&quot;</pre></td></tr><tr><td data-num="24"></td><td><pre>                android:layout_width=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="25"></td><td><pre>                android:layout_weight=&quot;1&quot;</pre></td></tr><tr><td data-num="26"></td><td><pre>                android:layout_height=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="27"></td><td><pre>                android:text=&quot;@string/name&quot;</pre></td></tr><tr><td data-num="28"></td><td><pre>                android:textStyle=&quot;bold&quot;</pre></td></tr><tr><td data-num="29"></td><td><pre>                android:textColor=&quot;#000&quot;</pre></td></tr><tr><td data-num="30"></td><td><pre>                android:textSize=&quot;20sp&quot; tools:ignore=&quot;NestedWeights&quot;/&gt;</pre></td></tr><tr><td data-num="31"></td><td><pre>        &lt;TextView</pre></td></tr><tr><td data-num="32"></td><td><pre>                android:id=&quot;@+id/phone&quot;</pre></td></tr><tr><td data-num="33"></td><td><pre>                android:layout_weight=&quot;1&quot;</pre></td></tr><tr><td data-num="34"></td><td><pre>                android:layout_height=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="35"></td><td><pre>                android:layout_width=&quot;match_parent&quot;</pre></td></tr><tr><td data-num="36"></td><td><pre>                android:text=&quot;@string/phone&quot;</pre></td></tr><tr><td data-num="37"></td><td><pre>                android:textStyle=&quot;bold&quot;</pre></td></tr><tr><td data-num="38"></td><td><pre>                android:textColor=&quot;#666&quot;</pre></td></tr><tr><td data-num="39"></td><td><pre>                android:textSize=&quot;20sp&quot; /&gt;</pre></td></tr><tr><td data-num="40"></td><td><pre>    &lt;/LinearLayout&gt;</pre></td></tr><tr><td data-num="41"></td><td><pre>    &lt;Button</pre></td></tr><tr><td data-num="42"></td><td><pre>            android:layout_width=&quot;70dp&quot;</pre></td></tr><tr><td data-num="43"></td><td><pre>            android:layout_height=&quot;70dp&quot;</pre></td></tr><tr><td data-num="44"></td><td><pre>            android:id=&quot;@+id/call&quot;</pre></td></tr><tr><td data-num="45"></td><td><pre>            android:text=&quot;@string/call&quot;</pre></td></tr><tr><td data-num="46"></td><td><pre>    /&gt;</pre></td></tr><tr><td data-num="47"></td><td><pre>&lt;/LinearLayout&gt;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>3）编写Activity类，单击查询通讯录信息，申请运行时权限</p>
<p>MainActivity</p>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package tk.dragondyt.study6;</pre></td></tr><tr><td data-num="2"></td><td><pre>import android.Manifest;</pre></td></tr><tr><td data-num="3"></td><td><pre>import android.content.pm.PackageManager;</pre></td></tr><tr><td data-num="4"></td><td><pre>import android.database.Cursor;</pre></td></tr><tr><td data-num="5"></td><td><pre>import android.os.Bundle;</pre></td></tr><tr><td data-num="6"></td><td><pre>import android.provider.ContactsContract;</pre></td></tr><tr><td data-num="7"></td><td><pre>import android.util.Log;</pre></td></tr><tr><td data-num="8"></td><td><pre>import android.widget.ListView;</pre></td></tr><tr><td data-num="9"></td><td><pre>import android.widget.Toast;</pre></td></tr><tr><td data-num="10"></td><td><pre>import androidx.annotation.NonNull;</pre></td></tr><tr><td data-num="11"></td><td><pre>import androidx.appcompat.app.AppCompatActivity;</pre></td></tr><tr><td data-num="12"></td><td><pre>import androidx.core.app.ActivityCompat;</pre></td></tr><tr><td data-num="13"></td><td><pre>import androidx.core.content.ContextCompat;</pre></td></tr><tr><td data-num="14"></td><td><pre>import java.util.ArrayList;</pre></td></tr><tr><td data-num="15"></td><td><pre>import java.util.List;</pre></td></tr><tr><td data-num="16"></td><td><pre>/**</pre></td></tr><tr><td data-num="17"></td><td><pre> * @author dyt</pre></td></tr><tr><td data-num="18"></td><td><pre> */</pre></td></tr><tr><td data-num="19"></td><td><pre>public class MainActivity extends AppCompatActivity {</pre></td></tr><tr><td data-num="20"></td><td><pre>    final String TAG = &quot;MainActivity&quot;;</pre></td></tr><tr><td data-num="21"></td><td><pre>    ContactPersonAdapter adapter;</pre></td></tr><tr><td data-num="22"></td><td><pre>    List&lt;Person&gt; contactsList = new ArrayList&lt;&gt;();</pre></td></tr><tr><td data-num="23"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="24"></td><td><pre>    protected void onCreate(Bundle savedInstanceState) {</pre></td></tr><tr><td data-num="25"></td><td><pre>        super.onCreate(savedInstanceState);</pre></td></tr><tr><td data-num="26"></td><td><pre>        setContentView(R.layout.activity_main);</pre></td></tr><tr><td data-num="27"></td><td><pre>        ListView listView = findViewById(R.id.list);</pre></td></tr><tr><td data-num="28"></td><td><pre>        adapter = new ContactPersonAdapter(this,getLayoutInflater(),contactsList);</pre></td></tr><tr><td data-num="29"></td><td><pre>        if(ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CONTACTS) != PackageManager.PERMISSION_GRANTED) {</pre></td></tr><tr><td data-num="30"></td><td><pre>            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_CONTACTS}, 1);</pre></td></tr><tr><td data-num="31"></td><td><pre>        } else {</pre></td></tr><tr><td data-num="32"></td><td><pre>            readContacts();</pre></td></tr><tr><td data-num="33"></td><td><pre>        }</pre></td></tr><tr><td data-num="34"></td><td><pre>        if(ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {</pre></td></tr><tr><td data-num="35"></td><td><pre>            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CALL_PHONE}, 100);</pre></td></tr><tr><td data-num="36"></td><td><pre>        }</pre></td></tr><tr><td data-num="37"></td><td><pre>        listView.setAdapter(adapter);</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>    }</pre></td></tr><tr><td data-num="40"></td><td><pre>    private void readContacts() {</pre></td></tr><tr><td data-num="41"></td><td><pre>        try(Cursor cursor = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,</pre></td></tr><tr><td data-num="42"></td><td><pre>                null, null, null, null)) {</pre></td></tr><tr><td data-num="43"></td><td><pre>            if (cursor != null) {</pre></td></tr><tr><td data-num="44"></td><td><pre>                while (cursor.moveToNext()) {</pre></td></tr><tr><td data-num="45"></td><td><pre>                    String name = cursor.getString(cursor.getColumnIndex(</pre></td></tr><tr><td data-num="46"></td><td><pre>                            ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</pre></td></tr><tr><td data-num="47"></td><td><pre>                    String phone = cursor.getString(cursor.getColumnIndex(</pre></td></tr><tr><td data-num="48"></td><td><pre>                            ContactsContract.CommonDataKinds.Phone.NUMBER));</pre></td></tr><tr><td data-num="49"></td><td><pre>                    contactsList.add(new Person(name,phone));</pre></td></tr><tr><td data-num="50"></td><td><pre>                }</pre></td></tr><tr><td data-num="51"></td><td><pre>                adapter.notifyDataSetChanged();</pre></td></tr><tr><td data-num="52"></td><td><pre>            }</pre></td></tr><tr><td data-num="53"></td><td><pre>        } catch (Exception e) {</pre></td></tr><tr><td data-num="54"></td><td><pre>            Log.d(TAG, &quot;readContacts: &quot;+e.getMessage());</pre></td></tr><tr><td data-num="55"></td><td><pre>        }</pre></td></tr><tr><td data-num="56"></td><td><pre>    }</pre></td></tr><tr><td data-num="57"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="58"></td><td><pre>    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,@NonNull int[] grantsResults) {</pre></td></tr><tr><td data-num="59"></td><td><pre>        if (requestCode == 1) {</pre></td></tr><tr><td data-num="60"></td><td><pre>            if (grantsResults.length &gt; 0 &amp;&amp; grantsResults[0] == PackageManager.PERMISSION_GRANTED) {</pre></td></tr><tr><td data-num="61"></td><td><pre>                readContacts();</pre></td></tr><tr><td data-num="62"></td><td><pre>            } else {</pre></td></tr><tr><td data-num="63"></td><td><pre>                Toast.makeText(this, &quot;请授予访问通讯录权限&quot;, Toast.LENGTH_SHORT).show();</pre></td></tr><tr><td data-num="64"></td><td><pre>            }</pre></td></tr><tr><td data-num="65"></td><td><pre>        }</pre></td></tr><tr><td data-num="66"></td><td><pre>        if (requestCode==100){</pre></td></tr><tr><td data-num="67"></td><td><pre>            if (grantsResults.length &gt; 0 &amp;&amp; grantsResults[0] == PackageManager.PERMISSION_GRANTED) {</pre></td></tr><tr><td data-num="68"></td><td><pre>                readContacts();</pre></td></tr><tr><td data-num="69"></td><td><pre>            } else {</pre></td></tr><tr><td data-num="70"></td><td><pre>                Toast.makeText(this, &quot;请授予拨打电话权限&quot;, Toast.LENGTH_SHORT).show();</pre></td></tr><tr><td data-num="71"></td><td><pre>            }</pre></td></tr><tr><td data-num="72"></td><td><pre>        }</pre></td></tr><tr><td data-num="73"></td><td><pre>    }</pre></td></tr><tr><td data-num="74"></td><td><pre>}</pre></td></tr><tr><td data-num="75"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>4）通过通讯录应用程序提供的内容提供器查询其数据</p>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>private void readContacts() {</pre></td></tr><tr><td data-num="2"></td><td><pre>        try(Cursor cursor = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,</pre></td></tr><tr><td data-num="3"></td><td><pre>                null, null, null, null)) {</pre></td></tr><tr><td data-num="4"></td><td><pre>            if (cursor != null) {</pre></td></tr><tr><td data-num="5"></td><td><pre>                while (cursor.moveToNext()) {</pre></td></tr><tr><td data-num="6"></td><td><pre>                    String name = cursor.getString(cursor.getColumnIndex(</pre></td></tr><tr><td data-num="7"></td><td><pre>                            ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</pre></td></tr><tr><td data-num="8"></td><td><pre>                    String phone = cursor.getString(cursor.getColumnIndex(</pre></td></tr><tr><td data-num="9"></td><td><pre>                            ContactsContract.CommonDataKinds.Phone.NUMBER));</pre></td></tr><tr><td data-num="10"></td><td><pre>                    contactsList.add(new Person(name,phone));</pre></td></tr><tr><td data-num="11"></td><td><pre>                }</pre></td></tr><tr><td data-num="12"></td><td><pre>                adapter.notifyDataSetChanged();</pre></td></tr><tr><td data-num="13"></td><td><pre>            }</pre></td></tr><tr><td data-num="14"></td><td><pre>        } catch (Exception e) {</pre></td></tr><tr><td data-num="15"></td><td><pre>            Log.d(TAG, &quot;readContacts: &quot;+e.getMessage());</pre></td></tr><tr><td data-num="16"></td><td><pre>        }</pre></td></tr><tr><td data-num="17"></td><td><pre>    }</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>5）编写ListView展示通讯录方法，把查询到的数据展示在页面</p>
<p>ContactPersonAdapter</p>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package tk.dragondyt.study6;</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>import android.annotation.SuppressLint;</pre></td></tr><tr><td data-num="4"></td><td><pre>import android.content.Context;</pre></td></tr><tr><td data-num="5"></td><td><pre>import android.content.Intent;</pre></td></tr><tr><td data-num="6"></td><td><pre>import android.net.Uri;</pre></td></tr><tr><td data-num="7"></td><td><pre>import android.view.LayoutInflater;</pre></td></tr><tr><td data-num="8"></td><td><pre>import android.view.View;</pre></td></tr><tr><td data-num="9"></td><td><pre>import android.view.ViewGroup;</pre></td></tr><tr><td data-num="10"></td><td><pre>import android.widget.BaseAdapter;</pre></td></tr><tr><td data-num="11"></td><td><pre>import android.widget.Button;</pre></td></tr><tr><td data-num="12"></td><td><pre>import android.widget.TextView;</pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>import java.util.List;</pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>/**</pre></td></tr><tr><td data-num="17"></td><td><pre> * @author dyt</pre></td></tr><tr><td data-num="18"></td><td><pre> */</pre></td></tr><tr><td data-num="19"></td><td><pre>public class ContactPersonAdapter extends BaseAdapter {</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>    /**定义数据*/</pre></td></tr><tr><td data-num="22"></td><td><pre>    private final List&lt;Person&gt; mData;</pre></td></tr><tr><td data-num="23"></td><td><pre>    /**定义Inflater,加载我们自定义的布局。*/</pre></td></tr><tr><td data-num="24"></td><td><pre>    private final LayoutInflater mInflater;</pre></td></tr><tr><td data-num="25"></td><td><pre>    private final Context context;</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  /**</pre></td></tr><tr><td data-num="28"></td><td><pre>    定义构造器，在Activity创建对象Adapter的时候将数据data和Inflater传入自定义的Adapter中进行处理。</pre></td></tr><tr><td data-num="29"></td><td><pre>    */</pre></td></tr><tr><td data-num="30"></td><td><pre>    public ContactPersonAdapter(Context context,LayoutInflater inflater, List&lt;Person&gt; data){</pre></td></tr><tr><td data-num="31"></td><td><pre>        mInflater = inflater;</pre></td></tr><tr><td data-num="32"></td><td><pre>        mData = data;</pre></td></tr><tr><td data-num="33"></td><td><pre>        this.context = context;</pre></td></tr><tr><td data-num="34"></td><td><pre>    }</pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="37"></td><td><pre>    public int getCount() {</pre></td></tr><tr><td data-num="38"></td><td><pre>        return mData.size();</pre></td></tr><tr><td data-num="39"></td><td><pre>    }</pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="42"></td><td><pre>    public Object getItem(int position) {</pre></td></tr><tr><td data-num="43"></td><td><pre>        return position;</pre></td></tr><tr><td data-num="44"></td><td><pre>    }</pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="47"></td><td><pre>    public long getItemId(int position) {</pre></td></tr><tr><td data-num="48"></td><td><pre>        return position;</pre></td></tr><tr><td data-num="49"></td><td><pre>    }</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="52"></td><td><pre>    public View getView(int position, View view, ViewGroup viewGroup) {</pre></td></tr><tr><td data-num="53"></td><td><pre>        @SuppressLint(&quot;ViewHolder&quot;)</pre></td></tr><tr><td data-num="54"></td><td><pre>        View item = mInflater.inflate(R.layout.list_item,null);</pre></td></tr><tr><td data-num="55"></td><td><pre>        Person person = mData.get(position);</pre></td></tr><tr><td data-num="56"></td><td><pre>        TextView name = item.findViewById(R.id.name);</pre></td></tr><tr><td data-num="57"></td><td><pre>        TextView phone = item.findViewById(R.id.phone);</pre></td></tr><tr><td data-num="58"></td><td><pre>        Button call = item.findViewById(R.id.call);</pre></td></tr><tr><td data-num="59"></td><td><pre>        call.setOnClickListener((v)-&gt;{</pre></td></tr><tr><td data-num="60"></td><td><pre>            Intent intentCall =  new Intent();</pre></td></tr><tr><td data-num="61"></td><td><pre>            intentCall.setAction(Intent.ACTION_CALL);</pre></td></tr><tr><td data-num="62"></td><td><pre>            intentCall.setData(Uri.parse(&quot;tel:&quot; + person.getPhone()));</pre></td></tr><tr><td data-num="63"></td><td><pre>            context.startActivity(intentCall);</pre></td></tr><tr><td data-num="64"></td><td><pre>        });</pre></td></tr><tr><td data-num="65"></td><td><pre>        name.setText(person.name);</pre></td></tr><tr><td data-num="66"></td><td><pre>        phone.setText(person.phone);</pre></td></tr><tr><td data-num="67"></td><td><pre>         return item ;</pre></td></tr><tr><td data-num="68"></td><td><pre>    }</pre></td></tr><tr><td data-num="69"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>Person</p>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package tk.dragondyt.study6;</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>/**</pre></td></tr><tr><td data-num="4"></td><td><pre> * @author dyt</pre></td></tr><tr><td data-num="5"></td><td><pre> */</pre></td></tr><tr><td data-num="6"></td><td><pre>public class Person {</pre></td></tr><tr><td data-num="7"></td><td><pre>    String name;</pre></td></tr><tr><td data-num="8"></td><td><pre>    String phone;</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    public Person(String name, String phone) {</pre></td></tr><tr><td data-num="11"></td><td><pre>        this.name = name;</pre></td></tr><tr><td data-num="12"></td><td><pre>        this.phone = phone;</pre></td></tr><tr><td data-num="13"></td><td><pre>    }</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    public String getName() {</pre></td></tr><tr><td data-num="16"></td><td><pre>        return name;</pre></td></tr><tr><td data-num="17"></td><td><pre>    }</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    public void setName(String name) {</pre></td></tr><tr><td data-num="20"></td><td><pre>        this.name = name;</pre></td></tr><tr><td data-num="21"></td><td><pre>    }</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    public String getPhone() {</pre></td></tr><tr><td data-num="24"></td><td><pre>        return phone;</pre></td></tr><tr><td data-num="25"></td><td><pre>    }</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>    public void setPhone(String phone) {</pre></td></tr><tr><td data-num="28"></td><td><pre>        this.phone = phone;</pre></td></tr><tr><td data-num="29"></td><td><pre>    }</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="32"></td><td><pre>    public String toString() {</pre></td></tr><tr><td data-num="33"></td><td><pre>        return &quot;Person{&quot; +</pre></td></tr><tr><td data-num="34"></td><td><pre>                &quot;name='&quot; + name + '\'' +</pre></td></tr><tr><td data-num="35"></td><td><pre>                &quot;, phone='&quot; + phone + '\'' +</pre></td></tr><tr><td data-num="36"></td><td><pre>                '}';</pre></td></tr><tr><td data-num="37"></td><td><pre>    }</pre></td></tr><tr><td data-num="38"></td><td><pre>}</pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h4 id="最后附上截图-最讨厌没图的教程。" tabindex="-1"><a class="header-anchor" href="#最后附上截图-最讨厌没图的教程。" aria-hidden="true">#</a> 最后附上截图，最讨厌没图的教程。</h4>
<p><img src="https://i.loli.net/2020/05/10/4ZVY3qmebrPkGuM.png" alt="运行截图" /></p>
<p><a href="https://vip.d0.baidupan.com/file/?VTMBP1loBTQBCFBoUGVRPQE+ATlTfwt9CnhQMlJ3W2wBLwUoCj4GIlMjADBWa1c6AD8FX1FnAmRWbAE1Uz0BNlVhAW5ZNQVmAWZQIFBiUSMBZgEzUzoLOQo/UGdSPltsAScFIgonBm9TNwBmVjBXZgB1BTBROwIvVmABN1MgATVVbQFnWTMFNwFiUGJQYlFjAW4BYFM+Cz4KOVBkUjtbPAFnBWQKYwZiU2YAZ1ZgV2UAPAU2UTYCZlZpATdTPAEuVS8BP1l0BXcBIlB1UGFRIgEyAWBTMQs4CjlQZFI6W2IBMQViCnEGJlNsADtWZ1cwAGcFMVE7AjhWaAE2Uz8BMVVkAWFZMQV/AXFQc1B0UW0BagEqUyoLbwphUCFSM1tqAScFJwonBiVTOABnVjdXbgBjBTFRPgIwVmABNFM7ASZVIAE/WXQFbAFmUDFQMVF+AW8BKlM+CzgKO1B4Ujo=" target="_blank" rel="noopener noreferrer">实验源码</a></p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
            <category>undefined</category>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/110823-14930033035b6a.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[AAPT: error: resource android:attr/fontVariationSettings not found]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/47867b98/Flutter/74684463.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/47867b98/Flutter/74684463.html</guid>
            <pubDate>Sat, 09 May 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="心累-每天都是-惊喜-我太菜了" tabindex="-1"><a class="header-anchor" href="#心累-每天都是-惊喜-我太菜了" aria-hidden="true">#</a> 心累，每天都是“惊喜”，我太菜了</h2>
<p>环境<br />
开发工具 idea</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>flutter doctor</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>D:\Android\flutter\bin\flutter.bat doctor --verbose</pre></td></tr><tr><td data-num="4"></td><td><pre>[√] Flutter (Channel stable, v1.17.0, on Microsoft Windows [Version 10.0.18363.815], locale zh-CN)</pre></td></tr><tr><td data-num="5"></td><td><pre>    • Flutter version 1.17.0 at D:\Android\flutter</pre></td></tr><tr><td data-num="6"></td><td><pre>    • Framework revision e6b34c2b5c (7 days ago), 2020-05-02 11:39:18 -0700</pre></td></tr><tr><td data-num="7"></td><td><pre>    • Engine revision 540786dd51</pre></td></tr><tr><td data-num="8"></td><td><pre>    • Dart version 2.8.1</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>[√] Android toolchain - develop for Android devices (Android SDK version 29.0.3)</pre></td></tr><tr><td data-num="11"></td><td><pre>    • Android SDK at D:\Android\android-sdk</pre></td></tr><tr><td data-num="12"></td><td><pre>    • Platform android-29, build-tools 29.0.3</pre></td></tr><tr><td data-num="13"></td><td><pre>    • ANDROID_HOME = D:\Android\android-sdk</pre></td></tr><tr><td data-num="14"></td><td><pre>    • Java binary at: D:\Program Files\Java\jdk1.8.0_241\bin\java</pre></td></tr><tr><td data-num="15"></td><td><pre>    • Java version Java(TM) SE Runtime Environment (build 1.8.0_241-b07)</pre></td></tr><tr><td data-num="16"></td><td><pre>    • All Android licenses accepted.</pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>[!] Android Studio (not installed)</pre></td></tr><tr><td data-num="19"></td><td><pre>    • Android Studio not found; download from https://developer.android.com/studio/index.html</pre></td></tr><tr><td data-num="20"></td><td><pre>      (or visit https://flutter.dev/docs/get-started/install/windows#android-setup for detailed instructions).</pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>[√] Connected device (1 available)</pre></td></tr><tr><td data-num="23"></td><td><pre>    • Android SDK built for x86 • emulator-5554 • android-x86 • Android 8.0.0 (API 26) (emulator)</pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>! Doctor found issues in 1 category.</pre></td></tr><tr><td data-num="26"></td><td><pre>Process finished with exit code 0</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/05/09/IzAgor5ceEDQtC6.png" alt="Could not find androidx.lifecycle:lifecycle-common:2.2.0，lifecycle-common-java8:2.2.0，lifecycle-runtime:2.2.0，androidx.fragment:fragment:1.1.0.，androidx.annotation:annotation:1.1.0." /><br />
解决方法：</p>
<figure class="highlight groovy">
<figcaption data-lang="groovy"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>allprojects {</pre></td></tr><tr><td data-num="2"></td><td><pre>    repositories {</pre></td></tr><tr><td data-num="3"></td><td><pre>        google() </pre></td></tr><tr><td data-num="4"></td><td><pre>        jcenter()</pre></td></tr><tr><td data-num="5"></td><td><pre>        maven { url &quot;https://maven.google.com&quot; }//感觉google()是假的,这里我用了阿里云镜像，可能没同步吧。</pre></td></tr><tr><td data-num="6"></td><td><pre>    }</pre></td></tr><tr><td data-num="7"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/05/09/xOWjZLbfkpzEA5a.png" alt=".gradleachesransforms-1iles-1.1ore-1.1.0.aarb817d4a7e2a888884c999547cadccefesaluesalues.xml:7:5-70: AAPT: error: resource android:attr/fontVariationSettings not found.AAPT: error: resource android:attr/ttcIndex not found" /></p>
<p><a href="https://stackoverflow.com/questions/49208772/error-resource-androidattr-fontvariationsettings-not-found" target="_blank" rel="noopener noreferrer">stackoverflow上解决方法</a></p>
<p>解决方法：<br />
修改app下的build.gradle文件</p>
<figure class="highlight groovy">
<figcaption data-lang="groovy"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>android {</pre></td></tr><tr><td data-num="2"></td><td><pre>    compileSdkVersion 28</pre></td></tr><tr><td data-num="3"></td><td><pre>    defaultConfig {</pre></td></tr><tr><td data-num="4"></td><td><pre>	...</pre></td></tr><tr><td data-num="5"></td><td><pre>        targetSdkVersion 28</pre></td></tr><tr><td data-num="6"></td><td><pre>	...</pre></td></tr><tr><td data-num="7"></td><td><pre>    }</pre></td></tr><tr><td data-num="8"></td><td><pre>    ...</pre></td></tr><tr><td data-num="9"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>stackoverflow真是个好东西，可惜要翻墙，感想上面的大神。<br />
不写了，累，这种资料网站都要墙，真是丧心病狂，什么时候能不用镜像站。构建工具再好，巧妇难为无米之炊啊</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
            <category>undefined</category>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/193708-15779650287a6a.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Android逆向工程：使用Apktool反编译小米便签]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/aa3015f4.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/e00fc567/5ac6f809/aa3015f4.html</guid>
            <pubDate>Thu, 04 Jun 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="记录一次安卓反编译过程" tabindex="-1"><a class="header-anchor" href="#记录一次安卓反编译过程" aria-hidden="true">#</a> 记录一次安卓反编译过程</h2>
<p>下周就要安卓课设，而我的课设作业是开发一个记事本，我发现我小米手机上的便签挺好的，于是想参考一下布局以及实现。</p>
<table>
<thead>
<tr>
<th>软件</th>
<th>apktool</th>
<th>dex2jar</th>
<th>jd-jui</th>
</tr>
</thead>
<tbody>
<tr>
<td>版本</td>
<td>2.4.1</td>
<td>2.1</td>
<td>0.3.5</td>
</tr>
</tbody>
</table>
<h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3>
<ol>
<li>
<p>获取小米便签<br />
网上没有最新版下载，通过Es文件浏览器导出apk。<br />
也可以通过mt浏览器，因为后面需要三个framework文件，Es浏览器和Re浏览器好像屏蔽了根目录，不能访问了。</p>
</li>
<li>
<p>下载反编译相关工具<br />
<a href="https://www.runoob.com/w3cnote/android-tutorial-decompile-apk-get-code-resources.html" target="_blank" rel="noopener noreferrer">菜鸟教程</a><s>的<a href="http://static.runoob.com/download/%E5%8F%8D%E7%BC%96%E8%AF%91%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%89%E4%B8%AA%E5%B7%A5%E5%85%B7.zip" target="_blank" rel="noopener noreferrer">三个工具</a></s>,版本低,</p>
</li>
<li>
<p>我使用的<a href="https://pan.baidu.com/s/1Lox7zYgUyfeB5H0i3aFxZw" target="_blank" rel="noopener noreferrer">三个工具</a> 密码：7uyi</p>
</li>
</ol>
<h3 id="开始反编译" tabindex="-1"><a class="header-anchor" href="#开始反编译" aria-hidden="true">#</a> 开始反编译</h3>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>apktool.bat d base.apk</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/06/04/ZXokSryDnmITE6L.png" alt="Could not decode arsc file" /></p>
<p>这个是由于apktool版本低导致的，下载<a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener noreferrer">最新的</a>重命名为apktool.jar替换即可<br />
更新最新apktool后再次执行命令，还是失败，错误信息如下：</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=miui, name=fabColor, value=0x7f06002e</pre></td></tr><tr><td data-num="2"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=miui, name=fabColor, value=0x7f06002e</pre></td></tr><tr><td data-num="3"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=android, name=id, value=0x100b0001</pre></td></tr><tr><td data-num="4"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=miui, name=fabColor, value=0x7f06002e</pre></td></tr><tr><td data-num="5"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=, name=layout, value=0x10030009</pre></td></tr><tr><td data-num="6"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=, name=style, value=0x100d008f</pre></td></tr><tr><td data-num="7"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=android, name=textAppearance, value=0x100d0058</pre></td></tr><tr><td data-num="8"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=, name=style, value=0x100d008f</pre></td></tr><tr><td data-num="9"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=android, name=textAppearance, value=0x100d008f</pre></td></tr><tr><td data-num="10"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=miui, name=fabColor, value=0x7f06002e</pre></td></tr><tr><td data-num="11"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=android, name=height, value=0x100a0003</pre></td></tr><tr><td data-num="12"></td><td><pre>W: Could not decode attr value, using undecoded value instead: ns=android, name=width, value=0x100a0003</pre></td></tr><tr><td data-num="13"></td><td><pre>I: Decoding values */* XMLs...</pre></td></tr><tr><td data-num="14"></td><td><pre>Can't find framework resources for package of id: 16. You must install proper framework files, see project website for more info.</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>查看一下反编译结果，发现资源以及提取出来，但是没有任何代码。<br />
百度了最后一句话发现，有些应用需要提供额外框架，具体信息可以查看一下博文<a href="https://blog.csdn.net/qq_34149335/article/details/85317554" target="_blank" rel="noopener noreferrer">Android逆向工程：解决针对小米系统应用，使用Apktool反编译失败问题！</a></p>
<p>根据博文我提取了文章中提到的framework-res.apk，framework-ext-res.apk，miui.apk。<br />
<img src="https://i.loli.net/2020/06/04/9Qt8rOxRElfmUTM.png" alt="文件列表" /></p>
<p>执行一下命令安装：</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>apktool if framework-res.apk</pre></td></tr><tr><td data-num="2"></td><td><pre>apktool if framework-ext-res.apk</pre></td></tr><tr><td data-num="3"></td><td><pre>apktool if miui.apk</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>安装完成后发现缺少的16号对应framework-ext-res.apk</p>
<p><img src="https://i.loli.net/2020/06/04/MKstzCTDjSVB6c3.png" alt="缺少的16号" /></p>
<p>再次执行 apktool.bat d base.apk 后发现还有问题，提示缺少了id为18的框架文件</p>
<p><img src="https://i.loli.net/2020/06/04/fpaNmjZBkUAHzbs.png" alt="缺少了id为18的框架文件" /></p>
<p>我有点头疼，我怎么知道18号是什么文件，于是尝试导入其他文件，搜索framework，找到了一个名为XiaomiServiceFramework.apk的文件，并进行安装；</p>
<p><img src="https://i.loli.net/2020/06/04/aCuLyGkgOSX3zT4.png" alt="apktool if XiaomiServiceFramework.apk" /></p>
<p>根据上图，我发现这个文件不是我们需要的，但它提供了一个信息：<br />
++I: Decoding Shared Library (miui.system), pkgId: 18++<br />
于是我去搜索system，经过筛选找到miuisystem.apk，进行安装，发现他就是我们需要的18号：</p>
<p><img src="https://i.loli.net/2020/06/04/2KEGIgHxmPlTDpM.png" alt="apktool if miuisystem.apk" /><br />
再次反编译没有报错，查看文件发现Smali代码成功获取：</p>
<p><img src="https://i.loli.net/2020/06/04/fvRbyGZUATC5u2S.png" alt="成功截图" /></p>
<p>反编译到此结束，会smali语法的大佬已经可以阅读代码了，不会的可以使用<a href="https://pan.baidu.com/s/1Cr1E4Cw7d_djRkU92R12kQ" target="_blank" rel="noopener noreferrer">工具</a>转java再阅读</p>
<h3 id="使用dex2jar将dex转成jar" tabindex="-1"><a class="header-anchor" href="#使用dex2jar将dex转成jar" aria-hidden="true">#</a> 使用dex2jar将dex转成jar</h3>
<ol>
<li>将base.apk当成压缩包打开</li>
<li>提取 classes.dex，classes2.dex<br />
执行命令：</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>d2j-dex2jar.bat classes.dex</pre></td></tr><tr><td data-num="2"></td><td><pre>d2j-dex2jar.bat classes2.dex</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://i.loli.net/2020/06/04/CdtOHRTqI81vZzk.png" alt="d2j-dex2jar.bat classes.dex" /><br />
这个也是版本低导致的，下载<a href="https://github.com/pxb1988/dex2jar/releases" target="_blank" rel="noopener noreferrer">最新的</a>就可以了<br />
再次执行,出了新问题,我之前没遇到</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>C:\Users\dyt\Desktop\dex-tools-2.1-SNAPSHOT&gt;d2j-dex2jar.bat classes.dex</pre></td></tr><tr><td data-num="2"></td><td><pre>dex2jar classes.dex -&gt; .\classes-dex2jar.jar</pre></td></tr><tr><td data-num="3"></td><td><pre>Detail Error Information in File .\classes-error.zip</pre></td></tr><tr><td data-num="4"></td><td><pre>Please report this file to one of following link if possible (any one).</pre></td></tr><tr><td data-num="5"></td><td><pre>    https://sourceforge.net/p/dex2jar/tickets/</pre></td></tr><tr><td data-num="6"></td><td><pre>    https://bitbucket.org/pxb1988/dex2jar/issues</pre></td></tr><tr><td data-num="7"></td><td><pre>    https://github.com/pxb1988/dex2jar/issues [no attachment support, not preferred]</pre></td></tr><tr><td data-num="8"></td><td><pre>    dex2jar@googlegroups.com</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>换了一个多了后缀的2.1版本，成功解决，但我不记得在哪下的了</p>
<p><img src="https://i.loli.net/2020/06/04/UGmDHJeog4KQwWX.png" alt="成功获取jar" /></p>
<p><img src="https://i.loli.net/2020/06/04/HT1npCbsFUSjRqw.png" alt="获取的jar" /></p>
<h3 id="使用jd-gui查看" tabindex="-1"><a class="header-anchor" href="#使用jd-gui查看" aria-hidden="true">#</a> 使用jd-gui查看</h3>
<p>这个就是软件使用了，跟一般软件没区别，将jar包拖到jd-gui.exe就行了，不多说，自己体会。</p>
<p><img src="https://i.loli.net/2020/06/04/DfpVFCQrwcY16Ey.png" alt="使用截图" /></p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/5ed0bfdf3318a.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[使用yandex邮箱 ,报错Got bad greeting from SMTP host: smtp.yandex.com, port: 465, response: [EOF]]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/47867b98/Java/c82dcf86.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/47867b98/Java/c82dcf86.html</guid>
            <pubDate>Wed, 29 Jul 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2>
<p>  今天做了一个自动打卡工具，准备搭建邮件服务，反馈打卡结果。使用的邮箱是yandex mail。出现Got bad greeting from SMTP host: <a href="http://smtp.yandex.com" target="_blank" rel="noopener noreferrer">smtp.yandex.com</a>, port: 465, response: [EOF]，记录一下。</p>
<h3 id="邮箱准备" tabindex="-1"><a class="header-anchor" href="#邮箱准备" aria-hidden="true">#</a> 邮箱准备</h3>
<p>  使用邮箱没有要求，支持smtp就行</p>
<h4 id="注册邮箱" tabindex="-1"><a class="header-anchor" href="#注册邮箱" aria-hidden="true">#</a> 注册邮箱</h4>
<p><a href="https://mail.yandex.com/" target="_blank" rel="noopener noreferrer">yandex mail注册地址</a></p>
<h4 id="登录邮箱" tabindex="-1"><a class="header-anchor" href="#登录邮箱" aria-hidden="true">#</a> 登录邮箱</h4>
<p>  登录邮箱后可能会提示开启smtp。</p>
<p>这里是官方提供打开smtp的文档，还记录了端口号。<br />
<img src="https://img-blog.csdnimg.cn/20200729200238708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="官方文档表示端口是465" /></p>
<h4 id="启用smtp" tabindex="-1"><a class="header-anchor" href="#启用smtp" aria-hidden="true">#</a> 启用smtp</h4>
<p>  邮箱首页右上角的齿轮&gt;security&gt; Email clients&gt;<br />
<img src="https://img-blog.csdnimg.cn/20200729200832524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="smtp启用页面" /><br />
这里我使用outlook测试了连接，使用的端口是465，附连接成功图。</p>
<p><img src="https://img-blog.csdnimg.cn/20200729201400266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="连接成功图" /></p>
<h3 id="邮件协议" tabindex="-1"><a class="header-anchor" href="#邮件协议" aria-hidden="true">#</a> 邮件协议</h3>
<h4 id="smtp-协议" tabindex="-1"><a class="header-anchor" href="#smtp-协议" aria-hidden="true">#</a> SMTP 协议</h4>
<p>SMTP是一个相对简单的基于文本的协议。在其之上指定了一条消息的一个或多个接收者（在大多数情况下被确认是存在的），然后消息文本会被传输。可以很简单地通过telnet程序来测试一个SMTP服务器。提供了SSL加密的SMTP协议被称为SMTPS，SMTP使用TCP端口<code>25</code>，SMTPS使用TCP端口<code>465</code></p>
<h4 id="pop3-协议" tabindex="-1"><a class="header-anchor" href="#pop3-协议" aria-hidden="true">#</a> POP3 协议</h4>
<p>POP3，全名为“Post Office Protocol - Version 3”，即“邮局协议版本3”。是TCP/IP协议族中的一员，由RFC1939 定义。本协议主要用于支持使用客户端远程管理在服务器上的电子邮件。提供了SSL加密的POP3协议被称为POP3S，POP3 默认端口<code>110</code>，POP3S默认端口<code>995</code>。</p>
<h4 id="imap-协议" tabindex="-1"><a class="header-anchor" href="#imap-协议" aria-hidden="true">#</a> IMAP 协议</h4>
<p>IMAP（Internet Mail Access Protocol）以前称作交互邮件访问协议（Interactive Mail Access Protocol），是一个应用层协议。IMAP是斯坦福大学在1986年开发的一种邮件获取协议。它的主要作用是邮件客户端可以通过这种协议从邮件服务器上获取邮件的信息，下载邮件等。当前的权威定义是RFC3501。IMAP协议运行在TCP/IP协议之上，使用的端口是<code>143</code>。它与POP3协议的主要区别是用户可以不用把所有的邮件全部下载，可以通过客户端直接对服务器上的邮件进行操作，提供了SSL加密的IMAP协议被称为IMAP S，POP3 默认端口<code>143</code>，POP3S默认端口<code>993</code>。</p>
<h3 id="搭建步骤及简单使用" tabindex="-1"><a class="header-anchor" href="#搭建步骤及简单使用" aria-hidden="true">#</a> 搭建步骤及简单使用</h3>
<h4 id="mail依赖" tabindex="-1"><a class="header-anchor" href="#mail依赖" aria-hidden="true">#</a> mail依赖</h4>
<p>build.gradl文件</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.3.2.RELEASE'</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h4 id="yml配置文件" tabindex="-1"><a class="header-anchor" href="#yml配置文件" aria-hidden="true">#</a> yml配置文件</h4>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>server:</pre></td></tr><tr><td data-num="2"></td><td><pre>  port: 80</pre></td></tr><tr><td data-num="3"></td><td><pre>logging:</pre></td></tr><tr><td data-num="4"></td><td><pre>  level:</pre></td></tr><tr><td data-num="5"></td><td><pre>    web: debug</pre></td></tr><tr><td data-num="6"></td><td><pre>spring:</pre></td></tr><tr><td data-num="7"></td><td><pre>  mail:</pre></td></tr><tr><td data-num="8"></td><td><pre>    default-encoding: UTF-8</pre></td></tr><tr><td data-num="9"></td><td><pre>    host: smtp.yandex.com</pre></td></tr><tr><td data-num="10"></td><td><pre>    username: xxx@xxx.xx</pre></td></tr><tr><td data-num="11"></td><td><pre>    password: 123456</pre></td></tr><tr><td data-num="12"></td><td><pre>    port: 25 #smtp协议使用25端口 </pre></td></tr><tr><td data-num="13"></td><td><pre>#    port: 465 #smtps使用465端口，不然报错。</pre></td></tr><tr><td data-num="14"></td><td><pre>    protocol: smtp #指定协议</pre></td></tr><tr><td data-num="15"></td><td><pre>    test-connection: true</pre></td></tr><tr><td data-num="16"></td><td><pre>    properties:</pre></td></tr><tr><td data-num="17"></td><td><pre>      mail:</pre></td></tr><tr><td data-num="18"></td><td><pre>        smtp:</pre></td></tr><tr><td data-num="19"></td><td><pre>          auth: true # 使用</pre></td></tr><tr><td data-num="20"></td><td><pre>          starttls: # 使用 SSL 安全协议，须如下配置</pre></td></tr><tr><td data-num="21"></td><td><pre>            enable: true</pre></td></tr><tr><td data-num="22"></td><td><pre>            required: true</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h4 id="java代码" tabindex="-1"><a class="header-anchor" href="#java代码" aria-hidden="true">#</a> java代码</h4>
<h5 id="mailservice-接口文件" tabindex="-1"><a class="header-anchor" href="#mailservice-接口文件" aria-hidden="true">#</a> MailService 接口文件</h5>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>public interface MailService {</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>    /**</pre></td></tr><tr><td data-num="4"></td><td><pre>     * 发送纯文本邮件</pre></td></tr><tr><td data-num="5"></td><td><pre>     * @param toAddr 收件人</pre></td></tr><tr><td data-num="6"></td><td><pre>     * @param title 标题</pre></td></tr><tr><td data-num="7"></td><td><pre>     * @param content 内容</pre></td></tr><tr><td data-num="8"></td><td><pre>     */</pre></td></tr><tr><td data-num="9"></td><td><pre>    void sendTextMail(String toAddr, String title, String content);</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    /**</pre></td></tr><tr><td data-num="12"></td><td><pre>     * 发送 html 邮件</pre></td></tr><tr><td data-num="13"></td><td><pre>     * @param toAddr 收件人</pre></td></tr><tr><td data-num="14"></td><td><pre>     * @param title 标题</pre></td></tr><tr><td data-num="15"></td><td><pre>     * @param content 内容（HTML）</pre></td></tr><tr><td data-num="16"></td><td><pre>     */</pre></td></tr><tr><td data-num="17"></td><td><pre>    void sendHtmlMail(String toAddr, String title, String content);</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    /**</pre></td></tr><tr><td data-num="20"></td><td><pre>     *  发送待附件的邮件</pre></td></tr><tr><td data-num="21"></td><td><pre>     * @param toAddr 收件人</pre></td></tr><tr><td data-num="22"></td><td><pre>     * @param title 标题</pre></td></tr><tr><td data-num="23"></td><td><pre>     * @param content 内容</pre></td></tr><tr><td data-num="24"></td><td><pre>     * @param filePath 附件地址</pre></td></tr><tr><td data-num="25"></td><td><pre>     */</pre></td></tr><tr><td data-num="26"></td><td><pre>    void sendAttachmentsMail(String toAddr, String title, String content, String filePath);</pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    /**</pre></td></tr><tr><td data-num="29"></td><td><pre>     *  发送文本中有静态资源（图片）的邮件</pre></td></tr><tr><td data-num="30"></td><td><pre>     * @param toAddr 收件人</pre></td></tr><tr><td data-num="31"></td><td><pre>     * @param title 标题</pre></td></tr><tr><td data-num="32"></td><td><pre>     * @param content 内容</pre></td></tr><tr><td data-num="33"></td><td><pre>     * @param rscPath 资源路径</pre></td></tr><tr><td data-num="34"></td><td><pre>     * @param rscId 资源id (可能有多个图片)</pre></td></tr><tr><td data-num="35"></td><td><pre>     */</pre></td></tr><tr><td data-num="36"></td><td><pre>    void sendInlineResourceMail(String toAddr, String title, String content, String rscPath, String rscId);</pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h5 id="mailserviceimpl文件" tabindex="-1"><a class="header-anchor" href="#mailserviceimpl文件" aria-hidden="true">#</a> MailServiceImpl文件</h5>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>@Component</pre></td></tr><tr><td data-num="2"></td><td><pre>public class MailServiceImpl implements MailService {</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>    private final Logger logger = LoggerFactory.getLogger(this.getClass());</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    private final JavaMailSender mailSender;</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>    /**</pre></td></tr><tr><td data-num="9"></td><td><pre>     * 注入常量</pre></td></tr><tr><td data-num="10"></td><td><pre>     */</pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    @Value(&quot;${spring.mail.username}&quot;)</pre></td></tr><tr><td data-num="13"></td><td><pre>    private String from;</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    public MailServiceImpl(JavaMailSender mailSender) {</pre></td></tr><tr><td data-num="16"></td><td><pre>        this.mailSender = mailSender;</pre></td></tr><tr><td data-num="17"></td><td><pre>    }</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    /**</pre></td></tr><tr><td data-num="20"></td><td><pre>     * 发送文本邮件</pre></td></tr><tr><td data-num="21"></td><td><pre>     *</pre></td></tr><tr><td data-num="22"></td><td><pre>     * @param toAddr  收件人</pre></td></tr><tr><td data-num="23"></td><td><pre>     * @param title   标题</pre></td></tr><tr><td data-num="24"></td><td><pre>     * @param content 内容</pre></td></tr><tr><td data-num="25"></td><td><pre>     */</pre></td></tr><tr><td data-num="26"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="27"></td><td><pre>    public void sendTextMail(String toAddr, String title, String content) {</pre></td></tr><tr><td data-num="28"></td><td><pre>        // 纯文本邮件对象</pre></td></tr><tr><td data-num="29"></td><td><pre>        SimpleMailMessage message = new SimpleMailMessage();</pre></td></tr><tr><td data-num="30"></td><td><pre>        message.setFrom(from);</pre></td></tr><tr><td data-num="31"></td><td><pre>        message.setTo(toAddr);</pre></td></tr><tr><td data-num="32"></td><td><pre>        message.setSubject(title);</pre></td></tr><tr><td data-num="33"></td><td><pre>        message.setText(content);</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>        try {</pre></td></tr><tr><td data-num="36"></td><td><pre>            mailSender.send(message);</pre></td></tr><tr><td data-num="37"></td><td><pre>            if (logger.isInfoEnabled()) {</pre></td></tr><tr><td data-num="38"></td><td><pre>                logger.info(&quot;Text邮件已经发送。&quot;);</pre></td></tr><tr><td data-num="39"></td><td><pre>            }</pre></td></tr><tr><td data-num="40"></td><td><pre>        } catch (Exception e) {</pre></td></tr><tr><td data-num="41"></td><td><pre>            logger.error(&quot;发送Text邮件时发生异常！&quot;, e);</pre></td></tr><tr><td data-num="42"></td><td><pre>        }</pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>    }</pre></td></tr><tr><td data-num="45"></td><td><pre>    </pre></td></tr><tr><td data-num="46"></td><td><pre>    /**</pre></td></tr><tr><td data-num="47"></td><td><pre>     * 发送 html 邮件</pre></td></tr><tr><td data-num="48"></td><td><pre>     *</pre></td></tr><tr><td data-num="49"></td><td><pre>     * @param toAddr  收件人</pre></td></tr><tr><td data-num="50"></td><td><pre>     * @param title   标题</pre></td></tr><tr><td data-num="51"></td><td><pre>     * @param content 内容（HTML）</pre></td></tr><tr><td data-num="52"></td><td><pre>     */</pre></td></tr><tr><td data-num="53"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="54"></td><td><pre>    public void sendHtmlMail(String toAddr, String title, String content) {</pre></td></tr><tr><td data-num="55"></td><td><pre>        // html 邮件对象</pre></td></tr><tr><td data-num="56"></td><td><pre>        MimeMessage message = mailSender.createMimeMessage();</pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>        try {</pre></td></tr><tr><td data-num="59"></td><td><pre>            //true表示需要创建一个multipart message</pre></td></tr><tr><td data-num="60"></td><td><pre>            MimeMessageHelper helper = new MimeMessageHelper(message, true);</pre></td></tr><tr><td data-num="61"></td><td><pre>            helper.setFrom(from);</pre></td></tr><tr><td data-num="62"></td><td><pre>            helper.setTo(toAddr);</pre></td></tr><tr><td data-num="63"></td><td><pre>            helper.setSubject(title);</pre></td></tr><tr><td data-num="64"></td><td><pre>            helper.setText(content, true);</pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre>            mailSender.send(message);</pre></td></tr><tr><td data-num="67"></td><td><pre>            if (logger.isInfoEnabled()) {</pre></td></tr><tr><td data-num="68"></td><td><pre>                logger.info(&quot;html邮件发送成功&quot;);</pre></td></tr><tr><td data-num="69"></td><td><pre>            }</pre></td></tr><tr><td data-num="70"></td><td><pre>        } catch (MessagingException e) {</pre></td></tr><tr><td data-num="71"></td><td><pre>            logger.error(&quot;发送html邮件时发生异常！&quot;, e);</pre></td></tr><tr><td data-num="72"></td><td><pre>        }</pre></td></tr><tr><td data-num="73"></td><td><pre>    }</pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre></pre></td></tr><tr><td data-num="76"></td><td><pre>    /**</pre></td></tr><tr><td data-num="77"></td><td><pre>     * 发送待附件的邮件</pre></td></tr><tr><td data-num="78"></td><td><pre>     *</pre></td></tr><tr><td data-num="79"></td><td><pre>     * @param toAddr   收件人</pre></td></tr><tr><td data-num="80"></td><td><pre>     * @param title    标题</pre></td></tr><tr><td data-num="81"></td><td><pre>     * @param content  内容</pre></td></tr><tr><td data-num="82"></td><td><pre>     * @param filePath 附件地址</pre></td></tr><tr><td data-num="83"></td><td><pre>     */</pre></td></tr><tr><td data-num="84"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="85"></td><td><pre>    public void sendAttachmentsMail(String toAddr, String title, String content, String filePath) {</pre></td></tr><tr><td data-num="86"></td><td><pre>        MimeMessage message = mailSender.createMimeMessage();</pre></td></tr><tr><td data-num="87"></td><td><pre></pre></td></tr><tr><td data-num="88"></td><td><pre>        try {</pre></td></tr><tr><td data-num="89"></td><td><pre>            MimeMessageHelper helper = new MimeMessageHelper(message, true);</pre></td></tr><tr><td data-num="90"></td><td><pre>            helper.setFrom(from);</pre></td></tr><tr><td data-num="91"></td><td><pre>            helper.setTo(toAddr);</pre></td></tr><tr><td data-num="92"></td><td><pre>            helper.setSubject(title);</pre></td></tr><tr><td data-num="93"></td><td><pre>            helper.setText(content, true);</pre></td></tr><tr><td data-num="94"></td><td><pre></pre></td></tr><tr><td data-num="95"></td><td><pre>            FileSystemResource file = new FileSystemResource(new File(filePath));</pre></td></tr><tr><td data-num="96"></td><td><pre>            String fileName = filePath.substring(filePath.lastIndexOf(File.separator));</pre></td></tr><tr><td data-num="97"></td><td><pre>            helper.addAttachment(fileName, file);</pre></td></tr><tr><td data-num="98"></td><td><pre>            mailSender.send(message);</pre></td></tr><tr><td data-num="99"></td><td><pre>            if (logger.isInfoEnabled()) {</pre></td></tr><tr><td data-num="100"></td><td><pre>                logger.info(&quot;带附件的邮件已经发送。&quot;);</pre></td></tr><tr><td data-num="101"></td><td><pre>            }</pre></td></tr><tr><td data-num="102"></td><td><pre>        } catch (MessagingException e) {</pre></td></tr><tr><td data-num="103"></td><td><pre>            logger.error(&quot;发送带附件的邮件时发生异常！&quot;, e);</pre></td></tr><tr><td data-num="104"></td><td><pre>        }</pre></td></tr><tr><td data-num="105"></td><td><pre>    }</pre></td></tr><tr><td data-num="106"></td><td><pre></pre></td></tr><tr><td data-num="107"></td><td><pre></pre></td></tr><tr><td data-num="108"></td><td><pre>    /**</pre></td></tr><tr><td data-num="109"></td><td><pre>     * 发送文本中有静态资源（图片）的邮件</pre></td></tr><tr><td data-num="110"></td><td><pre>     *</pre></td></tr><tr><td data-num="111"></td><td><pre>     * @param toAddr  收件人</pre></td></tr><tr><td data-num="112"></td><td><pre>     * @param title   标题</pre></td></tr><tr><td data-num="113"></td><td><pre>     * @param content 内容</pre></td></tr><tr><td data-num="114"></td><td><pre>     * @param rscPath 资源路径</pre></td></tr><tr><td data-num="115"></td><td><pre>     * @param rscId   资源id (可能有多个图片)</pre></td></tr><tr><td data-num="116"></td><td><pre>     */</pre></td></tr><tr><td data-num="117"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="118"></td><td><pre>    public void sendInlineResourceMail(String toAddr, String title, String content, String rscPath, String rscId) {</pre></td></tr><tr><td data-num="119"></td><td><pre>        MimeMessage message = mailSender.createMimeMessage();</pre></td></tr><tr><td data-num="120"></td><td><pre></pre></td></tr><tr><td data-num="121"></td><td><pre>        try {</pre></td></tr><tr><td data-num="122"></td><td><pre>            MimeMessageHelper helper = new MimeMessageHelper(message, true);</pre></td></tr><tr><td data-num="123"></td><td><pre>            helper.setFrom(from);</pre></td></tr><tr><td data-num="124"></td><td><pre>            helper.setTo(toAddr);</pre></td></tr><tr><td data-num="125"></td><td><pre>            helper.setSubject(title);</pre></td></tr><tr><td data-num="126"></td><td><pre>            helper.setText(content, true);</pre></td></tr><tr><td data-num="127"></td><td><pre></pre></td></tr><tr><td data-num="128"></td><td><pre>            FileSystemResource res = new FileSystemResource(new File(rscPath));</pre></td></tr><tr><td data-num="129"></td><td><pre>            helper.addInline(rscId, res);</pre></td></tr><tr><td data-num="130"></td><td><pre></pre></td></tr><tr><td data-num="131"></td><td><pre>            mailSender.send(message);</pre></td></tr><tr><td data-num="132"></td><td><pre>            if (logger.isInfoEnabled()) {</pre></td></tr><tr><td data-num="133"></td><td><pre>                logger.info(&quot;嵌入静态资源的邮件已经发送。&quot;);</pre></td></tr><tr><td data-num="134"></td><td><pre>            }</pre></td></tr><tr><td data-num="135"></td><td><pre>        } catch (MessagingException e) {</pre></td></tr><tr><td data-num="136"></td><td><pre>            logger.error(&quot;发送嵌入静态资源的邮件时发生异常！&quot;, e);</pre></td></tr><tr><td data-num="137"></td><td><pre>        }</pre></td></tr><tr><td data-num="138"></td><td><pre>    }</pre></td></tr><tr><td data-num="139"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h5 id="测试类" tabindex="-1"><a class="header-anchor" href="#测试类" aria-hidden="true">#</a> 测试类</h5>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>@SpringBootTest</pre></td></tr><tr><td data-num="2"></td><td><pre>class ClockInApplicationTests {</pre></td></tr><tr><td data-num="3"></td><td><pre>    @Autowired</pre></td></tr><tr><td data-num="4"></td><td><pre>    MailService mailService;</pre></td></tr><tr><td data-num="5"></td><td><pre>    @Test</pre></td></tr><tr><td data-num="6"></td><td><pre>    void sendTextMail(){</pre></td></tr><tr><td data-num="7"></td><td><pre>        mailService.sendTextMail(&quot;vlnrjp92486@chacuo.net&quot;,&quot;单元测试&quot;,&quot;测试邮件发送&quot;);</pre></td></tr><tr><td data-num="8"></td><td><pre>    }</pre></td></tr><tr><td data-num="9"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h4 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h4>
<p>如标题所述，出现了异常<br />
<img src="https://img-blog.csdnimg.cn/20200729210357480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="异常图" /><br />
使用协议对应端口后发送成功，附图。<br />
<img src="https://img-blog.csdnimg.cn/20200729211122279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="单元测试通过" /></p>
<h3 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h3>
<p>  通过这个实践，我觉要写代码前还是要做很多准备，或者说我了解的东西不过全面。出错后百度异常信息怎么都找不到，想着哪里出错了，之前使用outlook连接测试通过，应该就是代码问题。后来看到很多人使用25端口发送，然后去百度端口才发现协议与端口不一致。所以我觉得写代码前的准备不充分或者知识储备不足，这个重要信息都不了解。</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://t1.hxzdhn.com/uploads/tu/201706/9999/8bc6588842.png" length="0" type="image/png"/>
        </item>
        <item>
            <title><![CDATA[Hexo主题Shoka & multi-markdown-it渲染器使用说明]]></title>
            <link>https://blog.dragondyt.top/computer-science/note/79abcd0d.html</link>
            <guid>https://blog.dragondyt.top/computer-science/note/79abcd0d.html</guid>
            <pubDate>Thu, 13 Aug 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="note info">
<p>跳票N久终于更新的简单的使用说明</p>
<ul>
<li><a href="https://github.com/amehime/hexo-theme-shoka" target="_blank" rel="noopener noreferrer">hexo-theme-shoka</a> ：本博客自用的主题</li>
<li><a href="https://github.com/amehime/hexo-renderer-multi-markdown-it" target="_blank" rel="noopener noreferrer">hexo-renderer-multi-markdown-it</a>：配套的markdown渲染器</li>
</ul>
<p>已经支持hexo 5。</p>
</div>
<div class="note info">
<p>因博主被学业和工作掏空，本项目已停滞更新大半年，问题也无法及时回复大家，这个悲惨状态可能还要持续半年的样子。</p>
<p>有很多热心小伙伴在评论区或者项目issue帮忙回答问题，非常非常感谢！</p>
<p>本项目是完全开源的，也有做一些example示例，大家可以随便拿随便改。<br />
但是很抱歉，博主我暂时不能提供更多的支持，这个写的乱七八糟的文档，暂时也没有时间把它写得更专业一些。<br />
非常对不住大家！</p>
<p>iconfont的添加申请，我看到留言后会尽快加上，希望各位小伙伴能看到。</p>
</div>
<div class="note warning">
<p>当前版本更新至 0.2.5，<a href="#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95">更新记录点此</a></p>
</div>
<div class="note primary">
<p><a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/"><strong>🚀快速开始</strong></a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/dependents/">💌依赖插件</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/config/">📌基本配置</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/display/">🌈界面显示</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/special/">🦄特殊功能</a></p>
</div>
<h1 id="设计缘由" tabindex="-1"><a class="header-anchor" href="#设计缘由" aria-hidden="true">#</a> 设计缘由</h1>
<p>前几年在Bear和Evernote上整理了大量笔记，非常喜欢Bear默认的markdown渲染样式。<br />
后来因为换了安卓手机，用不了Bear，四处搜寻替代品，没有满意的。<br />
然后阴差阳错知道了Hexo，又得知Github也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在Github Pages。</p>
<p>因为这个博客是用来记笔记的，故起名<code>书架</code>。<br />
对应的主题即<code>Theme.Shoka</code>，可以说是为了笔记阅读而生的主题。<br />
样式严重参考Bear，部分代码严重参考<a href="https://github.com/theme-next/" target="_blank" rel="noopener noreferrer">NexT</a>。</p>
<p>Hexo的默认及常用渲染器均使用<code>highlight.js</code>进行代码高亮，而我喜欢<code>Prism.js</code>，故重写了一个渲染器配合主题食用。<br />
渲染器取名<code>multi</code>，因为集成了很多很多很多<code>markdown-it</code>插件，以及压缩静态文件的功能。<br />
（最新版的默认渲染器也支持<code>Prism.js</code>了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>
<p>墙内Github Pages访问速度时而感人，所以用了<a href="http://www.jsdelivr.com/" target="_blank" rel="noopener noreferrer">jsDelivr</a>加速，主要是因为它可以按需合并依赖文件。</p>
<h1 id="快速安装" tabindex="-1"><a class="header-anchor" href="#快速安装" aria-hidden="true">#</a> 快速安装</h1>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre># cd your-blog</pre></td></tr><tr><td data-num="2"></td><td><pre>git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>打开主题目录，内有<code>example</code>文件夹，提供了配置文件的demo供参考。</p>
<h1 id="安装依赖插件" tabindex="-1"><a class="header-anchor" href="#安装依赖插件" aria-hidden="true">#</a> 安装依赖插件</h1>
<p>在应用主题之前，必须至少安装 <a href="https://github.com/amehime/hexo-renderer-multi-markdown-it" target="_blank" rel="noopener noreferrer">hexo-renderer-multi-markdown-it</a> 渲染插件 和 <a href="https://www.npmjs.com/package/hexo-autoprefixer" target="_blank" rel="noopener noreferrer">hexo-autoprefixer</a>。</p>
<p><a href="https://blog.dragondyt.top/computer-science/note/dependents/">插件安装与配置教程戳此</a></p>
<h1 id="应用主题" tabindex="-1"><a class="header-anchor" href="#应用主题" aria-hidden="true">#</a> 应用主题</h1>
<h2 id="修改站点配置" tabindex="-1"><a class="header-anchor" href="#修改站点配置" aria-hidden="true">#</a> 修改站点配置</h2>
<p>修改站点配置文件<code>&lt;root&gt;/_config.yml</code>，把主题改为 <code>shoka</code></p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>theme: shoka</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h2 id="修改主题配置" tabindex="-1"><a class="header-anchor" href="#修改主题配置" aria-hidden="true">#</a> 修改主题配置</h2>
<p>主题配置的所有参数在<code>&lt;root&gt;/themes/shoka/_config.yml</code>文件中。</p>
<p>为了方便主题升级，请在根目录新建一个yml文件，命名为<code>_config.shoka.yml</code>。<br />
也就是说，所有主题的自定义配置均保存于<code>&lt;root&gt;/_config.shoka.yml</code>文件。</p>
<p><a href="https://blog.dragondyt.top/computer-science/note/config/">主题的基础配置可以参考这里</a><br />
<a href="https://blog.dragondyt.top/computer-science/note/display/">界面显示相关的配置参考这里</a></p>
<h1 id="更新记录" tabindex="-1"><a class="header-anchor" href="#更新记录" aria-hidden="true">#</a> 更新记录</h1>
<p>标签含义：<br />
❗ 需要手动操作的更新信息<br />
⚠️ 需要注意的更新信息<br />
🔧 已修复的问题<br />
⌛ TODO</p>
<h2 id="_0-2-4-👉-0-2-5" tabindex="-1"><a class="header-anchor" href="#_0-2-4-👉-0-2-5" aria-hidden="true">#</a> 0.2.4 👉 0.2.5</h2>
<p>💡  避免直接修改主题文件，添加各种自定义：</p>
<ul>
<li><a href="https://blog.dragondyt.top/computer-science/note/display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E9%85%8D%E8%89%B2">样式</a>：包括配色、<a href="https://blog.dragondyt.top/computer-science/note/config/#iconfont%E5%9B%BE%E6%A0%87">icon</a>、其他自定义样式</li>
<li>图片：包括<a href="https://blog.dragondyt.top/computer-science/note/display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87">主题图片</a>、<a href="https://blog.dragondyt.top/computer-science/note/config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93">随机图库</a></li>
</ul>
<p>🔧 修复一些BUG</p>
<h2 id="_0-2-3-👉-0-2-4" tabindex="-1"><a class="header-anchor" href="#_0-2-3-👉-0-2-4" aria-hidden="true">#</a> 0.2.3 👉 0.2.4</h2>
<p>⚠️ <strong>评论功能更新</strong></p>
<ul>
<li>MiniValine魔改版更新至beta10，修改过主题默认<code>_config.yml</code>的同学，记得更新末尾的<code>vendors</code>到最新哦</li>
<li>❗ 评论相关的配置有更新，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA">配置戳此</a>
<ul>
<li>主要增加的Tag配置，现在可以各种自定义啦</li>
</ul>
</li>
</ul>
<p>⚠️ 配置新增</p>
<ul>
<li>夜间模式<code>darkmode</code>，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F">配置戳此</a></li>
<li>自动定位<code>auto_scroll</code>，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D">配置戳此</a></li>
<li>图床API设置<code>image_server</code>，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93">配置戳此</a></li>
</ul>
<p>⚠️ 背景音乐功能增强，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90">配置戳此</a></p>
<ul>
<li>可以添加多个播放列表</li>
<li>加了一些控制按钮</li>
</ul>
<p>⚠️ 增加<code>media</code>标签，在文章中插入音频和视频播放列表，<a href="https://blog.dragondyt.top/computer-science/note/special/#media%E5%A4%9A%E5%AA%92%E4%BD%93">方法戳此</a><br />
⌛  视频播放器有待增强（显示分段标签，字幕）</p>
<p>🔧 随机图库支持非渣浪图床的任意图片<br />
🔧 还有许多小BUG</p>
<h2 id="_0-2-2-👉-0-2-3" tabindex="-1"><a class="header-anchor" href="#_0-2-2-👉-0-2-3" aria-hidden="true">#</a> 0.2.2 👉 0.2.3</h2>
<p>❗ 增加主题文件外自定义语言包的功能，<a href="https://blog.dragondyt.top/computer-science/note/display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85">配置戳此</a><br />
🔧 提高低版本浏览器兼容性</p>
<h2 id="_0-2-1-👉-0-2-2" tabindex="-1"><a class="header-anchor" href="#_0-2-1-👉-0-2-2" aria-hidden="true">#</a> 0.2.1 👉 0.2.2</h2>
<p>⚠️ 弃用<code>mediumzoom</code>，改成<code>fancybox</code>，<a href="https://blog.dragondyt.top/computer-science/note/display/#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%9B%B8%E5%86%8C">配置戳此</a><br />
💡  增加语言包：<code>繁体中文</code>和<code>日语</code><br />
💡  quiz功能优化，根据语言显示题型标签<br />
🔧 修复评论功能中反复初始化leancloud-storage<br />
🔧 修复<code>audio: false</code>时不能隐藏播放按钮、停止播放</p>
<h2 id="_0-2-👉-0-2-1" tabindex="-1"><a class="header-anchor" href="#_0-2-👉-0-2-1" aria-hidden="true">#</a> 0.2 👉 0.2.1</h2>
<p>⚠️ 配置文件添加 <code>loader</code> 参数，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB">配置戳此</a><br />
💡  二级list区别显示<br />
🔧 修复浏览位置定位BUG<br />
🔧 修复firework动画延迟<br />
🔧 优化评论功能</p>
<h2 id="_0-1-9-👉-0-2" tabindex="-1"><a class="header-anchor" href="#_0-1-9-👉-0-2" aria-hidden="true">#</a> 0.1.9 👉 0.2</h2>
<p>⚠️  <strong>评论功能大改</strong></p>
<ul>
<li>弃用不开源的Valine，改用MiniValine，并且进行了魔改，<a href="https://github.com/amehime/MiniValine" target="_blank" rel="noopener noreferrer">项目戳此</a><br />
主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>
<li>为防止泄露用户邮箱、IP等隐私信息，弃用QQ号获取昵称及头像。<br />
❗ 同时需要手动进行一些迁移，<a href="https://github.com/imaegoo/Valine" target="_blank" rel="noopener noreferrer">具体步骤戳此</a></li>
<li>❗ 评论相关的配置亦有更新，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA">配置戳此</a></li>
</ul>
<p>⚠️ 增加单击页面烟花效果，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88">配置戳此</a><br />
💡  弃用Velocity，改用anime.js，方便未来添加更多!!花里胡哨的!!功能!!严重拖慢页面滑行速度!!<br />
🔧 新增多枚icon，包括豆瓣<code>i-douban</code>等<br />
🔧 一些显示问题</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[Step.2 基本配置]]></title>
            <link>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/85a3718.html</link>
            <guid>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/85a3718.html</guid>
            <pubDate>Thu, 13 Aug 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="note primary">
<p><a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/">🚀快速开始</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/dependents/">💌依赖插件</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/config/"><strong>📌基本配置</strong></a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/display/">🌈界面显示</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/special/">🦄特殊功能</a></p>
</div>
<h1 id="站点别称" tabindex="-1"><a class="header-anchor" href="#站点别称" aria-hidden="true">#</a> 站点别称</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>alternate: Yume Shoka</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>这里设置的名称代替Logo，显示在页面顶部，以及页尾©️处</p>
<h1 id="静态文件目录" tabindex="-1"><a class="header-anchor" href="#静态文件目录" aria-hidden="true">#</a> 静态文件目录</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>statics: / #//cdn.jsdelivr.net/gh/amehime/shoka@latest/</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>默认值是<code>/</code>，指使用本地静态文件<br />
可以修改成<code>//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/</code>这种形式，以使用jsDelivr进行加速。<br />
PS：jsDelivr并不是实时更新，重新生成文件后需要耐心等待</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>css: css</pre></td></tr><tr><td data-num="2"></td><td><pre>js: js</pre></td></tr><tr><td data-num="3"></td><td><pre>images: images</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>静态文件所处目录的实际目录名，这些一般不改。</p>
<h1 id="夜间模式" tabindex="-1"><a class="header-anchor" href="#夜间模式" aria-hidden="true">#</a> 夜间模式</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>darkmode: # true</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>默认情况下，是否开启夜间模式取决于（优先级从高到低）：</p>
<ol>
<li>访客点击页面头部切换按钮的自行选择</li>
<li>访客切换了浏览设备的主题色调</li>
<li>您的<code>darkmode</code>配置项</li>
</ol>
<h1 id="自动定位" tabindex="-1"><a class="header-anchor" href="#自动定位" aria-hidden="true">#</a> 自动定位</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>auto_scroll: # false</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。<br />
这个选项设为<code>false</code>时将停用此功能。</p>
<h1 id="加载动画" tabindex="-1"><a class="header-anchor" href="#加载动画" aria-hidden="true">#</a> 加载动画</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre># 是否显示页面加载动画loading-cat</pre></td></tr><tr><td data-num="2"></td><td><pre>loader:</pre></td></tr><tr><td data-num="3"></td><td><pre>  start: true # 当初次打开页面时，显示加载动画</pre></td></tr><tr><td data-num="4"></td><td><pre>  switch: true # tab切换到其他页面时，显示加载动画</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>tab切换后只是显示loading动画，实际并未重新加载页面</p>
<h1 id="页面特效" tabindex="-1"><a class="header-anchor" href="#页面特效" aria-hidden="true">#</a> 页面特效</h1>
<p>单击页面的烟花效果配置如下</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>fireworks:</pre></td></tr><tr><td data-num="2"></td><td><pre>  enable: true # 是否启用</pre></td></tr><tr><td data-num="3"></td><td><pre>  color: # 烟花颜色</pre></td></tr><tr><td data-num="4"></td><td><pre>    - &quot;rgba(255,182,185,.9)&quot;</pre></td></tr><tr><td data-num="5"></td><td><pre>    - &quot;rgba(250,227,217,.9)&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>    - &quot;rgba(187,222,214,.9)&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>    - &quot;rgba(138,198,209,.9)&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="加载谷歌字体" tabindex="-1"><a class="header-anchor" href="#加载谷歌字体" aria-hidden="true">#</a> 加载谷歌字体</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>font:</pre></td></tr><tr><td data-num="2"></td><td><pre>  enable: true</pre></td></tr><tr><td data-num="3"></td><td><pre>  # Font options:</pre></td></tr><tr><td data-num="4"></td><td><pre>  # `external: true` will load this font family from `host` above.</pre></td></tr><tr><td data-num="5"></td><td><pre>  # `family: Times New Roman`. Without any quotes.</pre></td></tr><tr><td data-num="6"></td><td><pre>  # `size: x.x`. Use `em` as unit. Default: 1 (16px)</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>  # Global font settings used for all elements inside &lt;body&gt;.</pre></td></tr><tr><td data-num="9"></td><td><pre>  global:</pre></td></tr><tr><td data-num="10"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="11"></td><td><pre>    family: Mulish</pre></td></tr><tr><td data-num="12"></td><td><pre>    size:</pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>  # Font settings for alternate title.</pre></td></tr><tr><td data-num="15"></td><td><pre>  logo:</pre></td></tr><tr><td data-num="16"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="17"></td><td><pre>    family: Fredericka the Great</pre></td></tr><tr><td data-num="18"></td><td><pre>    size: 3.5</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>  # Font settings for site title.</pre></td></tr><tr><td data-num="21"></td><td><pre>  title:</pre></td></tr><tr><td data-num="22"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="23"></td><td><pre>    family: Noto Serif JP</pre></td></tr><tr><td data-num="24"></td><td><pre>    size: 2.5</pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>  # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</pre></td></tr><tr><td data-num="27"></td><td><pre>  headings:</pre></td></tr><tr><td data-num="28"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="29"></td><td><pre>    family: Noto Serif SC</pre></td></tr><tr><td data-num="30"></td><td><pre>    size:</pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>  # Font settings for posts.</pre></td></tr><tr><td data-num="33"></td><td><pre>  posts:</pre></td></tr><tr><td data-num="34"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="35"></td><td><pre>    family:</pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre>  # Font settings for &lt;code&gt; and code blocks.</pre></td></tr><tr><td data-num="38"></td><td><pre>  codes:</pre></td></tr><tr><td data-num="39"></td><td><pre>    external: true</pre></td></tr><tr><td data-num="40"></td><td><pre>    family: Inconsolata</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>此功能基本参考NexT。<br />
加粗标题的字体总是使用<code>Noto Serif</code>，为了正确友好的显示日文中的汉字，会先后加载<code>headings</code>和<code>title</code>的字体设置。</p>
<h1 id="iconfont图标" tabindex="-1"><a class="header-anchor" href="#iconfont图标" aria-hidden="true">#</a> <code>iconfont</code>图标</h1>
<p>主题没有直接使用Font Awesome，是因为用不到那么多icon感觉非常浪费，因此在Iconfont上重新建立了一个项目。<br />
<code>font-family</code>设为<code>ic</code>，所有字体样式前缀为<code>i-</code>，具体参见<code>&lt;root&gt;/themes/shoka/source/css/_iconfont.styl</code>。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre># project of https://www.iconfont.cn/</pre></td></tr><tr><td data-num="2"></td><td><pre># //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css =&gt; 1832207_c8i9n1ulxlt</pre></td></tr><tr><td data-num="3"></td><td><pre>iconfont: &quot;1832207_c8i9n1ulxlt&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>如果需要添加或修改，请留言告诉我您的<a href="https://www.iconfont.cn/" target="_blank" rel="noopener noreferrer">Iconfont</a>用户名，我将把您添加到目前的<a href="https://www.iconfont.cn/manage/index?manage_type=myprojects&amp;projectId=1832207" target="_blank" rel="noopener noreferrer">项目</a>中。</p>
<p>添加权限为<code>只读</code>，此后您可以任意全选，批量保存到购物车中，添加至您自己的项目里，并将主题配置文件中的<code>iconfont</code>值改为您的项目。</p>
<p>注意，您的项目应设置<code>FontClass/Symbol 前缀</code>为<code>i-</code>。</p>
<p>在<code>&lt;root&gt;/source/_data/</code>目录新建文件<code>iconfont.styl</code>，把新增或修改的图标样式复制到这个文件中。</p>
<blockquote>
<p>自定义<code>iconfont.styl</code>文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>
</blockquote>
<h1 id="菜单与社交按钮" tabindex="-1"><a class="header-anchor" href="#菜单与社交按钮" aria-hidden="true">#</a> 菜单与社交按钮</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>menu:</pre></td></tr><tr><td data-num="2"></td><td><pre>  home: / || home</pre></td></tr><tr><td data-num="3"></td><td><pre>  about: /about/ || user</pre></td></tr><tr><td data-num="4"></td><td><pre>  posts:</pre></td></tr><tr><td data-num="5"></td><td><pre>    default: / || feather</pre></td></tr><tr><td data-num="6"></td><td><pre>    archives: /archives/ || list-alt</pre></td></tr><tr><td data-num="7"></td><td><pre>    categories: /categories/ || th</pre></td></tr><tr><td data-num="8"></td><td><pre>    tags: /tags/ || tags</pre></td></tr><tr><td data-num="9"></td><td><pre>  # friends: /friends/ || heart</pre></td></tr><tr><td data-num="10"></td><td><pre>  # links: /links/ || magic</pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>social:</pre></td></tr><tr><td data-num="13"></td><td><pre>  github: https://github.com/yourname || github || &quot;#191717&quot;</pre></td></tr><tr><td data-num="14"></td><td><pre>  #google: https://plus.google.com/yourname || google</pre></td></tr><tr><td data-num="15"></td><td><pre>  twitter: https://twitter.com/yourname || twitter || &quot;#00aff0&quot;</pre></td></tr><tr><td data-num="16"></td><td><pre>  zhihu: https://www.zhihu.com/people/yourname || zhihu || &quot;#1e88e5&quot;</pre></td></tr><tr><td data-num="17"></td><td><pre>  music: https://music.163.com/#/user/home?id=yourid || cloud-music || &quot;#e60026&quot;</pre></td></tr><tr><td data-num="18"></td><td><pre>  weibo: https://weibo.com/yourname || weibo || &quot;#ea716e&quot;</pre></td></tr><tr><td data-num="19"></td><td><pre>  about: https://about.me/yourname || address-card || &quot;#3b5998&quot;</pre></td></tr><tr><td data-num="20"></td><td><pre>  #email: mailto:yourname@mail.com || envelope || &quot;#55acd5&quot;</pre></td></tr><tr><td data-num="21"></td><td><pre>  #facebook: https://www.facebook.com/yourname || facebook</pre></td></tr><tr><td data-num="22"></td><td><pre>  #stackoverflow: https://stackoverflow.com/yourname || stack-overflow</pre></td></tr><tr><td data-num="23"></td><td><pre>  #youtube: https://youtube.com/yourname || youtube</pre></td></tr><tr><td data-num="24"></td><td><pre>  #instagram: https://instagram.com/yourname || instagram</pre></td></tr><tr><td data-num="25"></td><td><pre>  #skype: skype:yourname?call|chat || skype</pre></td></tr><tr><td data-num="26"></td><td><pre>  #douban: https://www.douban.com/people/yourname/ || douban</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>如上，使用<code>||</code>作为分隔符，依次为 <code>链接 || 图标 || 颜色</code>。<br />
注意，只需要写图标名称，如<code>github</code>，则会自动转换为<code>ic i-github</code>。<br />
十六进制颜色码需要<code>&quot;&quot;</code>包绕。</p>
<p><code>menu</code> 支持一级子目录，子目录设置中的第一项必须为<code>default</code>，用来定义父级按钮的样式。</p>
<p>菜单显示文字可以在语言包中定义，<a href="https://blog.dragondyt.top/computer-science/note/display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85">具体请戳这里</a></p>
<h1 id="边栏配置" tabindex="-1"><a class="header-anchor" href="#边栏配置" aria-hidden="true">#</a> 边栏配置</h1>
<p>边栏可以选择在左侧，或右侧<br />
修改头像文件的地址，相对于静态文件目录<code>images</code>中配置的路径。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>sidebar:</pre></td></tr><tr><td data-num="2"></td><td><pre>  # Sidebar Position.</pre></td></tr><tr><td data-num="3"></td><td><pre>  position: left</pre></td></tr><tr><td data-num="4"></td><td><pre>  #position: right</pre></td></tr><tr><td data-num="5"></td><td><pre>  # Replace the default avatar image and set the url here.</pre></td></tr><tr><td data-num="6"></td><td><pre>  avatar: avatar.jpg</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>可以将自己的图片放在<code>&lt;root&gt;/source/_data/images/</code>目录，甚至以同名覆盖主题内默认的头像图片，<a href="https://blog.dragondyt.top/computer-science/note/display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87">具体请戳这里</a></p>
<h1 id="底部widgets" tabindex="-1"><a class="header-anchor" href="#底部widgets" aria-hidden="true">#</a> 底部widgets</h1>
<p>目前页面底部可以显示两个小部件，即<code>随机文章</code>和<code>最近评论</code>。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>widgets:</pre></td></tr><tr><td data-num="2"></td><td><pre>  random_posts: true # 显示随机文章</pre></td></tr><tr><td data-num="3"></td><td><pre>  recent_comments: true # 显示最近评论</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="字数及阅读时间统计" tabindex="-1"><a class="header-anchor" href="#字数及阅读时间统计" aria-hidden="true">#</a> 字数及阅读时间统计</h1>
<p>安装好<code>hexo-symbols-count-time</code>插件后，不需要修改站点配置文件，直接使用插件默认配置就行。</p>
<p>需要修改主题配置文件，找到两处<code>cout</code>，修改为<code>true</code>：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre># 页尾全站统计</pre></td></tr><tr><td data-num="2"></td><td><pre>footer:</pre></td></tr><tr><td data-num="3"></td><td><pre>  since: 2010</pre></td></tr><tr><td data-num="4"></td><td><pre>  count: true</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre># 文章界面统计</pre></td></tr><tr><td data-num="7"></td><td><pre>post:</pre></td></tr><tr><td data-num="8"></td><td><pre>  count: true</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="文章评论" tabindex="-1"><a class="header-anchor" href="#文章评论" aria-hidden="true">#</a> 文章评论</h1>
<p><a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener noreferrer">如何获取LeanCloud的appId和appKey</a>。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>valine:</pre></td></tr><tr><td data-num="2"></td><td><pre>  appId: #Your_appId</pre></td></tr><tr><td data-num="3"></td><td><pre>  appKey: #Your_appkey</pre></td></tr><tr><td data-num="4"></td><td><pre>  placeholder: ヽ(○´∀`)ﾉ♪ # Comment box placeholder</pre></td></tr><tr><td data-num="5"></td><td><pre>  avatar: mp # Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</pre></td></tr><tr><td data-num="6"></td><td><pre>  pageSize: 10 # Pagination size</pre></td></tr><tr><td data-num="7"></td><td><pre>  lang: zh-CN.ts-CN</pre></td></tr><tr><td data-num="8"></td><td><pre>  visitor: true # 文章访问量统计</pre></td></tr><tr><td data-num="9"></td><td><pre>  NoRecordIP: false # 不记录IP</pre></td></tr><tr><td data-num="10"></td><td><pre>  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</pre></td></tr><tr><td data-num="11"></td><td><pre>  powerMode: true # 默认打开评论框输入特效</pre></td></tr><tr><td data-num="12"></td><td><pre>  tagMeta:</pre></td></tr><tr><td data-num="13"></td><td><pre>    visitor: 新朋友</pre></td></tr><tr><td data-num="14"></td><td><pre>    master: 主人</pre></td></tr><tr><td data-num="15"></td><td><pre>    friend: 小伙伴</pre></td></tr><tr><td data-num="16"></td><td><pre>    investor: 金主粑粑</pre></td></tr><tr><td data-num="17"></td><td><pre>  tagColor:</pre></td></tr><tr><td data-num="18"></td><td><pre>    master: &quot;var(--color-orange)&quot;</pre></td></tr><tr><td data-num="19"></td><td><pre>    friend: &quot;var(--color-aqua)&quot;</pre></td></tr><tr><td data-num="20"></td><td><pre>    investor: &quot;var(--color-pink)&quot;</pre></td></tr><tr><td data-num="21"></td><td><pre>  tagMember:</pre></td></tr><tr><td data-num="22"></td><td><pre>    master:</pre></td></tr><tr><td data-num="23"></td><td><pre>      # - hash of master@email.com</pre></td></tr><tr><td data-num="24"></td><td><pre>      # - hash of master2@email.com</pre></td></tr><tr><td data-num="25"></td><td><pre>    friend:</pre></td></tr><tr><td data-num="26"></td><td><pre>      # - hash of friend@email.com</pre></td></tr><tr><td data-num="27"></td><td><pre>      # - hash of friend2@email.com</pre></td></tr><tr><td data-num="28"></td><td><pre>    investor:</pre></td></tr><tr><td data-num="29"></td><td><pre>      # - hash of investor1@email.com</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>tag标签显示在评论者名字的后面，默认是<code>tagMeta.visitor</code>对应的值。<br />
在<code>tagMeta</code>和<code>tagColor</code>中，除了<code>visitor</code>这个key不能修改外，其他key都可以换一换，但需要保证一致性。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>  tagMeta:</pre></td></tr><tr><td data-num="2"></td><td><pre>    visitor: 游客</pre></td></tr><tr><td data-num="3"></td><td><pre>    admin: 管理员</pre></td></tr><tr><td data-num="4"></td><td><pre>    waifu: 我老婆</pre></td></tr><tr><td data-num="5"></td><td><pre>  tagColor:</pre></td></tr><tr><td data-num="6"></td><td><pre>    visitor: &quot;#855194&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>    admin: &quot;#a77c59&quot;</pre></td></tr><tr><td data-num="8"></td><td><pre>    waifu: &quot;#ed6ea0&quot;</pre></td></tr><tr><td data-num="9"></td><td><pre>  tagMember:</pre></td></tr><tr><td data-num="10"></td><td><pre>    admin:</pre></td></tr><tr><td data-num="11"></td><td><pre>      # - hash of admin@email.com</pre></td></tr><tr><td data-num="12"></td><td><pre>    waifu:</pre></td></tr><tr><td data-num="13"></td><td><pre>      # - hash of waifu@email.com</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>在文章Front Matter中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。<br />
尤其可以用来配置一个特殊的placeholder。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>valine:</pre></td></tr><tr><td data-num="2"></td><td><pre>  placeholder: &quot;1. 提问前请先仔细阅读本文档⚡\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪&quot;</pre></td></tr><tr><td data-num="3"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>评论通知与管理工具建议使用这个<a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener noreferrer">Valine-Admin</a>。<br />
注意<code>SITE_URL</code>需要以<code>/</code>结尾。</p>
<p>如果某一篇文章需要关闭评论功能，则在文章Front Matter中配置：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>---</pre></td></tr><tr><td data-num="2"></td><td><pre>title: 关闭评论</pre></td></tr><tr><td data-num="3"></td><td><pre>comment: false</pre></td></tr><tr><td data-num="4"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="背景音乐" tabindex="-1"><a class="header-anchor" href="#背景音乐" aria-hidden="true">#</a> 背景音乐</h1>
<p>在主题配置文件中，设置全局播放列表。<br />
在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>audio:</pre></td></tr><tr><td data-num="2"></td><td><pre>  - https://music.163.com/song?id=1387098940</pre></td></tr><tr><td data-num="3"></td><td><pre>  - https://music.163.com/#/playlist?id=2088001742</pre></td></tr><tr><td data-num="4"></td><td><pre>  - https://www.xiami.com/collect/250830668</pre></td></tr><tr><td data-num="5"></td><td><pre>  - https://y.qq.com/n/yqq/playsquare/3535982902.html</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>如上，可以直接使用网易云、虾米、QQ音乐的播放列表、单曲，可以同时填写多个。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>audio:</pre></td></tr><tr><td data-num="2"></td><td><pre>  - title: 列表1</pre></td></tr><tr><td data-num="3"></td><td><pre>    list:</pre></td></tr><tr><td data-num="4"></td><td><pre>      - https://music.163.com/#/playlist?id=2943811283</pre></td></tr><tr><td data-num="5"></td><td><pre>      - https://music.163.com/#/playlist?id=2297706586</pre></td></tr><tr><td data-num="6"></td><td><pre>  - title: 列表2</pre></td></tr><tr><td data-num="7"></td><td><pre>    list:</pre></td></tr><tr><td data-num="8"></td><td><pre>      - https://music.163.com/#/playlist?id=2031842656</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>如果需要自定义媒体文件，可以按照以下格式填写：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>audio:</pre></td></tr><tr><td data-num="2"></td><td><pre>  - name: &quot;曲目1&quot;</pre></td></tr><tr><td data-num="3"></td><td><pre>    url: &quot;播放地址&quot;</pre></td></tr><tr><td data-num="4"></td><td><pre>    artist: &quot;艺术家&quot;</pre></td></tr><tr><td data-num="5"></td><td><pre>    cover: &quot;封面&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>    lrc: &quot;歌词&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>  - name: &quot;曲目2&quot;</pre></td></tr><tr><td data-num="8"></td><td><pre>    url: &quot;播放地址&quot;</pre></td></tr><tr><td data-num="9"></td><td><pre>    artist: &quot;艺术家&quot;</pre></td></tr><tr><td data-num="10"></td><td><pre>    cover: &quot;封面&quot;</pre></td></tr><tr><td data-num="11"></td><td><pre>    lrc: &quot;歌词&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>audio:</pre></td></tr><tr><td data-num="2"></td><td><pre>    - title: 列表1</pre></td></tr><tr><td data-num="3"></td><td><pre>      list:</pre></td></tr><tr><td data-num="4"></td><td><pre>        - name: &quot;曲目1&quot;</pre></td></tr><tr><td data-num="5"></td><td><pre>          url: &quot;播放地址&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>          artist: &quot;艺术家&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>          cover: &quot;封面&quot;</pre></td></tr><tr><td data-num="8"></td><td><pre>          lrc: &quot;歌词&quot;</pre></td></tr><tr><td data-num="9"></td><td><pre>        - name: &quot;曲目2&quot;</pre></td></tr><tr><td data-num="10"></td><td><pre>          url: &quot;播放地址&quot;</pre></td></tr><tr><td data-num="11"></td><td><pre>          artist: &quot;艺术家&quot;</pre></td></tr><tr><td data-num="12"></td><td><pre>          cover: &quot;封面&quot;</pre></td></tr><tr><td data-num="13"></td><td><pre>          lrc: &quot;歌词&quot;</pre></td></tr><tr><td data-num="14"></td><td><pre>    - title: 列表2</pre></td></tr><tr><td data-num="15"></td><td><pre>      list:</pre></td></tr><tr><td data-num="16"></td><td><pre>        - https://music.163.com/#/playlist?id=2031842656</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>如果要关闭当前页面的背景音乐播放器，则在文章Front Matter中配置：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>---</pre></td></tr><tr><td data-num="2"></td><td><pre>title: 关闭背景音乐</pre></td></tr><tr><td data-num="3"></td><td><pre>audio: false</pre></td></tr><tr><td data-num="4"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="随机图库" tabindex="-1"><a class="header-anchor" href="#随机图库" aria-hidden="true">#</a> 随机图库</h1>
<ul>
<li>
<p>默认的图片列表位于<code>&lt;root&gt;/themes/shoka/_images.yml</code>中。<br />
使用了渣浪图库，使用一些上传工具，比如<a href="https://pic.gimhoy.com/" target="_blank" rel="noopener noreferrer">这里</a><br />
上传后图片的链接是<code>http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code>。<br />
只需要新一行写上<code>- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code>。</p>
<p>如果想要自定义，则在<code>&lt;root&gt;/source/_data/</code>目录新建一个<code>images.yml</code>文件，这个文件中的图片至少6枚，将完全覆盖默认的图片列表。</p>
</li>
<li>
<p>也可以直接在图片列表yml文件中，写上任意外链图片地址</p>
</li>
</ul>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>- https://i.loli.net/2020/10/30/qAMYEFXxJcKRsiG.gif</pre></td></tr><tr><td data-num="2"></td><td><pre>- https://i.loli.net/2020/10/30/rjdhcSgEN8COBPA.jpg</pre></td></tr><tr><td data-num="3"></td><td><pre>- https://i.loli.net/2020/10/30/HKyzSd7NI3mlBpt.jpg</pre></td></tr><tr><td data-num="4"></td><td><pre>- https://i.loli.net/2020/10/30/Y1CBXqgeokEs457.jpg</pre></td></tr><tr><td data-num="5"></td><td><pre>- https://i.loli.net/2020/10/30/Z5W6r2BSoiThHG1.jpg</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ul>
<li>也可以在主题配置文件中，设置图床API：</li>
</ul>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>image_server: &quot;https://acg.xydwz.cn/api/api.php&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="加载第三方组件" tabindex="-1"><a class="header-anchor" href="#加载第三方组件" aria-hidden="true">#</a> 加载第三方组件</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>vendors:</pre></td></tr><tr><td data-num="2"></td><td><pre>  css:</pre></td></tr><tr><td data-num="3"></td><td><pre>    # 略略略</pre></td></tr><tr><td data-num="4"></td><td><pre>  js:</pre></td></tr><tr><td data-num="5"></td><td><pre>    # 略略略</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>包括</p>
<p>–|–|–<br />
<code>pace</code> | 加载进度条|全局<br />
<code>pjax</code> | 页面无刷新加载|全局<br />
<code>anime</code> | js动画效果|全局<br />
<code>algolia</code> <code>instantsearch</code>| 基于algolia的站内搜索|全局<br />
<code>lazyload</code> | 图片懒加载|全局<br />
<code>quicklink</code> | 链接资源预加载|全局<br />
<code>fetch</code> | 获取播放列表|全局<br />
<code>katex</code> <code>copy_tex</code>|数学公式显示及复制|按需<br />
<code>fancybox</code> | 图片放大显示及排列|按需<br />
<code>valine</code> | 基于LeanCloud的评论系统及文章阅读次数统计|按需<br />
<code>chart</code> | 图表显示|按需</p>
<p>以上文件加载全部基于jsDelivr，并对全局加载的组件进行了文件合并。<br />
如果不明白啥意思，则不要轻易修改。</p>
<div class="note danger">
<p>主题版本升级的时候，可能会修改这里。<br />
如果修改过主题默认<code>_config.yml</code>，记得更新主题时，末尾的<code>vendors</code>也要及时修改。</p>
</div>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
            <enclosure url="https://music.163.com/song?id=1387098940" length="0" type="audio//song"/>
        </item>
        <item>
            <title><![CDATA[Step.1 依赖插件]]></title>
            <link>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/d30922d5.html</link>
            <guid>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/d30922d5.html</guid>
            <pubDate>Thu, 13 Aug 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="note primary">
<p><a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/">🚀快速开始</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/dependents/"><strong>💌依赖插件</strong></a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/config/">📌基本配置</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/display/">🌈界面显示</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/special/">🦄特殊功能</a></p>
</div>
<div class="note warning">
<p>请务必将hexo-renderer-multi-markdown-it升级到最新版，目前为 0.1.5</p>
</div>
<p>Theme Shoka依赖以下Hexo插件</p>
<table>
<thead>
<tr>
<th>插件名称</th>
<th>npm地址</th>
<th>功能</th>
<th>依赖程度</th>
</tr>
</thead>
<tbody>
<tr>
<td>hexo-renderer-multi-markdown-it</td>
<td><a href="https://www.npmjs.com/package/hexo-renderer-multi-markdown-it" target="_blank" rel="noopener noreferrer">链接</a></td>
<td>md文件渲染器，压缩css/js/html</td>
<td>必需</td>
</tr>
<tr>
<td>hexo-autoprefixer</td>
<td><a href="https://www.npmjs.com/package/hexo-autoprefixer" target="_blank" rel="noopener noreferrer">链接</a></td>
<td>给生成的css文件们添加浏览器前缀</td>
<td>必需</td>
</tr>
<tr>
<td>hexo-algoliasearch</td>
<td><a href="https://www.npmjs.com/package/hexo-algoliasearch" target="_blank" rel="noopener noreferrer">链接</a></td>
<td>站内搜索功能</td>
<td>搜索按钮失灵</td>
</tr>
<tr>
<td>hexo-symbols-count-time</td>
<td><a href="https://www.npmjs.com/package/hexo-symbols-count-time" target="_blank" rel="noopener noreferrer">链接</a></td>
<td>文章或站点字数及阅读时间统计</td>
<td>统计没有</td>
</tr>
<tr>
<td>hexo-feed</td>
<td><a href="https://www.npmjs.com/package/hexo-feed" target="_blank" rel="noopener noreferrer">链接</a></td>
<td>生成Feed文件</td>
<td>Feed文件没有</td>
</tr>
</tbody>
</table>
<blockquote>
<p>没有正确安装以上插件的话，本主题会报错or无法正确显示or部分功能失效。<br />
<code>hexo-renderer-multi-markdown-it</code>请注意升级到最新版</p>
</blockquote>
<p>安装完以上插件后，修改站点配置文件，加入相关配置。</p>
<h1 id="multi-markdown-it安装与配置" tabindex="-1"><a class="header-anchor" href="#multi-markdown-it安装与配置" aria-hidden="true">#</a> multi-markdown-it安装与配置</h1>
<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>
<ol>
<li>
<p>安装前，记得务必卸载掉默认的<code>hexo-renderer-marked</code>，以及别的markdown文件渲染器。</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>npm un hexo-renderer-marked --save</pre></td></tr><tr><td data-num="2"></td><td><pre># 或者</pre></td></tr><tr><td data-num="3"></td><td><pre>yarn remove hexo-renderer-marked</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure></li>
<li>
<p>安装</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>npm i hexo-renderer-multi-markdown-it --save</pre></td></tr><tr><td data-num="2"></td><td><pre># 或者</pre></td></tr><tr><td data-num="3"></td><td><pre>yarn add hexo-renderer-multi-markdown-it</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure></li>
<li>
<p>如果安装缓慢，或者失败<br />
如报错</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>ERROR: Failed to download Chromium r515411! Set &quot;PUPPETEER_SKIP_CHROMIUM_DOWNLOAD&quot; env variable to skip download.</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>因为有一步需要下载puppeteer里的Chromium内核，基于天朝内部网络现状，这一步能不能成功要靠科学和运气，所以为了避免安装失败，需要加上<code>--ignore-scripts</code>跳过Chromium内核的下载。</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>npm i hexo-renderer-multi-markdown-it --save --ignore-scripts</pre></td></tr><tr><td data-num="2"></td><td><pre># 或者</pre></td></tr><tr><td data-num="3"></td><td><pre>yarn add hexo-renderer-multi-markdown-it --ignore-scripts</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>puppeteer主要是用来渲染mermaid流程图，只要文章中不使用mermaid就没有任何问题，如果要使用mermaid建议还是想办法完全安装。</p>
</li>
</ol>
<h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2>
<ol>
<li>加入<code>markdown</code>配置，用来渲染md文件</li>
</ol>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>markdown:</pre></td></tr><tr><td data-num="2"></td><td><pre>  render: # 渲染器设置</pre></td></tr><tr><td data-num="3"></td><td><pre>    html: false # 过滤 HTML 标签</pre></td></tr><tr><td data-num="4"></td><td><pre>    xhtmlOut: true # 使用 '/' 来闭合单标签 （比如 &lt;br /&gt;）。</pre></td></tr><tr><td data-num="5"></td><td><pre>    breaks: true # 转换段落里的 '\n' 到 &lt;br&gt;。</pre></td></tr><tr><td data-num="6"></td><td><pre>    linkify: true # 将类似 URL 的文本自动转换为链接。</pre></td></tr><tr><td data-num="7"></td><td><pre>    typographer: </pre></td></tr><tr><td data-num="8"></td><td><pre>    quotes: '“”‘’'</pre></td></tr><tr><td data-num="9"></td><td><pre>  plugins: # markdown-it插件设置</pre></td></tr><tr><td data-num="10"></td><td><pre>    - plugin:</pre></td></tr><tr><td data-num="11"></td><td><pre>        name: markdown-it-toc-and-anchor</pre></td></tr><tr><td data-num="12"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="13"></td><td><pre>        options: # 文章目录以及锚点应用的class名称，shoka主题必须设置成这样</pre></td></tr><tr><td data-num="14"></td><td><pre>          tocClassName: 'toc'</pre></td></tr><tr><td data-num="15"></td><td><pre>          anchorClassName: 'anchor'</pre></td></tr><tr><td data-num="16"></td><td><pre>    - plugin:</pre></td></tr><tr><td data-num="17"></td><td><pre>        name: markdown-it-multimd-table</pre></td></tr><tr><td data-num="18"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="19"></td><td><pre>        options:</pre></td></tr><tr><td data-num="20"></td><td><pre>          multiline: true</pre></td></tr><tr><td data-num="21"></td><td><pre>          rowspan: true</pre></td></tr><tr><td data-num="22"></td><td><pre>          headerless: true</pre></td></tr><tr><td data-num="23"></td><td><pre>    - plugin:</pre></td></tr><tr><td data-num="24"></td><td><pre>        name: ./markdown-it-furigana</pre></td></tr><tr><td data-num="25"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="26"></td><td><pre>        options:</pre></td></tr><tr><td data-num="27"></td><td><pre>          fallbackParens: &quot;()&quot;</pre></td></tr><tr><td data-num="28"></td><td><pre>    - plugin:</pre></td></tr><tr><td data-num="29"></td><td><pre>        name: ./markdown-it-spoiler</pre></td></tr><tr><td data-num="30"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="31"></td><td><pre>        options:</pre></td></tr><tr><td data-num="32"></td><td><pre>          title: &quot;你知道得太多了&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ol start="2">
<li>加入<code>minify</code>配置，压缩css/js/html</li>
</ol>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>minify:</pre></td></tr><tr><td data-num="2"></td><td><pre>  html:</pre></td></tr><tr><td data-num="3"></td><td><pre>    enable: true</pre></td></tr><tr><td data-num="4"></td><td><pre>    exclude: # 排除hexo-feed用到的模板文件</pre></td></tr><tr><td data-num="5"></td><td><pre>      - '**/json.ejs'</pre></td></tr><tr><td data-num="6"></td><td><pre>      - '**/atom.ejs'</pre></td></tr><tr><td data-num="7"></td><td><pre>      - '**/rss.ejs'</pre></td></tr><tr><td data-num="8"></td><td><pre>  css:</pre></td></tr><tr><td data-num="9"></td><td><pre>    enable: true</pre></td></tr><tr><td data-num="10"></td><td><pre>    exclude:</pre></td></tr><tr><td data-num="11"></td><td><pre>      - '**/*.min.css'</pre></td></tr><tr><td data-num="12"></td><td><pre>  js:</pre></td></tr><tr><td data-num="13"></td><td><pre>    enable: true</pre></td></tr><tr><td data-num="14"></td><td><pre>    mangle:</pre></td></tr><tr><td data-num="15"></td><td><pre>      toplevel: true</pre></td></tr><tr><td data-num="16"></td><td><pre>    output:</pre></td></tr><tr><td data-num="17"></td><td><pre>    compress:</pre></td></tr><tr><td data-num="18"></td><td><pre>    exclude:</pre></td></tr><tr><td data-num="19"></td><td><pre>      - '**/*.min.js'</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ol start="3">
<li>停用默认代码高亮功能，否则代码块的mac样式不能正常显示。<br />
找到<code>highlight</code>和<code>prismjs</code>，把<code>enable</code>改成<code>false</code>。</li>
</ol>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>highlight:</pre></td></tr><tr><td data-num="2"></td><td><pre>  enable: false</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>prismjs:</pre></td></tr><tr><td data-num="5"></td><td><pre>  enable: false</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="autoprefixer配置建议" tabindex="-1"><a class="header-anchor" href="#autoprefixer配置建议" aria-hidden="true">#</a> autoprefixer配置建议</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>autoprefixer:</pre></td></tr><tr><td data-num="2"></td><td><pre>  exclude:</pre></td></tr><tr><td data-num="3"></td><td><pre>    - '*.min.css'</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>缺少这个插件，首页卡片翻转效果在部分浏览器中无法正确显示。</p>
<h1 id="algolia配置建议" tabindex="-1"><a class="header-anchor" href="#algolia配置建议" aria-hidden="true">#</a> algolia配置建议</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>algolia:</pre></td></tr><tr><td data-num="2"></td><td><pre>  appId: #Your appId</pre></td></tr><tr><td data-num="3"></td><td><pre>  apiKey: #Your apiKey</pre></td></tr><tr><td data-num="4"></td><td><pre>  adminApiKey: #Your adminApiKey</pre></td></tr><tr><td data-num="5"></td><td><pre>  chunkSize: 5000</pre></td></tr><tr><td data-num="6"></td><td><pre>  indexName: #&quot;shoka&quot;</pre></td></tr><tr><td data-num="7"></td><td><pre>  fields:</pre></td></tr><tr><td data-num="8"></td><td><pre>    - title #必须配置</pre></td></tr><tr><td data-num="9"></td><td><pre>    - path #必须配置</pre></td></tr><tr><td data-num="10"></td><td><pre>    - categories #推荐配置</pre></td></tr><tr><td data-num="11"></td><td><pre>    - content:strip:truncate,0,2000</pre></td></tr><tr><td data-num="12"></td><td><pre>    - gallery</pre></td></tr><tr><td data-num="13"></td><td><pre>    - photos</pre></td></tr><tr><td data-num="14"></td><td><pre>    - tags</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="feed配置建议" tabindex="-1"><a class="header-anchor" href="#feed配置建议" aria-hidden="true">#</a> feed配置建议</h1>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>keywords: #站点关键词，用“,”分隔</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>feed:</pre></td></tr><tr><td data-num="4"></td><td><pre>    limit: 20</pre></td></tr><tr><td data-num="5"></td><td><pre>    order_by: &quot;-date&quot;</pre></td></tr><tr><td data-num="6"></td><td><pre>    tag_dir: false</pre></td></tr><tr><td data-num="7"></td><td><pre>    category_dir: false</pre></td></tr><tr><td data-num="8"></td><td><pre>    rss:</pre></td></tr><tr><td data-num="9"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="10"></td><td><pre>        template: &quot;themes/shoka/layout/_alternate/rss.ejs&quot;</pre></td></tr><tr><td data-num="11"></td><td><pre>        output: &quot;rss.xml&quot;</pre></td></tr><tr><td data-num="12"></td><td><pre>    atom:</pre></td></tr><tr><td data-num="13"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="14"></td><td><pre>        template: &quot;themes/shoka/layout/_alternate/atom.ejs&quot;</pre></td></tr><tr><td data-num="15"></td><td><pre>        output: &quot;atom.xml&quot;</pre></td></tr><tr><td data-num="16"></td><td><pre>    jsonFeed:</pre></td></tr><tr><td data-num="17"></td><td><pre>        enable: true</pre></td></tr><tr><td data-num="18"></td><td><pre>        template: &quot;themes/shoka/layout/_alternate/json.ejs&quot;</pre></td></tr><tr><td data-num="19"></td><td><pre>        output: &quot;feed.json&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[Step.3 界面显示]]></title>
            <link>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/b7629dd4.html</link>
            <guid>https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/b7629dd4.html</guid>
            <pubDate>Thu, 13 Aug 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="note primary">
<p><a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/">🚀快速开始</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/dependents/">💌依赖插件</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/config/">📌基本配置</a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/display/"><strong>🌈界面显示</strong></a> - <a href="https://blog.dragondyt.top/computer-science/note/theme-shoka-doc/special/">🦄特殊功能</a></p>
</div>
<h1 id="首页置顶文章" tabindex="-1"><a class="header-anchor" href="#首页置顶文章" aria-hidden="true">#</a> 首页置顶文章</h1>
<p>在文章的Front Matter设置<code>sticky: true</code>，则该文章将显示在首页最上方的<code>置顶文章</code>列。<br />
多篇文章按照发布时间倒序排列，不分页。</p>
<figure class="highlight raw">
<figcaption data-lang="raw"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>---</pre></td></tr><tr><td data-num="2"></td><td><pre>title: 置顶文章</pre></td></tr><tr><td data-num="3"></td><td><pre>sticky: true</pre></td></tr><tr><td data-num="4"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="首页精选分类" tabindex="-1"><a class="header-anchor" href="#首页精选分类" aria-hidden="true">#</a> 首页精选分类</h1>
<p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>
<ol>
<li>
<p>首先，修改站点配置：<br />
找到<code>category_map:</code>，配置每个分类对应的英文映射，比如：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>category_map:</pre></td></tr><tr><td data-num="2"></td><td><pre>  计算机科学: computer-science</pre></td></tr><tr><td data-num="3"></td><td><pre>  Java: java</pre></td></tr><tr><td data-num="4"></td><td><pre>  C++: cpp</pre></td></tr><tr><td data-num="5"></td><td><pre>  二进制杂谈: note</pre></td></tr><tr><td data-num="6"></td><td><pre>  计算机程序设计（C++）-西安交通大学: course-1</pre></td></tr><tr><td data-num="7"></td><td><pre>  零基础学Java语言-浙江大学-翁恺: course-1</pre></td></tr><tr><td data-num="8"></td><td><pre>  面向对象程序设计-Java语言-浙江大学-翁恺: course-2</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><blockquote>
<p>注意：hexo会自动处理路径中的特殊字符，~`!@#$%^&amp;*()-_+=[]{}|\;:&quot;'&lt;&gt;,.?以及空格，这些全部会被替换成<code>-</code><br />
所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的<code>cover.jpg</code></p>
</blockquote>
</li>
<li>
<p>在<code>&lt;root&gt;/source/_posts</code>文件夹相应的目录里，存放封面图<br />
例子：如 <a href="https://shoka.lostyu.me/computer-science/java/course-1/week-1/" target="_blank" rel="noopener noreferrer">第1周 计算</a> 这篇文章。<br />
所处的分类是</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>categories:</pre></td></tr><tr><td data-num="2"></td><td><pre>- [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺]</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>现在需要在首页显示<code>零基础学Java语言-浙江大学-翁恺</code>这个分类，翻转卡片后，显示这个分类下的文章们。<br />
而该分类经过英文映射，它的路径将是<code>/computer-science/java/course-1/</code>。</p>
<p>那么，请在<code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>的目录下放置<code>cover.jpg</code>文件。<br />
只要<code>分类路径</code>对应的目录下<strong>存在</strong><code>cover.jpg</code>文件，这个分类就会在首页显示。<br />
在进行<code>hexo g</code>时，本分类的封面图会自动被复制到public目录里相应的位置。</p>
</li>
<li>
<p>事实上，为了方便文章管理，这个分类下所有文章的md文件，我都会放在<code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>这个目录下。</p>
<p>且站点配置文件里，永久链接设置如下</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>permalink: :title/</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><code>hexo g</code>后，文章的html文件们将全部生成到<code>&lt;root&gt;/public/computer-science/java/course-1/</code>目录。<br />
具体可以查看<a href="https://github.com/amehime/shoka" target="_blank" rel="noopener noreferrer">本博客的github仓库</a>。</p>
</li>
<li>
<p>文章详情界面中的<code>系列文章</code>，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>
</li>
</ol>
<blockquote>
<p>o(*￣▽￣*)ゞ<br />
其实，不设置<code>category_map</code>也可以，只要在分类路径对应的文件夹下存在<code>cover.jpg</code>文件就行。<br />
现在，这项功能与<code>category_dir</code>的配置也无关，<code>hexo g</code>生成后，图片会自动被转移到<code>category_dir</code>的相关子目录下。</p>
</blockquote>
<h1 id="文章封面图" tabindex="-1"><a class="header-anchor" href="#文章封面图" aria-hidden="true">#</a> 文章封面图</h1>
<ul>
<li>
<p>如果文章的Front Matter设置了<code>cover: image path</code>，则封面会显示这张图片。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>title: Images</pre></td></tr><tr><td data-num="2"></td><td><pre>cover: assets/wallpaper-2572384.jpg</pre></td></tr><tr><td data-num="3"></td><td><pre># 或者写成</pre></td></tr><tr><td data-num="4"></td><td><pre>cover: http://placehold.it/350x150.jpg</pre></td></tr><tr><td data-num="5"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>这里<code>cover</code>的值可以是位于<code>source</code>目录里的图片文件，此处是<code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>文件，也可以是一个某网址。</p>
</li>
<li>
<p>如果文章是一个<code>gallery post</code>，即Front Matter设置了<code>photos</code>，则会封面会显示设置的第一张图片。</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>title: Gallery Post</pre></td></tr><tr><td data-num="2"></td><td><pre>photos:</pre></td></tr><tr><td data-num="3"></td><td><pre>- assets/wallpaper-2572384.jpg</pre></td></tr><tr><td data-num="4"></td><td><pre>- assets/wallpaper-2311325.jpg</pre></td></tr><tr><td data-num="5"></td><td><pre>- assets/wallpaper-878514.jpg</pre></td></tr><tr><td data-num="6"></td><td><pre>- http://placehold.it/350x150.jpg</pre></td></tr><tr><td data-num="7"></td><td><pre>---</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>此时默认会显示第一个图片，即位于<code>&lt;root&gt;/source/assets/</code>目录里的<code>wallpaper-2572384.jpg</code>。</p>
</li>
<li>
<p>如果站点配置中设置了<code>post_asset_folder: true</code>，那么上述本地图片路径应为<code>&lt;root&gt;/source/_posts/文章同名的文件夹/assets/wallpaper-2572384.jpg</code>，当然此时<code>assets</code>目录可以省掉。</p>
</li>
<li>
<p>如果以上设置均不存在，将显示一张随机图片，<a href="https://blog.dragondyt.top/computer-science/note/config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93">随机图库配置戳此</a>。</p>
</li>
</ul>
<h1 id="图片展示与相册" tabindex="-1"><a class="header-anchor" href="#图片展示与相册" aria-hidden="true">#</a> 图片展示与相册</h1>
<p>在文章的Front Matter设置<code>fancybox: false</code>，可以关闭文章页的图片展示功能。<br />
使用<a href="http://miromannino.github.io/Justified-Gallery/" target="_blank" rel="noopener noreferrer">Justified-Gallery</a>对Gallery Post内图案进行排列。</p>
<p>下面介绍一些小技巧：</p>
<ol>
<li>让图案下方显示<code>title</code>的markdown代码</li>
</ol>
<figure class="highlight raw">
<figcaption data-lang="raw"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>![这里是alt](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;这里是title&quot;)</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg" alt="这里是alt" title="这里是title" /></p>
<ol start="2">
<li>设置图片的大小</li>
</ol>
<figure class="highlight raw">
<figcaption data-lang="raw"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小-固定宽度和高度&quot;){height=&quot;100px&quot; width=&quot;400px&quot;}</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小-固定宽度&quot;){width=&quot;400px&quot;}</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小-固定高度&quot;){height=&quot;100px&quot;}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg" alt="" title="定义图片大小-固定宽度和高度" />{height=“100px” width=“400px”}</p>
<p><img src="https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg" alt="" title="定义图片大小-固定宽度" />{width=“400px”}</p>
<p><img src="https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg" alt="" title="定义图片大小-固定高度" />{height=“100px”}</p>
<ol start="3">
<li>除了在Front Matter里配置<code>photos</code>可以显示相册图案列表外，还可以这样写</li>
</ol>
<figure class="highlight raw">
<figcaption data-lang="raw"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>## 图案列表No.1</pre></td></tr><tr><td data-num="2"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg &quot;这里是title&quot;)</pre></td></tr><tr><td data-num="3"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg)</pre></td></tr><tr><td data-num="4"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg)</pre></td></tr><tr><td data-num="5"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg)</pre></td></tr><tr><td data-num="6"></td><td><pre>{.gallery}</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>## 图案列表No.2</pre></td></tr><tr><td data-num="9"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg)</pre></td></tr><tr><td data-num="10"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg)</pre></td></tr><tr><td data-num="11"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num="12"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num="13"></td><td><pre>{.gallery data-height=&quot;120&quot;}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><code>data-height</code>用来设置每行的高度，默认为<code>220</code></p>
<h2 id="图案列表no-1" tabindex="-1"><a class="header-anchor" href="#图案列表no-1" aria-hidden="true">#</a> 图案列表No.1</h2>
<p><img src="https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg" alt="" title="这里是title" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg" alt="" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg" alt="" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg" alt="" /><br />
{.gallery}</p>
<h2 id="图案列表no-2" tabindex="-1"><a class="header-anchor" href="#图案列表no-2" aria-hidden="true">#</a> 图案列表No.2</h2>
<p><img src="https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg" alt="" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg" alt="" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg" alt="" /><br />
<img src="https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg" alt="" /><br />
{.gallery data-height=“120”}</p>
<h1 id="自定义页面配色" tabindex="-1"><a class="header-anchor" href="#自定义页面配色" aria-hidden="true">#</a> 自定义页面配色</h1>
<p>主题配色全部在<code>&lt;root&gt;/themes/shoka/source/css/_colors.styl</code>文件中，可以自行查看。</p>
<p>在<code>&lt;root&gt;/source/_data/</code>目录新建文件<code>colors.styl</code>，在此文件中添改样式。</p>
<blockquote>
<p>自定义<code>colors.styl</code>文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>
</blockquote>
<p>主题支持在<code>&lt;root&gt;/source/_data/</code>目录建立三个自定义<code>styl</code>文件：</p>
<table>
<thead>
<tr>
<th>自定义文件名</th>
<th>对应默认样式文件</th>
<th>样式功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>colors.styl</code></td>
<td><code>_colors.styl</code></td>
<td>页面配色</td>
</tr>
<tr>
<td><code>iconfont.styl</code></td>
<td><code>_iconfont.styl</code></td>
<td><a href="https://blog.dragondyt.top/computer-science/note/config/#iconfont%E5%9B%BE%E6%A0%87">图标样式</a></td>
</tr>
<tr>
<td><code>custom.styl</code></td>
<td>-</td>
<td>任意自定义样式</td>
</tr>
</tbody>
</table>
<h1 id="自定义主题图片" tabindex="-1"><a class="header-anchor" href="#自定义主题图片" aria-hidden="true">#</a> 自定义主题图片</h1>
<p>如果想要修改主题的<code>&lt;root&gt;/themes/shoka/source/images/</code>目录内的某张图片，请在<code>&lt;root&gt;/source/_data/</code>目录新建目录<code>images</code>，并在这个文件夹中添加++同名++文件，部署时将自动覆盖主题内的默认图片。</p>
<p>可以用此方法自定义头像、打赏二维码等图片，并且避免覆盖更新主题时遗失自定义文件。</p>
<h1 id="自定义语言包" tabindex="-1"><a class="header-anchor" href="#自定义语言包" aria-hidden="true">#</a> 自定义语言包</h1>
<p>本功能参考NexT，主要可以用来定义菜单等处显示的文字，且可以方便主题无脑覆盖升级。</p>
<p>在<code>&lt;root&gt;/source/_data/</code>目录新建文件<code>languages.yml</code>。</p>
<p>按照以下格式添加配置项：</p>
<figure class="highlight yaml">
<figcaption data-lang="yaml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre># language</pre></td></tr><tr><td data-num="2"></td><td><pre>zh-CN:</pre></td></tr><tr><td data-num="3"></td><td><pre>  # items</pre></td></tr><tr><td data-num="4"></td><td><pre>  post:</pre></td></tr><tr><td data-num="5"></td><td><pre>    copyright:</pre></td></tr><tr><td data-num="6"></td><td><pre>      # the translation you perfer</pre></td></tr><tr><td data-num="7"></td><td><pre>      author: 本文博主</pre></td></tr><tr><td data-num="8"></td><td><pre>en:</pre></td></tr><tr><td data-num="9"></td><td><pre>  menu:</pre></td></tr><tr><td data-num="10"></td><td><pre>    travellings: Travellings</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>可以参考主题目录下的<code>example/source/_data</code>文件夹。</p>
<blockquote>
<p>站点配置及文件的Front Matter中，<code>language</code>项只支持<code>zh-CN</code>、<code>zh-HK</code>、<code>zh-TW</code>、<code>ja</code>、<code>en</code>。<br />
类似写成<code>zh_CN</code>这样是不可以的。</p>
</blockquote>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[win10下编译以及调试openjdk]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/47867b98/Java/9c47706b.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/47867b98/Java/9c47706b.html</guid>
            <pubDate>Sat, 05 Dec 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="编译openjdk" tabindex="-1"><a class="header-anchor" href="#编译openjdk" aria-hidden="true">#</a> 编译OpenJDK</h1>
<h2 id="安装编译环境" tabindex="-1"><a class="header-anchor" href="#安装编译环境" aria-hidden="true">#</a> 安装编译环境</h2>
<h3 id="下载openjdk" tabindex="-1"><a class="header-anchor" href="#下载openjdk" aria-hidden="true">#</a> 下载openjdk</h3>
<p><a href="https://github.com/openjdk/jdk.git" target="_blank" rel="noopener noreferrer">使用git clone</a>（如果觉得慢可以使用<a href="https://e.coding.net/dyt2015/dyt2015.coding.me/jdk.git" target="_blank" rel="noopener noreferrer">coding导入的jdk</a>）</p>
<h3 id="安装编译工具" tabindex="-1"><a class="header-anchor" href="#安装编译工具" aria-hidden="true">#</a> 安装编译工具</h3>
<h4 id="_1-win下cygwin64环境编译" tabindex="-1"><a class="header-anchor" href="#_1-win下cygwin64环境编译" aria-hidden="true">#</a> 1.win下Cygwin64环境编译</h4>
<ol>
<li>
<p>安装Cygwin</p>
<ol>
<li><a href="https://cygwin.com/setup-x86_64.exe" target="_blank" rel="noopener noreferrer">官方下载</a></li>
<li>设置下载源<br />
<img src="https://img-blog.csdnimg.cn/20201203150840602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="清华下载源" /></li>
</ol>
</li>
<li>
<p>需要安装的包<br />
<img src="https://img-blog.csdnimg.cn/20201205165420711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="cywin64需要的包" /></p>
</li>
</ol>
<figure class="highlight text">
<figcaption data-lang="text"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>补充：需要安装autoconf</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ol start="3">
<li>编译选项&amp;检查</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre></pre></td></tr><tr><td data-num="2"></td><td><pre>bash ./configure -with-freetype=buddle -enable-debug -with-target-bits=64 -disable-ccache</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ol start="4">
<li>构建</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>make all</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h4 id="_2-win下linux环境编译-ubuntu" tabindex="-1"><a class="header-anchor" href="#_2-win下linux环境编译-ubuntu" aria-hidden="true">#</a> 2.win下linux环境编译（ubuntu ）</h4>
<ol>
<li>
<p>需要安装的包</p>
<table>
<thead>
<tr>
<th>包名</th>
<th style="text-align:left">命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>gcc</td>
<td style="text-align:left">sudo apt-get install build-essential</td>
</tr>
<tr>
<td>FreeType</td>
<td style="text-align:left">sudo apt-get install libfreetype6-dev</td>
</tr>
<tr>
<td>CUPS</td>
<td style="text-align:left">sudo apt-get install libcups2-dev</td>
</tr>
<tr>
<td>X11</td>
<td style="text-align:left">sudo apt-get install libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev</td>
</tr>
<tr>
<td>ALSA</td>
<td style="text-align:left">sudo apt-get install libasound2-dev</td>
</tr>
<tr>
<td>libffi</td>
<td style="text-align:left">sudo apt-get install libffi-dev</td>
</tr>
<tr>
<td>Autoconf</td>
<td style="text-align:left">sudo apt-get install autoconf</td>
</tr>
<tr>
<td>zip</td>
<td style="text-align:left">sudo apt-get install zip</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>执行命令</p>
</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre> bash configure --enable-debug --with-jvm-variants=server --with-boot-jdk=/mnt/e/jdk/jdk-16 --with-tools-dir=/mnt/d/vs/2019/Community/VC/Auxiliary/Build</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>命令解释：</p>
<blockquote>
<p>–with-boot-jdk 如果找不到正确jdk，通过该命令可以手动指定<br />
jdk版本必须是编译版本的前一个版本<br />
jdk需与目标平台（win/linux）一致</p>
</blockquote>
<blockquote>
<p>–with-tools-dir 指定编译工具目录，具体指向跟编译目标有关</p>
</blockquote>
<blockquote>
<p>注意：win下wsl默认编译win平台jdk，如果需要编译linux版本需要进行配置</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201205165257927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="build.doc" /></p>
<h3 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题" aria-hidden="true">#</a> 遇到的问题</h3>
<p>win10sdk路径包含括号<br />
<img src="https://img-blog.csdnimg.cn/2020120516024683.png" alt="在这里插入图片描述" /><br />
<img src="https://img-blog.csdnimg.cn/20201205160143993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
解决：更换目录<br />
移动到正常目录（<code>括号都不行，中文就更不行了</code>）<br />
创建软连接</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>   mklink /J &quot;C:\Program Files (x86)\Windows Kits&quot; &quot;D:\WindowsKits&quot;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>当路径包含空格，路径会被截断。（参数是路径也会，最好是不要有空格）<br />
<img src="https://img-blog.csdnimg.cn/20201205160709798.png" alt="在这里插入图片描述" /><br />
警告<br />
<img src="https://img-blog.csdnimg.cn/20201205161925170.png" alt="在这里插入图片描述" /><br />
解决：执行</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>make clean</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>错误<br />
<img src="https://img-blog.csdnimg.cn/20201205162125789.png" alt="在这里插入图片描述" /><br />
解决：手动删除jdk下build文件夹</p>
<h3 id="编译成功" tabindex="-1"><a class="header-anchor" href="#编译成功" aria-hidden="true">#</a> 编译成功</h3>
<p><img src="https://img-blog.csdnimg.cn/20201205164033789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="编译成功" /><br />
验证jdk<br />
<img src="https://img-blog.csdnimg.cn/20201205164441839.png" alt="验证jdk" /></p>
<p>ps：如果可以的话直接在linux系统下编译，就不会有这么多的路径问题</p>
<h1 id="调试openjdk" tabindex="-1"><a class="header-anchor" href="#调试openjdk" aria-hidden="true">#</a> 调试OpenJDK</h1>
<h2 id="安装clion" tabindex="-1"><a class="header-anchor" href="#安装clion" aria-hidden="true">#</a> 安装clion</h2>
<h3 id="因为我是java使用idea-clion和它属于一家公司产品-使用方式相似-上手容易。安装过程-略" tabindex="-1"><a class="header-anchor" href="#因为我是java使用idea-clion和它属于一家公司产品-使用方式相似-上手容易。安装过程-略" aria-hidden="true">#</a> 因为我是java使用idea，clion和它属于一家公司产品，使用方式相似，上手容易。安装过程（略）</h3>
<h2 id="配置clion" tabindex="-1"><a class="header-anchor" href="#配置clion" aria-hidden="true">#</a> 配置clion</h2>
<p>根据编译jdk时使用的工具链，调试时应该选择对应的工具链，否则会出现debug无效的情况</p>
<p>上一篇文章我虽然使用wsl环境编译jdk，但编译工具使用的是vs工具链，所以调试选择vs工具链。<br />
<img src="https://img-blog.csdnimg.cn/20201206143258927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="vs工具链" /><br />
WSL配置<br />
当成普通linux服务器进行连接即可，缺什么安装什么，一般是缺失cmake，gdb。<br />
<img src="https://img-blog.csdnimg.cn/20201206143449329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="wsl配置" /></p>
<h3 id="导入项目" tabindex="-1"><a class="header-anchor" href="#导入项目" aria-hidden="true">#</a> 导入项目</h3>
<ol>
<li>导入jdk目录</li>
<li>创建CMakeLists.txt<br />
简易版（能调试，大量飘红，少部分代码能跳转）</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>#自己版本能用就行</pre></td></tr><tr><td data-num="2"></td><td><pre>cmake_minimum_required(VERSION 3.16)</pre></td></tr><tr><td data-num="3"></td><td><pre>project(jdk)</pre></td></tr><tr><td data-num="4"></td><td><pre># 添加源文件</pre></td></tr><tr><td data-num="5"></td><td><pre>file(GLOB_RECURSE SOURCE_FILES &quot;*.cpp&quot; &quot;*.hpp&quot; &quot;*.c&quot; &quot;*.h&quot;)</pre></td></tr><tr><td data-num="6"></td><td><pre># 添加执行配置</pre></td></tr><tr><td data-num="7"></td><td><pre>add_executable(hotspot ${SOURCE_FILES})</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>复杂版（<code>emmmm，我不会cmake，百度到的都是少了，有大佬教我吗</code>）</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>#自己版本能用就行</pre></td></tr><tr><td data-num="2"></td><td><pre>cmake_minimum_required(VERSION 3.16)</pre></td></tr><tr><td data-num="3"></td><td><pre>project(jdk)</pre></td></tr><tr><td data-num="4"></td><td><pre># 添加源文件</pre></td></tr><tr><td data-num="5"></td><td><pre>file(GLOB_RECURSE SOURCE_FILES &quot;*.cpp&quot; &quot;*.hpp&quot; &quot;*.c&quot; &quot;*.h&quot;)</pre></td></tr><tr><td data-num="6"></td><td><pre># 添加执行配置</pre></td></tr><tr><td data-num="7"></td><td><pre>add_executable(hotspot ${SOURCE_FILES})</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><ol start="3">
<li>
<p>修改run configuration</p>
<ol>
<li>修改executable为<code>build/windows-x86_64-server-fastdebug/jdk/bin/java.exe</code></li>
<li>设置参数，测试用-version，可以换成类</li>
<li>删除build下before launch下的build<br />
<img src="https://img-blog.csdnimg.cn/20201206143943220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="配置结果" /></li>
</ol>
</li>
</ol>
<h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h2>
<p>断点打在<code>src/java.base/share/native/libjli/java.c</code>中的JavaMain函数，对c/c++不是很了解，看调用帧，这个应该是入口，下面三个点进去是汇编代码。<br />
<img src="https://img-blog.csdnimg.cn/20201206145118669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="调试openjdk" /></p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/s1200" length="0" type="image//gh/dyt2015/hexo-image/s1200"/>
        </item>
        <item>
            <title><![CDATA[win10下hadoop学习]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/ec060e02/Hadoop/15d9e331.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/ec060e02/Hadoop/15d9e331.html</guid>
            <pubDate>Fri, 23 Apr 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h1>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.2.2/hadoop-3.2.2.tar.gz" target="_blank" rel="noopener noreferrer">下载hadoop</a></p>
<p><img src="https://img-blog.csdnimg.cn/20210423100922519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h1 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h1>
<p><img src="https://img-blog.csdnimg.cn/20210423112247297.png" alt="在这里插入图片描述" /><br />
path路径<br />
<img src="https://img-blog.csdnimg.cn/20210423112306293.png" alt="在这里插入图片描述" /></p>
<h1 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h1>
<p><code>hadoop-3.2.2\etc\hadoop\core-site.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;configuration&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre> &lt;property&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>        &lt;name&gt;fs.defaultFS&lt;/name&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre>        &lt;value&gt;hdfs://localhost:9000/&lt;/value&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre> &lt;/property&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre> &lt;!-- 当前用户全设置成root --&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre>&lt;property&gt;</pre></td></tr><tr><td data-num="10"></td><td><pre>&lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt;</pre></td></tr><tr><td data-num="11"></td><td><pre>&lt;value&gt;root&lt;/value&gt;</pre></td></tr><tr><td data-num="12"></td><td><pre>&lt;/property&gt;</pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>&lt;!-- 不开启权限检查 --&gt;</pre></td></tr><tr><td data-num="15"></td><td><pre>&lt;property&gt;</pre></td></tr><tr><td data-num="16"></td><td><pre>&lt;name&gt;dfs.permissions.enabled&lt;/name&gt;</pre></td></tr><tr><td data-num="17"></td><td><pre>&lt;value&gt;false&lt;/value&gt;</pre></td></tr><tr><td data-num="18"></td><td><pre>&lt;/property&gt;</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>&lt;/configuration&gt;</pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><code>hadoop-3.2.2\etc\hadoop\hdfs-site.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;configuration&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre>        &lt;value&gt;/d:/DevTools/hadoop-3.2.2/data/namenode&lt;/value&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre>        &lt;description&gt;NameNode directory for namespace and transaction logs storage.&lt;/description&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="10"></td><td><pre>        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</pre></td></tr><tr><td data-num="11"></td><td><pre>        &lt;value&gt;/d:/DevTools/hadoop-3.2.2/data/datanode&lt;/value&gt;</pre></td></tr><tr><td data-num="12"></td><td><pre>        &lt;description&gt;DataNode directory&lt;/description&gt;</pre></td></tr><tr><td data-num="13"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="14"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="15"></td><td><pre>        &lt;name&gt;dfs.replication&lt;/name&gt;</pre></td></tr><tr><td data-num="16"></td><td><pre>        &lt;value&gt;2&lt;/value&gt;</pre></td></tr><tr><td data-num="17"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="18"></td><td><pre>&lt;/configuration&gt;</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><code>hadoop-3.2.2\etc\hadoop\mapred-site.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;?xml version=&quot;1.0&quot;?&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;configuration&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre>        &lt;value&gt;yarn&lt;/value&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>&lt;/configuration&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><code>hadoop-3.2.2\etc\hadoop\yarn-site.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;?xml version=&quot;1.0&quot;?&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;configuration&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;property&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce_shuffle.class&lt;/name&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre>        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;</pre></td></tr><tr><td data-num="10"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="11"></td><td><pre>    &lt;property&gt;</pre></td></tr><tr><td data-num="12"></td><td><pre>        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</pre></td></tr><tr><td data-num="13"></td><td><pre>        &lt;value&gt;localhost&lt;/value&gt;</pre></td></tr><tr><td data-num="14"></td><td><pre>    &lt;/property&gt;</pre></td></tr><tr><td data-num="15"></td><td><pre>&lt;/configuration&gt;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="缺失文件" tabindex="-1"><a class="header-anchor" href="#缺失文件" aria-hidden="true">#</a> 缺失文件</h1>
<p><img src="https://img-blog.csdnimg.cn/20210423101547514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
<a href="https://github.com/cdarlint/winutils/blob/master/hadoop-3.2.1" target="_blank" rel="noopener noreferrer">github下载</a></p>
<h1 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题" aria-hidden="true">#</a> 遇到的问题</h1>
<p><img src="https://img-blog.csdnimg.cn/20210423110450309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<blockquote>
<p>解决方案:安装<a href="https://blog.csdn.net/vbcom/article/details/7245186" target="_blank" rel="noopener noreferrer">DirectX修复工具增强版</a>修复系统组件缺失,在C://Windows/System32目录下放置hadoop.dll</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20210423110554561.png" alt="在这里插入图片描述" /></p>
<blockquote>
<p>ps: 本来打算放弃的,win下的坑太多了,一顿瞎搞后终于成功了,还有点小问题</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20210423122205257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h2 id="节点未格式化" tabindex="-1"><a class="header-anchor" href="#节点未格式化" aria-hidden="true">#</a> 节点未格式化</h2>
<p>执行</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>hdfs namenode  -format</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>输入Y<br />
<img src="https://img-blog.csdnimg.cn/20210423122919553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h1 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h1>
<p>执行命令或双击hadoop-3.2.2\sbin下的start-all.cmd</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>./start-all.cmd</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h2 id="访问8088" tabindex="-1"><a class="header-anchor" href="#访问8088" aria-hidden="true">#</a> 访问8088</h2>
<p><img src="https://img-blog.csdnimg.cn/20210423123512815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h2 id="访问9000" tabindex="-1"><a class="header-anchor" href="#访问9000" aria-hidden="true">#</a> 访问9000</h2>
<p><code>It looks like you are making an HTTP request to a Hadoop IPC port. This is not the correct port for the web interface on this daemon.</code></p>
<h2 id="访问9870-hadoop新版本默认" tabindex="-1"><a class="header-anchor" href="#访问9870-hadoop新版本默认" aria-hidden="true">#</a> 访问9870(hadoop新版本默认)</h2>
<p><img src="https://img-blog.csdnimg.cn/20210423123926928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h1 id="关闭" tabindex="-1"><a class="header-anchor" href="#关闭" aria-hidden="true">#</a> 关闭</h1>
<p>执行命令或双击hadoop-3.2.2\sbin下的stop-all.cmd</p>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>./stop-all.cmd</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="开发时修改权限" tabindex="-1"><a class="header-anchor" href="#开发时修改权限" aria-hidden="true">#</a> 开发时修改权限</h1>
<p><code>core-site.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;!-- 当前用户全设置成root --&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;property&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>&lt;value&gt;root&lt;/value&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>&lt;/property&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>&lt;!-- 不开启权限检查 --&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>&lt;property&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre>&lt;name&gt;dfs.permissions.enabled&lt;/name&gt;</pre></td></tr><tr><td data-num="10"></td><td><pre>&lt;value&gt;false&lt;/value&gt;</pre></td></tr><tr><td data-num="11"></td><td><pre>&lt;/property&gt;</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><h1 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h1>
<h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2>
<ol>
<li>使用图形界面添加等会用的的目录</li>
<li>上传测试文件word,内容为</li>
</ol>
<figure class="highlight bash">
<figcaption data-lang="bash"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>my name is abc, I can read abc.</pre></td></tr><tr><td data-num="2"></td><td><pre>this is a demo for mapreduce</pre></td></tr><tr><td data-num="3"></td><td><pre>I'm learning hadoop</pre></td></tr><tr><td data-num="4"></td><td><pre>hadoop and mapreduce</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://img-blog.csdnimg.cn/20210423142128838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h2 id="代码编写" tabindex="-1"><a class="header-anchor" href="#代码编写" aria-hidden="true">#</a> 代码编写</h2>
<p><code>pom.xml</code></p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>...</pre></td></tr><tr><td data-num="2"></td><td><pre>        &lt;!-- hadoop 依赖 --&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>        &lt;dependency&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>            &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;</pre></td></tr><tr><td data-num="6"></td><td><pre>            &lt;version&gt;2.10.0&lt;/version&gt;</pre></td></tr><tr><td data-num="7"></td><td><pre>        &lt;/dependency&gt;</pre></td></tr><tr><td data-num="8"></td><td><pre>        &lt;dependency&gt;</pre></td></tr><tr><td data-num="9"></td><td><pre>            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</pre></td></tr><tr><td data-num="10"></td><td><pre>            &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;</pre></td></tr><tr><td data-num="11"></td><td><pre>            &lt;version&gt;2.10.0&lt;/version&gt;</pre></td></tr><tr><td data-num="12"></td><td><pre>        &lt;/dependency&gt;</pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>        &lt;dependency&gt;</pre></td></tr><tr><td data-num="15"></td><td><pre>            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</pre></td></tr><tr><td data-num="16"></td><td><pre>            &lt;artifactId&gt;hadoop-mapreduce-client-core&lt;/artifactId&gt;</pre></td></tr><tr><td data-num="17"></td><td><pre>            &lt;version&gt;2.10.0&lt;/version&gt;</pre></td></tr><tr><td data-num="18"></td><td><pre>        &lt;/dependency&gt;</pre></td></tr><tr><td data-num="19"></td><td><pre>        &lt;dependency&gt;</pre></td></tr><tr><td data-num="20"></td><td><pre>            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</pre></td></tr><tr><td data-num="21"></td><td><pre>            &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;</pre></td></tr><tr><td data-num="22"></td><td><pre>            &lt;version&gt;2.10.0&lt;/version&gt;</pre></td></tr><tr><td data-num="23"></td><td><pre>        &lt;/dependency&gt;</pre></td></tr><tr><td data-num="24"></td><td><pre>...</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package com.hadoop.demo.mapreduce;</pre></td></tr><tr><td data-num="2"></td><td><pre>import org.apache.hadoop.conf.Configuration;</pre></td></tr><tr><td data-num="3"></td><td><pre>import org.apache.hadoop.fs.Path;</pre></td></tr><tr><td data-num="4"></td><td><pre>import org.apache.hadoop.io.IntWritable;</pre></td></tr><tr><td data-num="5"></td><td><pre>import org.apache.hadoop.io.Text;</pre></td></tr><tr><td data-num="6"></td><td><pre>import org.apache.hadoop.mapreduce.Job;</pre></td></tr><tr><td data-num="7"></td><td><pre>import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</pre></td></tr><tr><td data-num="8"></td><td><pre>import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</pre></td></tr><tr><td data-num="9"></td><td><pre>import java.io.IOException;</pre></td></tr><tr><td data-num="10"></td><td><pre>public class MyJob {</pre></td></tr><tr><td data-num="11"></td><td><pre>    public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {</pre></td></tr><tr><td data-num="12"></td><td><pre>        //1 Configuration创建配置对象</pre></td></tr><tr><td data-num="13"></td><td><pre>        Configuration cfg=new Configuration();</pre></td></tr><tr><td data-num="14"></td><td><pre>        //2 getInstance创建job对象</pre></td></tr><tr><td data-num="15"></td><td><pre>        Job job = Job.getInstance(cfg);</pre></td></tr><tr><td data-num="16"></td><td><pre>        //3 set设置job,map,reduce类,map,reduce输出类</pre></td></tr><tr><td data-num="17"></td><td><pre>        job.setJarByClass(MyJob.class);</pre></td></tr><tr><td data-num="18"></td><td><pre>        job.setMapperClass(MyMap.class);</pre></td></tr><tr><td data-num="19"></td><td><pre>        job.setReducerClass(MyReduce.class);</pre></td></tr><tr><td data-num="20"></td><td><pre>        job.setOutputKeyClass(Text.class);</pre></td></tr><tr><td data-num="21"></td><td><pre>        job.setOutputValueClass(IntWritable.class);</pre></td></tr><tr><td data-num="22"></td><td><pre>        job.setMapOutputKeyClass(Text.class);</pre></td></tr><tr><td data-num="23"></td><td><pre>        job.setMapOutputValueClass(IntWritable.class);</pre></td></tr><tr><td data-num="24"></td><td><pre>        //4 FileInputFormat.addInputPath指定读取地址</pre></td></tr><tr><td data-num="25"></td><td><pre>        FileInputFormat.addInputPath(job,new Path(&quot;hdfs://localhost:9000/wc/input&quot;));</pre></td></tr><tr><td data-num="26"></td><td><pre>        //5 FileOutputFormat.setOutputPath指定写入地址</pre></td></tr><tr><td data-num="27"></td><td><pre>        FileOutputFormat.setOutputPath(job,new Path(&quot;hdfs://localhost:9000/wc/output&quot;));</pre></td></tr><tr><td data-num="28"></td><td><pre>        //6 waitForCompletion等待mapreduce完成</pre></td></tr><tr><td data-num="29"></td><td><pre>        boolean flag = job.waitForCompletion(true);</pre></td></tr><tr><td data-num="30"></td><td><pre>        //7 System.exit关闭系统</pre></td></tr><tr><td data-num="31"></td><td><pre>        System.exit(flag?0:1);</pre></td></tr><tr><td data-num="32"></td><td><pre>    }</pre></td></tr><tr><td data-num="33"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package com.hadoop.demo.mapreduce;</pre></td></tr><tr><td data-num="2"></td><td><pre>import org.apache.hadoop.io.IntWritable;</pre></td></tr><tr><td data-num="3"></td><td><pre>import org.apache.hadoop.io.LongWritable;</pre></td></tr><tr><td data-num="4"></td><td><pre>import org.apache.hadoop.io.Text;</pre></td></tr><tr><td data-num="5"></td><td><pre>import org.apache.hadoop.mapreduce.Mapper;</pre></td></tr><tr><td data-num="6"></td><td><pre>import java.io.IOException;</pre></td></tr><tr><td data-num="7"></td><td><pre>public class MyMap extends Mapper&lt;LongWritable,Text,Text,IntWritable&gt; {</pre></td></tr><tr><td data-num="8"></td><td><pre>    private IntWritable count=new IntWritable(1);</pre></td></tr><tr><td data-num="9"></td><td><pre>    private Text w=new Text();</pre></td></tr><tr><td data-num="10"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="11"></td><td><pre>    protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {</pre></td></tr><tr><td data-num="12"></td><td><pre>        //1 toString字符串转换</pre></td></tr><tr><td data-num="13"></td><td><pre>        String line = value.toString();</pre></td></tr><tr><td data-num="14"></td><td><pre>        //2 split分割单词</pre></td></tr><tr><td data-num="15"></td><td><pre>        String[] words = line.split(&quot; &quot;);</pre></td></tr><tr><td data-num="16"></td><td><pre>        //3 for遍历</pre></td></tr><tr><td data-num="17"></td><td><pre>        for (String word:words){</pre></td></tr><tr><td data-num="18"></td><td><pre>            //4 set转换Text</pre></td></tr><tr><td data-num="19"></td><td><pre>            w.set(word);</pre></td></tr><tr><td data-num="20"></td><td><pre>            //5 write写入</pre></td></tr><tr><td data-num="21"></td><td><pre>            context.write(w,count);</pre></td></tr><tr><td data-num="22"></td><td><pre>        }</pre></td></tr><tr><td data-num="23"></td><td><pre>    }</pre></td></tr><tr><td data-num="24"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>package com.hadoop.demo.mapreduce;</pre></td></tr><tr><td data-num="2"></td><td><pre>import org.apache.hadoop.io.IntWritable;</pre></td></tr><tr><td data-num="3"></td><td><pre>import org.apache.hadoop.io.Text;</pre></td></tr><tr><td data-num="4"></td><td><pre>import org.apache.hadoop.mapreduce.Reducer;</pre></td></tr><tr><td data-num="5"></td><td><pre>import java.io.IOException;</pre></td></tr><tr><td data-num="6"></td><td><pre>public class MyReduce extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; {</pre></td></tr><tr><td data-num="7"></td><td><pre>    private IntWritable i=new IntWritable();</pre></td></tr><tr><td data-num="8"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="9"></td><td><pre>    protected void reduce(Text word, Iterable&lt;IntWritable&gt; values, Context context) throws IOException, InterruptedException {</pre></td></tr><tr><td data-num="10"></td><td><pre>        //1 int计数器</pre></td></tr><tr><td data-num="11"></td><td><pre>        int sum=0;</pre></td></tr><tr><td data-num="12"></td><td><pre>        //2 for遍历value</pre></td></tr><tr><td data-num="13"></td><td><pre>        for (IntWritable it:values){</pre></td></tr><tr><td data-num="14"></td><td><pre>            //3 get转换int</pre></td></tr><tr><td data-num="15"></td><td><pre>            sum +=it.get();</pre></td></tr><tr><td data-num="16"></td><td><pre>        }</pre></td></tr><tr><td data-num="17"></td><td><pre>        //4 set转换IntWritable</pre></td></tr><tr><td data-num="18"></td><td><pre>        i.set(sum);</pre></td></tr><tr><td data-num="19"></td><td><pre>        //5 write写入</pre></td></tr><tr><td data-num="20"></td><td><pre>        context.write(word,i);</pre></td></tr><tr><td data-num="21"></td><td><pre>    }</pre></td></tr><tr><td data-num="22"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>运行main方法就可以了</p>
<p><img src="https://img-blog.csdnimg.cn/20210423143111343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h2>
<p><img src="https://img-blog.csdnimg.cn/20210423142856778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
<img src="https://img-blog.csdnimg.cn/20210423142925259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<h1 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h1>
<p>个人感觉新版本对新手友好一下,HDFS WebUI 里可以上传文件,创建目录,2.7.1好像没有.</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://cdn.jsdelivr.net/gh/dyt2015/hexo-image/hadoop-consulting-and-support.svg" length="0" type="image/svg"/>
        </item>
        <item>
            <title><![CDATA[gateway配合nacos SERVICE_UNAVAILABLE “Unable to find instance for xxx]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/47867b98/Java/fd72446f.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/47867b98/Java/fd72446f.html</guid>
            <pubDate>Fri, 14 May 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="gateway配合nacos-找不到服务的问题" tabindex="-1"><a class="header-anchor" href="#gateway配合nacos-找不到服务的问题" aria-hidden="true">#</a> gateway配合nacos 找不到服务的问题</h1>
<figure class="highlight text">
<figcaption data-lang="text"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>gateway版本: 3.0.2</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><figure class="highlight text">
<figcaption data-lang="text"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>nacos版本: 1.4.1</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p><img src="https://img-blog.csdnimg.cn/2021051417171856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
<p><img src="https://img-blog.csdnimg.cn/20210514171412544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTM2OTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
gateway出错了,没有任何异常信息,增加自定义异常处理后,通过日志发现一个关键词<code>NoLoadBalancer</code>,突然就想到Spring Cloud2020移除了Ribbon,加入依赖后成功解决问题.</p>
<figure class="highlight xml">
<figcaption data-lang="xml"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>&lt;dependency&gt;</pre></td></tr><tr><td data-num="2"></td><td><pre>   &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</pre></td></tr><tr><td data-num="3"></td><td><pre>   &lt;artifactId&gt;spring-cloud-loadbalancer&lt;/artifactId&gt;</pre></td></tr><tr><td data-num="4"></td><td><pre>   &lt;version&gt;对应版本&lt;/version&gt;</pre></td></tr><tr><td data-num="5"></td><td><pre>&lt;/dependency&gt;</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <enclosure url="https://proprikol.ru/wp-content/uploads/2020/07/kartinki-zimnij-vecher-27.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[二叉搜索树]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/79666db/7b216a3b/7cab1e06.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/79666db/7b216a3b/7cab1e06.html</guid>
            <pubDate>Wed, 20 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><strong>别名</strong><br />
二叉搜索树,二叉查找树，BST，Binary Search Tree</p>
<p><strong>特点</strong></p>
<ol>
<li>若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值；</li>
<li>任意节点的右子树不空，则右子树上所有结点的值均大于它的根结点的值；</li>
<li>任意节点的左、右子树也分别为二叉查找树；</li>
<li>没有键值相等的节点。</li>
</ol>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[[105]从前序与中序遍历序列构造二叉树]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/c7081503.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/c7081503.html</guid>
            <pubDate>Wed, 20 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for a binary tree node.</pre></td></tr><tr><td data-num="3"></td><td><pre> * public class TreeNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     TreeNode left;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     TreeNode right;</pre></td></tr><tr><td data-num="7"></td><td><pre> *     TreeNode() {}</pre></td></tr><tr><td data-num="8"></td><td><pre> *     TreeNode(int val) { this.val = val; }</pre></td></tr><tr><td data-num="9"></td><td><pre> *     TreeNode(int val, TreeNode left, TreeNode right) {</pre></td></tr><tr><td data-num="10"></td><td><pre> *         this.val = val;</pre></td></tr><tr><td data-num="11"></td><td><pre> *         this.left = left;</pre></td></tr><tr><td data-num="12"></td><td><pre> *         this.right = right;</pre></td></tr><tr><td data-num="13"></td><td><pre> *     }</pre></td></tr><tr><td data-num="14"></td><td><pre> * }</pre></td></tr><tr><td data-num="15"></td><td><pre> */</pre></td></tr><tr><td data-num="16"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="17"></td><td><pre>  public TreeNode buildTree(int[] preorder, int[] inorder) {</pre></td></tr><tr><td data-num="18"></td><td><pre>    return buildTree(preorder, inorder, 0, preorder.length - 1, 0, inorder.length - 1);</pre></td></tr><tr><td data-num="19"></td><td><pre>  }</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>  private TreeNode buildTree(int[] preorder, int[] inorder, int preStart, int preEnd, int inStart, int inEnd) {</pre></td></tr><tr><td data-num="22"></td><td><pre>    if (preStart &gt; preEnd) {</pre></td></tr><tr><td data-num="23"></td><td><pre>      return null;</pre></td></tr><tr><td data-num="24"></td><td><pre>    }   //根的值</pre></td></tr><tr><td data-num="25"></td><td><pre>    int rootVal = preorder[preStart];</pre></td></tr><tr><td data-num="26"></td><td><pre>    //中序中根的位置</pre></td></tr><tr><td data-num="27"></td><td><pre>    int index = 0;</pre></td></tr><tr><td data-num="28"></td><td><pre>    for (int i = inStart; i &lt;= inEnd; i++) {</pre></td></tr><tr><td data-num="29"></td><td><pre>      if (inorder[i] == rootVal) {</pre></td></tr><tr><td data-num="30"></td><td><pre>        index = i;</pre></td></tr><tr><td data-num="31"></td><td><pre>        break;</pre></td></tr><tr><td data-num="32"></td><td><pre>      }</pre></td></tr><tr><td data-num="33"></td><td><pre>    }</pre></td></tr><tr><td data-num="34"></td><td><pre>    //根节点左边节点数</pre></td></tr><tr><td data-num="35"></td><td><pre>    int leftSize = index - inStart;</pre></td></tr><tr><td data-num="36"></td><td><pre>    TreeNode root = new TreeNode(rootVal);</pre></td></tr><tr><td data-num="37"></td><td><pre>    //[ 根节点, [左子树的前序遍历结果], [右子树的前序遍历结果] ]</pre></td></tr><tr><td data-num="38"></td><td><pre>    //[ [左子树的中序遍历结果], 根节点, [右子树的中序遍历结果] ]</pre></td></tr><tr><td data-num="39"></td><td><pre>    root.left = buildTree(preorder, inorder, preStart + 1, preStart + leftSize, inStart, index - 1);</pre></td></tr><tr><td data-num="40"></td><td><pre>    root.right = buildTree(preorder, inorder, preStart + 1 + leftSize, preEnd, index + 1, inEnd);</pre></td></tr><tr><td data-num="41"></td><td><pre>    return root;</pre></td></tr><tr><td data-num="42"></td><td><pre>  }</pre></td></tr><tr><td data-num="43"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>改进</p>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>  Map&lt;Integer,Integer&gt; valOrderMap = new HashMap&lt;&gt;();</pre></td></tr><tr><td data-num="3"></td><td><pre>  public TreeNode buildTree(int[] preorder, int[] inorder) {</pre></td></tr><tr><td data-num="4"></td><td><pre>    for (int j = 0; j &lt; inorder.length; j++) {</pre></td></tr><tr><td data-num="5"></td><td><pre>      valOrderMap.put(inorder[j],j);</pre></td></tr><tr><td data-num="6"></td><td><pre>    }</pre></td></tr><tr><td data-num="7"></td><td><pre>    return buildTree(preorder, inorder, 0, preorder.length - 1, 0, inorder.length - 1);</pre></td></tr><tr><td data-num="8"></td><td><pre>  }</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  private TreeNode buildTree(int[] preorder, int[] inorder, int preStart, int preEnd, int inStart, int inEnd) {</pre></td></tr><tr><td data-num="11"></td><td><pre>    if (preStart &gt; preEnd) {</pre></td></tr><tr><td data-num="12"></td><td><pre>      return null;</pre></td></tr><tr><td data-num="13"></td><td><pre>    }   //根的值</pre></td></tr><tr><td data-num="14"></td><td><pre>    int rootVal = preorder[preStart];</pre></td></tr><tr><td data-num="15"></td><td><pre>    //中序中根的位置</pre></td></tr><tr><td data-num="16"></td><td><pre>    int index = valOrderMap.get(rootVal);</pre></td></tr><tr><td data-num="17"></td><td><pre>    //根节点左边节点数</pre></td></tr><tr><td data-num="18"></td><td><pre>    int leftSize = index - inStart;</pre></td></tr><tr><td data-num="19"></td><td><pre>    TreeNode root = new TreeNode(rootVal);</pre></td></tr><tr><td data-num="20"></td><td><pre>    //[ 根节点, [左子树的前序遍历结果], [右子树的前序遍历结果] ]</pre></td></tr><tr><td data-num="21"></td><td><pre>    //[ [左子树的中序遍历结果], 根节点, [右子树的中序遍历结果] ]</pre></td></tr><tr><td data-num="22"></td><td><pre>    root.left = buildTree(preorder, inorder, preStart + 1, preStart + leftSize, inStart, index - 1);</pre></td></tr><tr><td data-num="23"></td><td><pre>    root.right = buildTree(preorder, inorder, preStart + 1 + leftSize, preEnd, index + 1, inEnd);</pre></td></tr><tr><td data-num="24"></td><td><pre>    return root;</pre></td></tr><tr><td data-num="25"></td><td><pre>  }</pre></td></tr><tr><td data-num="26"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[124]二叉树中的最大路径和]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/9b7cc1d2.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/9b7cc1d2.html</guid>
            <pubDate>Wed, 20 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><strong>路径</strong> 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 <strong>至多出现一次</strong>。该路径 <strong>至少包含一个</strong> 节点，且不一定经过根节点。</p>
<p><strong>路径和</strong> 是路径中各节点值的总和。</p>
<p>给你一个二叉树的根节点 <code>root</code> ，返回其 最大路径和。</p>
<p><strong>示例 1：</strong><br />
<img src="https://s2.loli.net/2022/07/20/aGU7tSMkmE2Nxuz.jpg" alt="示例 1" /><br />
<strong>输入</strong>：root = [1,2,3]<br />
<strong>输出</strong>：6<br />
<strong>解释</strong>：最优路径是 2 -&gt; 1 -&gt; 3 ，路径和为 2 + 1 + 3 = 6</p>
<p><strong>示例 2：</strong><br />
<img src="https://s2.loli.net/2022/07/20/etpZsRqXaWOckdL.jpg" alt="示例 2" /><br />
<strong>输入</strong>：root = [-10,9,20,null,null,15,7]<br />
<strong>输出</strong>：42<br />
<strong>解释</strong>：最优路径是 15 -&gt; 20 -&gt; 7 ，路径和为 15 + 20 + 7 = 42</p>
<p><strong>提示：</strong></p>
<ul>
<li>树中节点数目范围是 <code>[1, 3 * 10⁴]</code></li>
<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>
</ul>
<p>Related Topics</p>
<ul>
<li>树</li>
<li>深度优先搜索</li>
<li>动态规划</li>
<li>二叉树</li>
<li>👍 1658</li>
<li>👎 0</li>
</ul>
<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for a binary tree node.</pre></td></tr><tr><td data-num="3"></td><td><pre> * public class TreeNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     TreeNode left;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     TreeNode right;</pre></td></tr><tr><td data-num="7"></td><td><pre> *     TreeNode() {}</pre></td></tr><tr><td data-num="8"></td><td><pre> *     TreeNode(int val) { this.val = val; }</pre></td></tr><tr><td data-num="9"></td><td><pre> *     TreeNode(int val, TreeNode left, TreeNode right) {</pre></td></tr><tr><td data-num="10"></td><td><pre> *         this.val = val;</pre></td></tr><tr><td data-num="11"></td><td><pre> *         this.left = left;</pre></td></tr><tr><td data-num="12"></td><td><pre> *         this.right = right;</pre></td></tr><tr><td data-num="13"></td><td><pre> *     }</pre></td></tr><tr><td data-num="14"></td><td><pre> * }</pre></td></tr><tr><td data-num="15"></td><td><pre> */</pre></td></tr><tr><td data-num="16"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="17"></td><td><pre>  int res = Integer.MIN_VALUE;</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>  public int maxPathSum(TreeNode root) {</pre></td></tr><tr><td data-num="20"></td><td><pre>    // 后序位置</pre></td></tr><tr><td data-num="21"></td><td><pre>    oneSideMax(root);</pre></td></tr><tr><td data-num="22"></td><td><pre>    return res;</pre></td></tr><tr><td data-num="23"></td><td><pre>  }</pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>  private int oneSideMax(TreeNode root){</pre></td></tr><tr><td data-num="26"></td><td><pre>    if (root == null) {</pre></td></tr><tr><td data-num="27"></td><td><pre>      return 0;</pre></td></tr><tr><td data-num="28"></td><td><pre>    }</pre></td></tr><tr><td data-num="29"></td><td><pre>    int left = Math.max(0, oneSideMax(root.left));</pre></td></tr><tr><td data-num="30"></td><td><pre>    int right = Math.max(0, oneSideMax(root.right));</pre></td></tr><tr><td data-num="31"></td><td><pre>    res = Math.max(res, left + right + root.val);</pre></td></tr><tr><td data-num="32"></td><td><pre>    return Math.max(left, right) + root.val;</pre></td></tr><tr><td data-num="33"></td><td><pre>  }</pre></td></tr><tr><td data-num="34"></td><td><pre>}</pre></td></tr><tr><td data-num="35"></td><td><pre>//leetcode submit region end(Prohibit modification and deletion)</pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[230]二叉搜索树中第K小的元素]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/77c5fdb1.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/e85d694a/77c5fdb1.html</guid>
            <pubDate>Wed, 20 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>  int rank,res = 0;</pre></td></tr><tr><td data-num="3"></td><td><pre>  public int kthSmallest(TreeNode root, int k) {</pre></td></tr><tr><td data-num="4"></td><td><pre>    traverse(root,k);</pre></td></tr><tr><td data-num="5"></td><td><pre>    return res;</pre></td></tr><tr><td data-num="6"></td><td><pre>  }</pre></td></tr><tr><td data-num="7"></td><td><pre>  private void traverse(TreeNode root, int k) {</pre></td></tr><tr><td data-num="8"></td><td><pre>    if (root == null) {</pre></td></tr><tr><td data-num="9"></td><td><pre>      return;</pre></td></tr><tr><td data-num="10"></td><td><pre>    }</pre></td></tr><tr><td data-num="11"></td><td><pre>    traverse(root.left,k);</pre></td></tr><tr><td data-num="12"></td><td><pre>    //二叉搜索树的特点，若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值，因此先序遍历的就是第k小</pre></td></tr><tr><td data-num="13"></td><td><pre>    rank++;</pre></td></tr><tr><td data-num="14"></td><td><pre>    if (k == rank) {</pre></td></tr><tr><td data-num="15"></td><td><pre>      res = root.val;</pre></td></tr><tr><td data-num="16"></td><td><pre>      return;</pre></td></tr><tr><td data-num="17"></td><td><pre>    }</pre></td></tr><tr><td data-num="18"></td><td><pre>    traverse(root.right,k);</pre></td></tr><tr><td data-num="19"></td><td><pre>  }</pre></td></tr><tr><td data-num="20"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[21]合并两个有序链表]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/2a1f0504.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/2a1f0504.html</guid>
            <pubDate>Thu, 28 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {</pre></td></tr><tr><td data-num="3"></td><td><pre>      // 虚拟头结点</pre></td></tr><tr><td data-num="4"></td><td><pre>      ListNode dummy = new ListNode(-1), p = dummy;</pre></td></tr><tr><td data-num="5"></td><td><pre>      ListNode p1 = l1, p2 = l2;</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>      while (p1 != null &amp;&amp; p2 != null) {</pre></td></tr><tr><td data-num="8"></td><td><pre>        // 比较 p1 和 p2 两个指针</pre></td></tr><tr><td data-num="9"></td><td><pre>        // 将值较小的的节点接到 p 指针</pre></td></tr><tr><td data-num="10"></td><td><pre>        if (p1.val &gt; p2.val) {</pre></td></tr><tr><td data-num="11"></td><td><pre>          p.next = p2;</pre></td></tr><tr><td data-num="12"></td><td><pre>          p2 = p2.next;</pre></td></tr><tr><td data-num="13"></td><td><pre>        } else {</pre></td></tr><tr><td data-num="14"></td><td><pre>          p.next = p1;</pre></td></tr><tr><td data-num="15"></td><td><pre>          p1 = p1.next;</pre></td></tr><tr><td data-num="16"></td><td><pre>        }</pre></td></tr><tr><td data-num="17"></td><td><pre>        // p 指针不断前进</pre></td></tr><tr><td data-num="18"></td><td><pre>        p = p.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>      }</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>      if (p1 != null) {</pre></td></tr><tr><td data-num="22"></td><td><pre>        p.next = p1;</pre></td></tr><tr><td data-num="23"></td><td><pre>      }</pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>      if (p2 != null) {</pre></td></tr><tr><td data-num="26"></td><td><pre>        p.next = p2;</pre></td></tr><tr><td data-num="27"></td><td><pre>      }</pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>      return dummy.next;</pre></td></tr><tr><td data-num="30"></td><td><pre>    }</pre></td></tr><tr><td data-num="31"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[23]合并K个升序链表]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/2cf49dc6.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/2cf49dc6.html</guid>
            <pubDate>Thu, 28 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>  public ListNode mergeKLists(ListNode[] lists) {</pre></td></tr><tr><td data-num="3"></td><td><pre>    if (lists.length == 0) return null;</pre></td></tr><tr><td data-num="4"></td><td><pre>    // 虚拟头结点</pre></td></tr><tr><td data-num="5"></td><td><pre>    ListNode dummy = new ListNode(-1);</pre></td></tr><tr><td data-num="6"></td><td><pre>    ListNode p = dummy;</pre></td></tr><tr><td data-num="7"></td><td><pre>    // 优先级队列，最小堆</pre></td></tr><tr><td data-num="8"></td><td><pre>    PriorityQueue&lt;ListNode&gt; pq = new PriorityQueue&lt;&gt;(</pre></td></tr><tr><td data-num="9"></td><td><pre>      lists.length, (a, b)-&gt;(a.val - b.val));</pre></td></tr><tr><td data-num="10"></td><td><pre>    // 将 k 个链表的头结点加入最小堆</pre></td></tr><tr><td data-num="11"></td><td><pre>    for (ListNode head : lists) {</pre></td></tr><tr><td data-num="12"></td><td><pre>      if (head != null)</pre></td></tr><tr><td data-num="13"></td><td><pre>        pq.add(head);</pre></td></tr><tr><td data-num="14"></td><td><pre>    }</pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    while (!pq.isEmpty()) {</pre></td></tr><tr><td data-num="17"></td><td><pre>      // 获取最小节点，接到结果链表中</pre></td></tr><tr><td data-num="18"></td><td><pre>      ListNode node = pq.poll();</pre></td></tr><tr><td data-num="19"></td><td><pre>      p.next = node;</pre></td></tr><tr><td data-num="20"></td><td><pre>      if (node.next != null) {</pre></td></tr><tr><td data-num="21"></td><td><pre>        pq.add(node.next);</pre></td></tr><tr><td data-num="22"></td><td><pre>      }</pre></td></tr><tr><td data-num="23"></td><td><pre>      // p 指针不断前进</pre></td></tr><tr><td data-num="24"></td><td><pre>      p = p.next;</pre></td></tr><tr><td data-num="25"></td><td><pre>    }</pre></td></tr><tr><td data-num="26"></td><td><pre>    return dummy.next;</pre></td></tr><tr><td data-num="27"></td><td><pre>  }</pre></td></tr><tr><td data-num="28"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure><p>总结：优先级队列</p>
]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[86]分隔链表]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/3758805c.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/3758805c.html</guid>
            <pubDate>Thu, 28 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>  public ListNode partition(ListNode head, int x) {</pre></td></tr><tr><td data-num="3"></td><td><pre>      // 存放小于 x 的链表的虚拟头结点</pre></td></tr><tr><td data-num="4"></td><td><pre>      ListNode dummy1 = new ListNode(-1);</pre></td></tr><tr><td data-num="5"></td><td><pre>      // 存放大于等于 x 的链表的虚拟头结点</pre></td></tr><tr><td data-num="6"></td><td><pre>      ListNode dummy2 = new ListNode(-1);</pre></td></tr><tr><td data-num="7"></td><td><pre>      // p1, p2 指针负责生成结果链表</pre></td></tr><tr><td data-num="8"></td><td><pre>      ListNode p1 = dummy1, p2 = dummy2;</pre></td></tr><tr><td data-num="9"></td><td><pre>      // p 负责遍历原链表，类似合并两个有序链表的逻辑</pre></td></tr><tr><td data-num="10"></td><td><pre>      // 这里是将一个链表分解成两个链表</pre></td></tr><tr><td data-num="11"></td><td><pre>      ListNode p = head;</pre></td></tr><tr><td data-num="12"></td><td><pre>      while (p != null) {</pre></td></tr><tr><td data-num="13"></td><td><pre>        if (p.val &gt;= x) {</pre></td></tr><tr><td data-num="14"></td><td><pre>          p2.next = p;</pre></td></tr><tr><td data-num="15"></td><td><pre>          p2 = p2.next;</pre></td></tr><tr><td data-num="16"></td><td><pre>        } else {</pre></td></tr><tr><td data-num="17"></td><td><pre>          p1.next = p;</pre></td></tr><tr><td data-num="18"></td><td><pre>          p1 = p1.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>        }</pre></td></tr><tr><td data-num="20"></td><td><pre>        // 断开原链表中的每个节点的 next 指针</pre></td></tr><tr><td data-num="21"></td><td><pre>        ListNode temp = p.next;</pre></td></tr><tr><td data-num="22"></td><td><pre>        p.next = null;</pre></td></tr><tr><td data-num="23"></td><td><pre>        p = temp;</pre></td></tr><tr><td data-num="24"></td><td><pre>      }</pre></td></tr><tr><td data-num="25"></td><td><pre>      // 连接两个链表</pre></td></tr><tr><td data-num="26"></td><td><pre>      p1.next = dummy2.next;</pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>      return dummy1.next;</pre></td></tr><tr><td data-num="29"></td><td><pre>    }</pre></td></tr><tr><td data-num="30"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[剑指 Offer 22]链表中倒数第k个节点]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/8f835b6d.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/8f835b6d.html</guid>
            <pubDate>Thu, 28 Jul 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>    public ListNode getKthFromEnd(ListNode head, int k) {</pre></td></tr><tr><td data-num="3"></td><td><pre>        ListNode p1 = head;</pre></td></tr><tr><td data-num="4"></td><td><pre>        // p1 先走 k 步</pre></td></tr><tr><td data-num="5"></td><td><pre>        for (int i = 0; i &lt; k; i++) {</pre></td></tr><tr><td data-num="6"></td><td><pre>            p1 = p1.next;</pre></td></tr><tr><td data-num="7"></td><td><pre>        }</pre></td></tr><tr><td data-num="8"></td><td><pre>        ListNode p2 = head;</pre></td></tr><tr><td data-num="9"></td><td><pre>        // p1 和 p2 同时走 n - k 步</pre></td></tr><tr><td data-num="10"></td><td><pre>        while (p1 != null) {</pre></td></tr><tr><td data-num="11"></td><td><pre>            p2 = p2.next;</pre></td></tr><tr><td data-num="12"></td><td><pre>            p1 = p1.next;</pre></td></tr><tr><td data-num="13"></td><td><pre>        }</pre></td></tr><tr><td data-num="14"></td><td><pre>        // p2 现在指向第 n - k + 1 个节点，即倒数第 k 个节点</pre></td></tr><tr><td data-num="15"></td><td><pre>        return p2;</pre></td></tr><tr><td data-num="16"></td><td><pre>    }</pre></td></tr><tr><td data-num="17"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[141]环形链表]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/69a9925d.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/69a9925d.html</guid>
            <pubDate>Wed, 03 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for singly-linked list.</pre></td></tr><tr><td data-num="3"></td><td><pre> * class ListNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     ListNode next;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     ListNode(int x) {</pre></td></tr><tr><td data-num="7"></td><td><pre> *         val = x;</pre></td></tr><tr><td data-num="8"></td><td><pre> *         next = null;</pre></td></tr><tr><td data-num="9"></td><td><pre> *     }</pre></td></tr><tr><td data-num="10"></td><td><pre> * }</pre></td></tr><tr><td data-num="11"></td><td><pre> */</pre></td></tr><tr><td data-num="12"></td><td><pre>public class Solution {</pre></td></tr><tr><td data-num="13"></td><td><pre>  public boolean hasCycle(ListNode head) {</pre></td></tr><tr><td data-num="14"></td><td><pre>    ListNode fast = head, slow = head;</pre></td></tr><tr><td data-num="15"></td><td><pre>    // 快指针走到末尾时停止</pre></td></tr><tr><td data-num="16"></td><td><pre>    while (fast != null &amp;&amp; fast.next != null) {</pre></td></tr><tr><td data-num="17"></td><td><pre>      slow = slow.next;</pre></td></tr><tr><td data-num="18"></td><td><pre>      fast = fast.next.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>      // 快慢指针相遇，说明含有环</pre></td></tr><tr><td data-num="20"></td><td><pre>      if (slow == fast) {</pre></td></tr><tr><td data-num="21"></td><td><pre>        return true;</pre></td></tr><tr><td data-num="22"></td><td><pre>      }</pre></td></tr><tr><td data-num="23"></td><td><pre>    }</pre></td></tr><tr><td data-num="24"></td><td><pre>    return false;</pre></td></tr><tr><td data-num="25"></td><td><pre>  }</pre></td></tr><tr><td data-num="26"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[19]删除链表的倒数第 N 个结点]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/36462e02.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/36462e02.html</guid>
            <pubDate>Wed, 03 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for singly-linked list.</pre></td></tr><tr><td data-num="3"></td><td><pre> * public class ListNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     ListNode next;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     ListNode() {}</pre></td></tr><tr><td data-num="7"></td><td><pre> *     ListNode(int val) { this.val = val; }</pre></td></tr><tr><td data-num="8"></td><td><pre> *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }</pre></td></tr><tr><td data-num="9"></td><td><pre> * }</pre></td></tr><tr><td data-num="10"></td><td><pre> */</pre></td></tr><tr><td data-num="11"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="12"></td><td><pre>  public ListNode removeNthFromEnd(ListNode head, int n) {</pre></td></tr><tr><td data-num="13"></td><td><pre>    //删除倒数第N个,那我怎么知道N的位置,链表长度不是固定的</pre></td></tr><tr><td data-num="14"></td><td><pre>    //假设是1到x,那么第倒数第N个应该是 X - N + 1</pre></td></tr><tr><td data-num="15"></td><td><pre>    //Y = X - N + 1 ,则</pre></td></tr><tr><td data-num="16"></td><td><pre>    // 虚拟头结点</pre></td></tr><tr><td data-num="17"></td><td><pre>    ListNode pre = new ListNode(0);</pre></td></tr><tr><td data-num="18"></td><td><pre>    pre.next = head;</pre></td></tr><tr><td data-num="19"></td><td><pre>    ListNode start = pre, end = pre;</pre></td></tr><tr><td data-num="20"></td><td><pre>    // p1 先走 n 步</pre></td></tr><tr><td data-num="21"></td><td><pre>    while (n != 0) {</pre></td></tr><tr><td data-num="22"></td><td><pre>      start = start.next;</pre></td></tr><tr><td data-num="23"></td><td><pre>      n--;</pre></td></tr><tr><td data-num="24"></td><td><pre>    }</pre></td></tr><tr><td data-num="25"></td><td><pre>    // p1 和 p2 同时走 x - n 步,当p1走完时，p2走了 x-n步，停在X - N + 1上</pre></td></tr><tr><td data-num="26"></td><td><pre>    while (start.next != null) {</pre></td></tr><tr><td data-num="27"></td><td><pre>      start = start.next;</pre></td></tr><tr><td data-num="28"></td><td><pre>      end = end.next;</pre></td></tr><tr><td data-num="29"></td><td><pre>    }</pre></td></tr><tr><td data-num="30"></td><td><pre>    end.next = end.next.next;</pre></td></tr><tr><td data-num="31"></td><td><pre>    return pre.next;</pre></td></tr><tr><td data-num="32"></td><td><pre>  }</pre></td></tr><tr><td data-num="33"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[876]链表的中间结点]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/6d80ff7f.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/6d80ff7f.html</guid>
            <pubDate>Wed, 03 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for singly-linked list.</pre></td></tr><tr><td data-num="3"></td><td><pre> * public class ListNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     ListNode next;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     ListNode() {}</pre></td></tr><tr><td data-num="7"></td><td><pre> *     ListNode(int val) { this.val = val; }</pre></td></tr><tr><td data-num="8"></td><td><pre> *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }</pre></td></tr><tr><td data-num="9"></td><td><pre> * }</pre></td></tr><tr><td data-num="10"></td><td><pre> */</pre></td></tr><tr><td data-num="11"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="12"></td><td><pre>  public ListNode middleNode(ListNode head) {</pre></td></tr><tr><td data-num="13"></td><td><pre>    //简单的话应该是循环一遍，获取长度，如果是偶数则长度加一，然后获取中点，再循环一次</pre></td></tr><tr><td data-num="14"></td><td><pre>    // 快慢指针初始化指向 head</pre></td></tr><tr><td data-num="15"></td><td><pre>    ListNode slow = head, fast = head;</pre></td></tr><tr><td data-num="16"></td><td><pre>    // 快指针走到末尾时停止</pre></td></tr><tr><td data-num="17"></td><td><pre>    while (fast != null &amp;&amp; fast.next != null) {</pre></td></tr><tr><td data-num="18"></td><td><pre>      // 慢指针走一步，快指针走两步</pre></td></tr><tr><td data-num="19"></td><td><pre>      slow = slow.next;</pre></td></tr><tr><td data-num="20"></td><td><pre>      fast = fast.next.next;</pre></td></tr><tr><td data-num="21"></td><td><pre>    }</pre></td></tr><tr><td data-num="22"></td><td><pre>    // 慢指针指向中点</pre></td></tr><tr><td data-num="23"></td><td><pre>    return slow;</pre></td></tr><tr><td data-num="24"></td><td><pre>  }</pre></td></tr><tr><td data-num="25"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[剑指 Offer II 022]链表中环的入口节点]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/9862a150.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/9862a150.html</guid>
            <pubDate>Wed, 03 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * Definition for singly-linked list.</pre></td></tr><tr><td data-num="3"></td><td><pre> * class ListNode {</pre></td></tr><tr><td data-num="4"></td><td><pre> *     int val;</pre></td></tr><tr><td data-num="5"></td><td><pre> *     ListNode next;</pre></td></tr><tr><td data-num="6"></td><td><pre> *     ListNode(int x) {</pre></td></tr><tr><td data-num="7"></td><td><pre> *         val = x;</pre></td></tr><tr><td data-num="8"></td><td><pre> *         next = null;</pre></td></tr><tr><td data-num="9"></td><td><pre> *     }</pre></td></tr><tr><td data-num="10"></td><td><pre> * }</pre></td></tr><tr><td data-num="11"></td><td><pre> */</pre></td></tr><tr><td data-num="12"></td><td><pre>public class Solution {</pre></td></tr><tr><td data-num="13"></td><td><pre>  public ListNode detectCycle(ListNode head) {</pre></td></tr><tr><td data-num="14"></td><td><pre>    //如果用两个指针</pre></td></tr><tr><td data-num="15"></td><td><pre>    ListNode fast = head, slow = head;</pre></td></tr><tr><td data-num="16"></td><td><pre>    while (fast != null &amp;&amp; fast.next != null) {</pre></td></tr><tr><td data-num="17"></td><td><pre>      fast = fast.next.next;</pre></td></tr><tr><td data-num="18"></td><td><pre>      slow = slow.next;</pre></td></tr><tr><td data-num="19"></td><td><pre>      if (fast == slow) {</pre></td></tr><tr><td data-num="20"></td><td><pre>        break;</pre></td></tr><tr><td data-num="21"></td><td><pre>      }</pre></td></tr><tr><td data-num="22"></td><td><pre>    }</pre></td></tr><tr><td data-num="23"></td><td><pre>    if (fast == null || fast.next == null) {</pre></td></tr><tr><td data-num="24"></td><td><pre>      return null;</pre></td></tr><tr><td data-num="25"></td><td><pre>    }</pre></td></tr><tr><td data-num="26"></td><td><pre>    slow = head;</pre></td></tr><tr><td data-num="27"></td><td><pre>    while (slow!=fast){</pre></td></tr><tr><td data-num="28"></td><td><pre>        slow = slow.next;</pre></td></tr><tr><td data-num="29"></td><td><pre>        fast = fast.next;</pre></td></tr><tr><td data-num="30"></td><td><pre>    }</pre></td></tr><tr><td data-num="31"></td><td><pre>    return slow;</pre></td></tr><tr><td data-num="32"></td><td><pre>  }</pre></td></tr><tr><td data-num="33"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
        </item>
        <item>
            <title><![CDATA[[2073]买票需要的时间]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/340249a9/76a66db0.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/340249a9/76a66db0.html</guid>
            <pubDate>Thu, 04 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>    public int timeRequiredToBuy(int[] tickets, int k) {</pre></td></tr><tr><td data-num="3"></td><td><pre>        int ret = 0;</pre></td></tr><tr><td data-num="4"></td><td><pre>        for (int i = 0; i &lt; tickets.length; i++) {</pre></td></tr><tr><td data-num="5"></td><td><pre>            if (i &lt;= k) {</pre></td></tr><tr><td data-num="6"></td><td><pre>                ret = ret + Math.min(tickets[i], tickets[k]);</pre></td></tr><tr><td data-num="7"></td><td><pre>            } else {</pre></td></tr><tr><td data-num="8"></td><td><pre>                ret = ret + Math.min(tickets[i], tickets[k] - 1);</pre></td></tr><tr><td data-num="9"></td><td><pre>            }</pre></td></tr><tr><td data-num="10"></td><td><pre>        }</pre></td></tr><tr><td data-num="11"></td><td><pre>        return ret;</pre></td></tr><tr><td data-num="12"></td><td><pre>    }</pre></td></tr><tr><td data-num="13"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
        <item>
            <title><![CDATA[[160]相交链表]]></title>
            <link>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/389d18c2.html</link>
            <guid>https://blog.dragondyt.top/8612fa7f/b7e144d1/2362a8ea/389d18c2.html</guid>
            <pubDate>Thu, 04 Aug 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<figure class="highlight java">
<figcaption data-lang="java"></figcaption>
<div class="code-container">
<table><tr><td data-num="1"></td><td><pre>public class Solution {</pre></td></tr><tr><td data-num="2"></td><td><pre>  public ListNode getIntersectionNode(ListNode headA, ListNode headB) {</pre></td></tr><tr><td data-num="3"></td><td><pre>    // p1 指向 A 链表头结点，p2 指向 B 链表头结点</pre></td></tr><tr><td data-num="4"></td><td><pre>    ListNode p1 = headA, p2 = headB;</pre></td></tr><tr><td data-num="5"></td><td><pre>    while (p1 != p2) {</pre></td></tr><tr><td data-num="6"></td><td><pre>      // p1 走一步，如果走到 A 链表末尾，转到 B 链表</pre></td></tr><tr><td data-num="7"></td><td><pre>      if (p1 == null) {</pre></td></tr><tr><td data-num="8"></td><td><pre>        p1 = headB;</pre></td></tr><tr><td data-num="9"></td><td><pre>      } else {</pre></td></tr><tr><td data-num="10"></td><td><pre>        p1 = p1.next;</pre></td></tr><tr><td data-num="11"></td><td><pre>      }</pre></td></tr><tr><td data-num="12"></td><td><pre>      // p2 走一步，如果走到 B 链表末尾，转到 A 链表</pre></td></tr><tr><td data-num="13"></td><td><pre>      if (p2 == null) {</pre></td></tr><tr><td data-num="14"></td><td><pre>        p2 = headA;</pre></td></tr><tr><td data-num="15"></td><td><pre>      } else {</pre></td></tr><tr><td data-num="16"></td><td><pre>        p2 = p2.next;</pre></td></tr><tr><td data-num="17"></td><td><pre>      }</pre></td></tr><tr><td data-num="18"></td><td><pre>    }</pre></td></tr><tr><td data-num="19"></td><td><pre>    return p1;</pre></td></tr><tr><td data-num="20"></td><td><pre>  }</pre></td></tr><tr><td data-num="21"></td><td><pre>}</pre></td></tr></table>
<div class="operation"><span class="breakline-btn"><i class="ic i-align-left"></i></span><span class="copy-btn"><i class="ic i-clipboard"></i></span><span class="fullscreen-btn"><i class="ic i-expand"></i></span></div>
</div>
</figure>]]></content:encoded>
            <author>dragondyt@yandex.com (Dragon Dyt)</author>
            <category>undefined</category>
        </item>
    </channel>
</rss>